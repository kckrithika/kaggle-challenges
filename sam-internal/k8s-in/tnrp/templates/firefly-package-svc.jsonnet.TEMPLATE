local serviceDeployment = import "firefly-service-deployment.jsonnet.TEMPLATE";
local images = import "fireflyimages.jsonnet";
local portConfig = import "portconfig.jsonnet";
local configs = import "config.jsonnet";


serviceDeployment + {
    serviceConf:: {
        dindEnabled: true,
        healthPort: portConfig.firefly.package_mgmt,
        pool: if configs.estate == "prd-samtwo" then 'prd-sam_tnrp_merger' else configs.estate,
    },
    serviceName:: "firefly-package",
    role:: "firefly",
    dockerImage:: images.fireflypackage,
    portAnnotations:: [
        {
               port: portConfig.firefly.package_mgmt,
               targetPort: portConfig.firefly.package_mgmt,
               lbtype: "http",
               tls: false,
               reencrypt: false,
               sticky: 0,
        },
    ],
    portConfigs:: [ portConfig.service_health_port('package_mgmt_nodeport'), ],
    replicas:: 3,
    command:: ["java", "-jar", "/package-svc.jar", "--spring.profiles.active=" + configs.estate],
    env:: super.commonEnv + [
        {
            name: "serviceMode",
            value: "multi",
        },
    ],
    volumeMounts:: super.commonVolMounts + [
        {
            name: "docker-build-dir",
            mountPath: "/tmp",
        },
    ],
}
