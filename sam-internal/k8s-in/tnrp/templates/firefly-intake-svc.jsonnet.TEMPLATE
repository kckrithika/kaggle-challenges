local serviceDeployment = import "firefly-service-deployment.jsonnet.TEMPLATE";
local images = import "fireflyimages.jsonnet";
local portConfig = import "portconfig.jsonnet";
local configs = import "config.jsonnet";
local firefly_feature_flags = import "firefly_feature_flags.jsonnet";


serviceDeployment + {
    serviceConf:: {
        dindEnabled: false,
        healthPort: portConfig.firefly.intake_mgmt,
        pool: if configs.estate == "prd-samtwo" then 'prd-sam_tnrp_signer' else configs.estate,
    },
    serviceName:: "firefly-intake",
    role:: "firefly",
    dockerImage:: images.fireflyintake,
    portAnnotations:: [ 
        {
               port: portConfig.firefly.intake_mgmt,
               targetPort: portConfig.firefly.intake_mgmt,
               lbtype: "http",
               tls: false,
               reencrypt: false,
               sticky: 0,
        },
        {
               port: portConfig.firefly.intake_http,
               targetPort: portConfig.firefly.intake_http,
               lbtype: "http",
               tls: false,
               reencrypt: false,
               sticky: 0,
        },
        {
               port: portConfig.firefly.intake_https,
               targetPort: portConfig.firefly.intake_https,
               lbtype: "http",
               tls: true,
               reencrypt: false,
               sticky: 0,
        },
    ],
    portConfigs:: [
        {
            name: 'intake-http',
            protocol: 'TCP',
            port: portConfig.firefly.intake_http,
            targetPort: portConfig.firefly.intake_http,
            [if !firefly_feature_flags.is_slb_enabled then "nodePort"]: portConfig.firefly.intake_http_nodeport,
        },
        {
            name: 'intake-https',
            protocol: 'TCP',
            port: portConfig.firefly.intake_https,
            targetPort: portConfig.firefly.intake_https,
            [if !firefly_feature_flags.is_slb_enabled then "nodePort"]: portConfig.firefly.intake_https_nodeport,
        },
        {
            name: 'admin-port',
            protocol: 'TCP',
            port: portConfig.firefly.intake_mgmt,
            targetPort: portConfig.firefly.intake_mgmt,
            [if !firefly_feature_flags.is_slb_enabled then "nodePort"]: portConfig.firefly.intake_mgmt_nodeport,
        },
    ],
    replicas:: 1,
    command:: ["java", "-jar", "/intake-svc.jar", "--spring.profiles.active=" + configs.estate],
    env:: super.commonEnv ,
    volumeMounts:: super.commonVolMounts,
}
