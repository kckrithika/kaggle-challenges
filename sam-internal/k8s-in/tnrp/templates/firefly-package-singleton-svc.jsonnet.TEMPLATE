local serviceDeployment = import "firefly-service-deployment.jsonnet.TEMPLATE";
local images = import "fireflyimages.jsonnet";
local portConfig = import "portconfig.jsonnet";
local configs = import "config.jsonnet";
local packageConfig = import "configs/firefly-package.jsonnet";


serviceDeployment {
    serviceConf:: {
        dindEnabled: false,
        healthPort: portConfig.firefly.package_mgmt,
        pool: if configs.estate == "prd-samtwo" then 'prd-sam_tnrp_merger' else configs.estate,
        port: [],
    },
    serviceName:: "firefly-package-singleton",
    role:: "firefly",
    dockerImage:: images.fireflypackage,
    portAnnotations:: [
        {
               port: portConfig.firefly.package_mgmt,
               targetPort: portConfig.firefly.package_mgmt,
               lbtype: "http",
               tls: false,
               reencrypt: false,
               sticky: 0,
        },
    ],
    portConfigs:: [portConfig.service_health_port('package_mgmt_nodeport')],
    replicas:: 1,
    command:: ["java", "-jar", "/package-svc.jar", "--spring.profiles.active=" + configs.estate, "--spring.config.location=/etc/firefly/config/"],
    env:: super.commonEnv + [
        {
            name: "SERVICE_MODE",
            value: "singleton",
        },
        {
            name: "CONFIG_VERSION",
            value: "4",
        },
        {
            name: "DARKLAUNCH",
            value: if configs.estate == "prd-samtwo" then "true" else "false",
        },
    ],
    volumeMounts:: super.commonVolMounts,
    data:: {
        "application.yml": std.manifestJson(packageConfig.config("firefly-package")),
    },
}
