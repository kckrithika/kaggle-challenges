## Logging settings.
##
## See http://rabbitmq.com/logging.html and https://github.com/erlang-lager/lager for details.
##
## Log direcrory, taken from the RABBITMQ_LOG_BASE env variable by default.
##
# log.dir = /var/log/rabbitmq
log.file.level = debug
log.console = true
log.console.level = debug
## Clustering
cluster_formation.peer_discovery_backend = rabbit_peer_discovery_classic_config
cluster_formation.classic_config.nodes.1 = rabbit@rabbitmq-0.%(domain)s
cluster_formation.classic_config.nodes.2 = rabbit@rabbitmq-1.%(domain)s
cluster_formation.classic_config.nodes.3 = rabbit@rabbitmq-2.%(domain)s
cluster_formation.randomized_startup_delay_range.min = 10
cluster_formation.randomized_startup_delay_range.max = 30
# Set to false if automatic removal of unknown/absent nodes
# is desired. This can be dangerous, see
#  * http://www.rabbitmq.com/cluster-formation.html#node-health-checks-and-cleanup
#  * https://groups.google.com/forum/#!msg/rabbitmq-users/wuOfzEywHXo/k8z_HWIkBgAJ
#cluster_formation.node_cleanup.only_log_warning = true
cluster_partition_handling = autoheal
## queue master locator
queue_master_locator=min-masters
## See http://www.rabbitmq.com/access-control.html#loopback-users
loopback_users.guest = false
# TLS Support
listeners.ssl.default = 5671
ssl_options.cacertfile = /etc/rabbitmq/ca/cacert.pem
ssl_options.certfile = /etc/rabbitmq/server/cert.pem
ssl_options.keyfile = /etc/rabbitmq/server/key.pem
ssl_options.verify = verify_peer
ssl_options.fail_if_no_peer_cert = true
auth_mechanisms.1 = EXTERNAL
auth_mechanisms.2 = PLAIN
#auth_mechanisms.2 = AMQP
# "internal" is an alias for rabbit_auth_backend_internal
auth_backends.1 = internal
## To use the TLS cert's CN instead of its DN as the username
#ssl_cert_login_from = common_name
# =======================================
# Management section
# =======================================
## Preload schema definitions from the following JSON file.
## Related doc guide: http://rabbitmq.com/management.html#load-definitions.
##
management.load_definitions = /etc/rabbitmq/definitions.json
## Log all requests to the management HTTP API to a file.
##
# This generates a crash report due to https://github.com/rabbitmq/rabbitmq-web-dispatch/pull/33
#management.http_log_dir = /var/log/rabbitmq/access.log
## Change the port on which the HTTP listener listens,
## specifying an interface for the web server to bind to.
## Also set the listener to use TLS and provide TLS options.
##
management.listener.port = 15671
management.listener.ssl  = true
management.listener.ssl_opts.cacertfile = /etc/rabbitmq/ca/cacert.pem
management.listener.ssl_opts.certfile   = /etc/rabbitmq/server/cert.pem
management.listener.ssl_opts.keyfile    = /etc/rabbitmq/server/key.pem
