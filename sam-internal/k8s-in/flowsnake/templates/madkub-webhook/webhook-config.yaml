apiVersion: admissionregistration.k8s.io/v1beta1
kind: MutatingWebhookConfiguration
metadata:
  name: madkub-injector-webhook-cfg
  labels:
    app: madkub-injector
webhooks:
  - name: madkub-injector.flowsnake.sfdc.net
    failurePolicy: "Fail"
    clientConfig:
      service:
        name: madkub-injector
        namespace: default
        path: "/"
      caBundle: ""
    rules:
      - operations: [ "CREATE", "UPDATE" ]
        apiGroups: [""]
        apiVersions: ["v1"]
        resources: ["pods"]
    namespaceSelector:
      matchLabels:
        madkub-injector: enabled
