global:
  hub: ops0-artifactrepo2-0-prd.data.sfdc.net/docker-sfci-dev/sfci/servicemesh/istio-packaging
  tag: 1.0.2
  k8sIngressSelector: ingress
  k8sIngressHttps: false
  proxy:
    image: proxy
    resources:
      requests:
        cpu: 10m
    concurrency: 0
    accessLogFile: /dev/stdout
    privileged: false
    enableCoreDump: false
    includeIPRanges: 127.1.2.3/32
    excludeIPRanges: ""
    includeInboundPorts: '*'
    excludeInboundPorts: ""
    autoInject: disabled
    envoyStatsd:
      enabled: false
      host: istio-statsd-prom-bridge
      port: 9125
  proxy_init:
    image: proxy_init
  imagePullPolicy: IfNotPresent
  controlPlaneSecurityEnabled: false
  disablePolicyChecks: false
  enableTracing: true
  mtls:
    enabled: false
  imagePullSecrets: null
  arch:
    amd64: 2
    s390x: 2
    ppc64le: 2
  oneNamespace: false
  configValidation: true
  meshExpansion: false
  meshExpansionILB: false
  defaultResources:
    requests:
      cpu: 10m
  hyperkube:
    hub: quay.io/coreos
    tag: v1.7.6_coreos.0
  priorityClassName: ""
  crds: true
ingress:
  enabled: false
  replicaCount: 1
  autoscaleMin: 1
  autoscaleMax: 5
  service:
    annotations: {}
    loadBalancerIP: ""
    type: LoadBalancer
    ports:
    - port: 80
      name: http
      nodePort: 32000
    - port: 443
      name: https
    selector:
      istio: ingress
gateways:
  enabled: true
  istio-ingressgateway:
    enabled: true
    labels:
      app: istio-ingressgateway
      istio: ingressgateway
    replicaCount: 1
    autoscaleMin: 1
    autoscaleMax: 5
    resources: {}
    cpu:
      targetAverageUtilization: 80
    loadBalancerIP: ""
    serviceAnnotations: {}
    type: LoadBalancer
    ports:
    - port: 80
      targetPort: 80
      name: http2
      nodePort: 32380
    - port: 443
      name: https
      nodePort: 32390
    - port: 32400
      name: tcp
      nodePort: 32400
    - port: 15011
      targetPort: 15011
      name: tcp-pilot-grpc-tls
    - port: 8060
      targetPort: 8060
      name: tcp-citadel-grpc-tls
    - port: 853
      targetPort: 853
      name: tcp-dns-tls
    secretVolumes:
    - name: ingressgateway-certs
      secretName: istio-ingressgateway-certs
      mountPath: /etc/istio/ingressgateway-certs
    - name: ingressgateway-ca-certs
      secretName: istio-ingressgateway-ca-certs
      mountPath: /etc/istio/ingressgateway-ca-certs
  istio-egressgateway:
    enabled: false
    labels:
      app: istio-egressgateway
      istio: egressgateway
    replicaCount: 1
    autoscaleMin: 1
    autoscaleMax: 5
    cpu:
      targetAverageUtilization: 80
    serviceAnnotations: {}
    type: ClusterIP
    ports:
    - port: 80
      name: http2
    - port: 443
      name: https
    secretVolumes:
    - name: egressgateway-certs
      secretName: istio-egressgateway-certs
      mountPath: /etc/istio/egressgateway-certs
    - name: egressgateway-ca-certs
      secretName: istio-egressgateway-ca-certs
      mountPath: /etc/istio/egressgateway-ca-certs
  istio-ilbgateway:
    enabled: false
    labels:
      app: istio-ilbgateway
      istio: ilbgateway
    replicaCount: 1
    autoscaleMin: 1
    autoscaleMax: 5
    resources:
      requests:
        cpu: 800m
        memory: 512Mi
    cpu:
      targetAverageUtilization: 80
    loadBalancerIP: ""
    serviceAnnotations:
      cloud.google.com/load-balancer-type: internal
    type: LoadBalancer
    ports:
    - port: 15011
      name: grpc-pilot-mtls
    - port: 15010
      name: grpc-pilot
    - port: 8060
      targetPort: 8060
      name: tcp-citadel-grpc-tls
    - port: 853
      name: tcp-dns
    secretVolumes:
    - name: ilbgateway-certs
      secretName: istio-ilbgateway-certs
      mountPath: /etc/istio/ilbgateway-certs
    - name: ilbgateway-ca-certs
      secretName: istio-ilbgateway-ca-certs
      mountPath: /etc/istio/ilbgateway-ca-certs
sidecarInjectorWebhook:
  enabled: true
  replicaCount: 1
  image: sidecar_injector
  enableNamespacesByDefault: false
galley:
  enabled: false
  replicaCount: 1
  image: galley
mixer:
  enabled: false
  replicaCount: 1
  autoscaleMin: 1
  autoscaleMax: 5
  image: mixer
  istio-policy:
    autoscaleEnabled: true
    autoscaleMin: 1
    autoscaleMax: 5
    cpu:
      targetAverageUtilization: 80
  istio-telemetry:
    autoscaleEnabled: true
    autoscaleMin: 1
    autoscaleMax: 5
    cpu:
      targetAverageUtilization: 80
  prometheusStatsdExporter:
    hub: docker.io/prom
    tag: v0.6.0
pilot:
  enabled: true
  replicaCount: 1
  autoscaleMin: 1
  autoscaleMax: 5
  image: pilot
  sidecar: true
  traceSampling: 100
  resources:
    requests:
      cpu: 500m
      memory: 2048Mi
  env:
    PILOT_PUSH_THROTTLE_COUNT: 100
    GODEBUG: gctrace=2
  cpu:
    targetAverageUtilization: 80
security:
  replicaCount: 1
  image: citadel
  selfSigned: true
  enabled: false
telemetry-gateway:
  gatewayName: ingressgateway
  grafanaEnabled: false
  prometheusEnabled: false
grafana:
  enabled: false
  replicaCount: 1
  image: grafana
  persist: false
  storageClassName: ""
  security:
    enabled: false
    adminUser: admin
    adminPassword: admin
  service:
    annotations: {}
    name: http
    type: ClusterIP
    externalPort: 3000
    internalPort: 3000
prometheus:
  enabled: false
  replicaCount: 1
  hub: docker.io/prom
  tag: v2.3.1
  service:
    annotations: {}
    nodePort:
      enabled: false
      port: 32090
servicegraph:
  enabled: false
  replicaCount: 1
  image: servicegraph
  service:
    annotations: {}
    name: http
    type: ClusterIP
    externalPort: 8088
    internalPort: 8088
  ingress:
    enabled: false
    hosts:
    - servicegraph.local
    annotations: null
    tls: null
  prometheusAddr: http://prometheus:9090
tracing:
  enabled: false
  provider: jaeger
  jaeger:
    hub: docker.io/jaegertracing
    tag: 1.5
    memory:
      max_traces: 50000
    ui:
      port: 16686
    ingress:
      enabled: false
      hosts:
      - jaeger.local
      annotations: null
      tls: null
  replicaCount: 1
  service:
    annotations: {}
    name: http
    type: ClusterIP
    externalPort: 9411
    internalPort: 9411
  ingress:
    enabled: false
    hosts:
    - tracing.local
    annotations: null
    tls: null
kiali:
  enabled: false
  replicaCount: 1
  hub: docker.io/kiali
  tag: istio-release-1.0
  ingress:
    enabled: false
    annotations: null
    tls: null
  dashboard:
    username: admin
    passphrase: admin
certmanager:
  enabled: false
  hub: quay.io/jetstack
  tag: v0.3.1
  resources: {}
