apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    manifestctl.sam.data.sfdc.net/swagger: disable
  labels:
    app: istio-ingressgateway
    release: istio
  name: istio-ingressgateway-service-account
  namespace: mesh-control-plane
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    manifestctl.sam.data.sfdc.net/swagger: disable
  name: istio-multi
  namespace: mesh-control-plane
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    manifestctl.sam.data.sfdc.net/swagger: disable
  labels:
    app: pilot
    release: istio
  name: istio-pilot-service-account
  namespace: mesh-control-plane
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    manifestctl.sam.data.sfdc.net/swagger: disable
  labels:
    app: sidecarInjectorWebhook
    istio: sidecar-injector
    release: istio
  name: istio-sidecar-injector-service-account
  namespace: mesh-control-plane
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    manifestctl.sam.data.sfdc.net/swagger: disable
  name: istio-ingressgateway-sds
  namespace: mesh-control-plane
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - watch
  - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    manifestctl.sam.data.sfdc.net/swagger: disable
  labels:
    app: ingressgateway
    release: istio
  name: istio-ingressgateway-mesh-control-plane
rules:
- apiGroups:
  - networking.istio.io
  resources:
  - virtualservices
  - destinationrules
  - gateways
  verbs:
  - get
  - watch
  - list
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    manifestctl.sam.data.sfdc.net/swagger: disable
  labels:
    app: pilot
    release: istio
  name: istio-pilot-mesh-control-plane
rules:
- apiGroups:
  - config.istio.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - rbac.istio.io
  resources:
  - '*'
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - networking.istio.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - authentication.istio.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - '*'
- apiGroups:
  - extensions
  resources:
  - ingresses
  - ingresses/status
  verbs:
  - '*'
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - get
  - list
  - watch
  - update
- apiGroups:
  - ""
  resources:
  - endpoints
  - pods
  - services
  - namespaces
  - nodes
  - secrets
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    manifestctl.sam.data.sfdc.net/swagger: disable
  name: istio-reader
rules:
- apiGroups:
  - ""
  resources:
  - nodes
  - pods
  - services
  - endpoints
  - replicationcontrollers
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - extensions
  - apps
  resources:
  - replicasets
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    manifestctl.sam.data.sfdc.net/swagger: disable
  labels:
    app: sidecarInjectorWebhook
    istio: sidecar-injector
    release: istio
  name: istio-sidecar-injector-mesh-control-plane
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - mutatingwebhookconfigurations
  verbs:
  - get
  - list
  - watch
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    manifestctl.sam.data.sfdc.net/swagger: disable
  name: istio-ingressgateway-sds
  namespace: mesh-control-plane
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: istio-ingressgateway-sds
subjects:
- kind: ServiceAccount
  name: istio-ingressgateway-service-account
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    manifestctl.sam.data.sfdc.net/swagger: disable
  labels:
    app: ingressgateway
    release: istio
  name: istio-ingressgateway-mesh-control-plane
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: istio-ingressgateway-mesh-control-plane
subjects:
- kind: ServiceAccount
  name: istio-ingressgateway-service-account
  namespace: mesh-control-plane
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    manifestctl.sam.data.sfdc.net/swagger: disable
  labels: {}
  name: istio-multi
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: istio-reader
subjects:
- kind: ServiceAccount
  name: istio-multi
  namespace: mesh-control-plane
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    manifestctl.sam.data.sfdc.net/swagger: disable
  labels:
    app: pilot
    release: istio
  name: istio-pilot-mesh-control-plane
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: istio-pilot-mesh-control-plane
subjects:
- kind: ServiceAccount
  name: istio-pilot-service-account
  namespace: mesh-control-plane
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    manifestctl.sam.data.sfdc.net/swagger: disable
  labels:
    app: sidecarInjectorWebhook
    istio: sidecar-injector
    release: istio
  name: istio-sidecar-injector-admin-role-binding-mesh-control-plane
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: istio-sidecar-injector-mesh-control-plane
subjects:
- kind: ServiceAccount
  name: istio-sidecar-injector-service-account
  namespace: mesh-control-plane
---
apiVersion: v1
data:
  config: |-
    policy: disabled
    template: |-
      rewriteAppHTTPProbe: false
      initContainers:
      [[ if ne (annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode) "NONE" ]]
      - name: istio-init
        image: %(proxyInitImage)s
        args:
        - "-p"
        - [[ .MeshConfig.ProxyListenPort ]]
        - "-u"
        - 7447
        - "-m"
        - [[ annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode ]]
        - "-i"
        - "[[ annotation .ObjectMeta `traffic.sidecar.istio.io/includeOutboundIPRanges`  "127.1.2.3/32"  ]]"
        - "-x"
        - "[[ annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundIPRanges`  ""  ]]"
        - "-b"
        - "[[ annotation .ObjectMeta `traffic.sidecar.istio.io/includeInboundPorts` (includeInboundPorts .Spec.Containers) ]]"
        - "-d"
        - "[[ excludeInboundPort (annotation .ObjectMeta `status.sidecar.istio.io/port`  15020 ) (annotation .ObjectMeta `traffic.sidecar.istio.io/excludeInboundPorts`  "" ) ]]"
        [[ if (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/kubevirtInterfaces`) -]]
        - "-k"
        - "[[ index .ObjectMeta.Annotations `traffic.sidecar.istio.io/kubevirtInterfaces` ]]"
        [[ end -]]
        imagePullPolicy: IfNotPresent
        resources:
          requests:
            cpu: 10m
            memory: 10Mi
          limits:
            cpu: 100m
            memory: 50Mi
        securityContext:
          runAsNonRoot: false
          runAsUser: 0
          capabilities:
            add:
            - NET_ADMIN
          restartPolicy: Always
      [[ end -]]
      containers:
      - name: istio-proxy
        image: [[ annotation .ObjectMeta `sidecar.istio.io/proxyImage`  "%(proxyImage)s"  ]]
        args:
        - proxy
        - sidecar
        - --domain
        - $(POD_NAMESPACE).svc.cluster.local
        - --configPath
        - [[ .ProxyConfig.ConfigPath ]]
        - --binaryPath
        - [[ .ProxyConfig.BinaryPath ]]
        - --serviceCluster
        [[ if ne "" (index .ObjectMeta.Labels "app") -]]
        - [[ index .ObjectMeta.Labels "app" ]].$(POD_NAMESPACE)
        [[ else -]]
        - [[ valueOrDefault .DeploymentMeta.Name "istio-proxy" ]].[[ valueOrDefault .DeploymentMeta.Namespace "default" ]]
        [[ end -]]
        - --drainDuration
        - [[ formatDuration .ProxyConfig.DrainDuration ]]
        - --parentShutdownDuration
        - [[ formatDuration .ProxyConfig.ParentShutdownDuration ]]
        - --discoveryAddress
        - [[ annotation .ObjectMeta `sidecar.istio.io/discoveryAddress` .ProxyConfig.DiscoveryAddress ]]
        - --zipkinAddress
        - [[ .ProxyConfig.GetTracing.GetZipkin.GetAddress ]]
        - --connectTimeout
        - [[ formatDuration .ProxyConfig.ConnectTimeout ]]
        - --proxyAdminPort
        - [[ .ProxyConfig.ProxyAdminPort ]]
        [[ if gt .ProxyConfig.Concurrency 0 -]]
        - --concurrency
        - [[ .ProxyConfig.Concurrency ]]
        [[ end -]]
        - --controlPlaneAuthPolicy
        - [[ annotation .ObjectMeta `sidecar.istio.io/controlPlaneAuthPolicy` .ProxyConfig.ControlPlaneAuthPolicy ]]
      [[- if (ne (annotation .ObjectMeta `status.sidecar.istio.io/port`  15020 ) "0") ]]
        - --statusPort
        - [[ annotation .ObjectMeta `status.sidecar.istio.io/port`  15020  ]]
        - --applicationPorts
        - "[[ annotation .ObjectMeta `readiness.status.sidecar.istio.io/applicationPorts` (applicationPorts .Spec.Containers) ]]"
      [[- end ]]
        - --envoyMetricsServiceAddress
        - switchboard.service-mesh:15001
        - --proxyLogLevel
        - trace
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: INSTANCE_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: ISTIO_META_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: ISTIO_META_CONFIG_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: ISTIO_META_INTERCEPTION_MODE
          value: [[ or (index .ObjectMeta.Annotations "sidecar.istio.io/interceptionMode") .ProxyConfig.InterceptionMode.String ]]
        [[ if .ObjectMeta.Annotations ]]
        - name: ISTIO_METAJSON_ANNOTATIONS
          value: |
                 [[ toJSON .ObjectMeta.Annotations ]]
        [[ end ]]
        [[ if .ObjectMeta.Labels ]]
        - name: ISTIO_METAJSON_LABELS
          value: |
                 [[ toJSON .ObjectMeta.Labels ]]
        [[ end ]]
        [[- if (isset .ObjectMeta.Annotations `sidecar.istio.io/bootstrapOverride`) ]]
        - name: ISTIO_BOOTSTRAP_OVERRIDE
          value: "/etc/istio/custom-bootstrap/custom_bootstrap.json"
        [[- end ]]
        ###
        # Start metadata fields used by switchboard for building metric tags.
        ###
        - name: ISTIO_META_hostname
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: ISTIO_META_namespace
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        ###
        # End metadata fields used by switchboard for building metric tags.
        ###
        ###
        # Start metadata fields for configuring sidecar metrics.
        ###
        # We currently want to include all envoy metrics, so the inclusion list includes all known prefixes.
        - name: ISTIO_METAJSON_METRICS_INCLUSIONS
          value: "{\"sidecar.istio.io/statsInclusionPrefixes\": \"access_log_file,cluster,cluster_manager,control_plane,http,http2,http_mixer_filter,listener,listener_manager,redis,runtime,server,stats,tcp,tcp_mixer_filter,tracing\"}"
        ###
        # End metadata fields for configuring sidecar metrics.
        ###
        imagePullPolicy: IfNotPresent
        [[ if (ne (annotation .ObjectMeta `status.sidecar.istio.io/port`  15020 ) "0") ]]
        readinessProbe:
          httpGet:
            path: /healthz/ready
            port: [[ annotation .ObjectMeta `status.sidecar.istio.io/port`  15020  ]]
          initialDelaySeconds: [[ annotation .ObjectMeta `readiness.status.sidecar.istio.io/initialDelaySeconds`  1  ]]
          periodSeconds: [[ annotation .ObjectMeta `readiness.status.sidecar.istio.io/periodSeconds`  2  ]]
          failureThreshold: [[ annotation .ObjectMeta `readiness.status.sidecar.istio.io/failureThreshold`  30  ]]
        [[ end -]]
        securityContext:
          readOnlyRootFilesystem: true
          [[ if eq (annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode) "TPROXY" -]]
          capabilities:
            add:
            - NET_ADMIN
          runAsGroup: 7447
          [[ else -]]
          runAsUser: 7447
          [[ end -]]
        restartPolicy: Always
        resources:
          [[ if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) -]]
          requests:
            [[ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) -]]
            cpu: "[[ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU` ]]"
            [[ end ]]
            [[ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) -]]
            memory: "[[ index .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory` ]]"
            [[ end ]]
        [[ else -]]
          limits:
            cpu: 2000m
            memory: 512Mi
          requests:
            cpu: 100m
            memory: 512Mi
        [[ end -]]
        volumeMounts:
        [[- if (isset .ObjectMeta.Annotations `sidecar.istio.io/bootstrapOverride`) ]]
        - mountPath: /etc/istio/custom-bootstrap
          name: custom-bootstrap-volume
        [[- end ]]
        - mountPath: /etc/istio/proxy
          name: istio-envoy
        - mountPath: /etc/certs/root-cert.pem # Maddog certs mapped to istio certs default locations.
          name: tls-server-cert               # Volume should be defined in Manifest file.
          subPath: ca.pem
        - mountPath: /etc/certs/cert-chain.pem
          name: tls-server-cert
          subPath: server/certificates/server.pem
        - mountPath: /etc/certs/key.pem
          name: tls-server-cert
          subPath: server/keys/server-key.pem
        - mountPath: /etc/certs/client.pem
          name: tls-client-cert
          subPath: client/certificates/client.pem
        - mountPath: /etc/certs/client-key.pem
          name: tls-client-cert
          subPath: client/keys/client-key.pem
      volumes:
      [[- if (isset .ObjectMeta.Annotations `sidecar.istio.io/bootstrapOverride`) ]]
      - name: custom-bootstrap-volume
        configMap:
          name: [[ annotation .ObjectMeta `sidecar.istio.io/bootstrapOverride` `` ]]
      [[- end ]]
      - emptyDir:
          medium: Memory
        name: istio-envoy
kind: ConfigMap
metadata:
  labels:
    app: istio
    istio: sidecar-injector
    release: istio
  name: istio-sidecar-injector
  namespace: mesh-control-plane
---
apiVersion: v1
data:
  mesh: |-
    disablePolicyChecks: false
    enableTracing: true
    accessLogFile: "/dev/stdout"
    accessLogFormat: ""
    accessLogEncoding: 'TEXT'
    ingressService: istio-ingressgateway
    dnsRefreshRate: 5s
    sdsUdsPath:
    enableSdsTokenMount: false
    sdsUseK8sSaJwt: false
    trustDomain:
    outboundTrafficPolicy:
      mode: ALLOW_ANY
    rootNamespace: mesh-control-plane
    proxyListenPort: 15006
    defaultConfig:
      connectTimeout: 10s
      configPath: "/etc/istio/proxy"
      binaryPath: "/usr/local/bin/envoy"
      serviceCluster: istio-proxy
      drainDuration: 45s
      parentShutdownDuration: 1m0s
      interceptionMode: REDIRECT
      proxyAdminPort: 15000
      concurrency: 2
      tracing:
        zipkin:
          address: zipkin.service-mesh:9411
      controlPlaneAuthPolicy: NONE
      discoveryAddress: istio-pilot.mesh-control-plane:15010
  meshNetworks: 'networks: {}'
kind: ConfigMap
metadata:
  labels:
    app: istio
    release: istio
  name: istio
  namespace: mesh-control-plane
---
apiVersion: v1
kind: Service
metadata:
  annotations: null
  labels:
    app: istio-ingressgateway
    istio: ingressgateway
    release: istio
  name: istio-ingressgateway
  namespace: mesh-control-plane
spec:
  ports:
  - name: tcp
    nodePort: 32400
    port: 32400
  - name: status-port
    port: 15020
    targetPort: 15020
  - name: http2
    nodePort: 32380
    port: 80
    targetPort: 80
  - name: https
    nodePort: 32390
    port: 443
  - name: https-kiali
    port: 15029
    targetPort: 15029
  - name: https-tracing
    port: 15032
    targetPort: 15032
  - name: tls
    port: 15443
    targetPort: 15443
  selector:
    app: istio-ingressgateway
    istio: ingressgateway
    release: istio
  type: LoadBalancer
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: pilot
    istio: pilot
    release: istio
  name: istio-pilot
  namespace: mesh-control-plane
spec:
  ports:
  - name: grpc-xds
    port: 15010
  - name: https-xds
    port: 15011
  - name: http-legacy-discovery
    port: 8080
  - name: http-monitoring
    port: 15014
  selector:
    istio: pilot
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: sidecarInjectorWebhook
    istio: sidecar-injector
    release: istio
  name: istio-sidecar-injector
  namespace: mesh-control-plane
spec:
  ports:
  - name: sidecar-injector-port
    port: 443
    targetPort: 15009
  selector:
    istio: sidecar-injector
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: istio-ingressgateway
    istio: ingressgateway
    release: istio
  name: istio-ingressgateway
  namespace: mesh-control-plane
spec:
  selector:
    matchLabels:
      app: istio-ingressgateway
      istio: ingressgateway
  template:
    metadata:
      annotations:
        madkub.sam.sfdc.net/allcerts: mcpIstioConfig.ingressGatewayMadkubAnnotations
        sidecar.istio.io/inject: "false"
      labels:
        app: istio-ingressgateway
        chart: gateways
        heritage: Tiller
        istio: ingressgateway
        name: istio-ingressgateway
        release: istio
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - amd64
            weight: 2
          - preference:
              matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - ppc64le
            weight: 2
          - preference:
              matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - s390x
            weight: 2
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - amd64
                - ppc64le
                - s390x
      containers:
      - args:
        - proxy
        - router
        - --domain
        - $(POD_NAMESPACE).svc.cluster.local
        - --log_output_level
        - info
        - --drainDuration
        - 45s
        - --parentShutdownDuration
        - 1m0s
        - --connectTimeout
        - 10s
        - --serviceCluster
        - istio-ingressgateway
        - --zipkinAddress
        - zipkin.service-mesh:9411
        - --proxyAdminPort
        - "15000"
        - --statusPort
        - "15020"
        - --controlPlaneAuthPolicy
        - NONE
        - --discoveryAddress
        - istio-pilot:15010
        env:
        - name: ESTATE
          value: mcpIstioConfig.istioEstate
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: INSTANCE_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.podIP
        - name: HOST_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        - name: ISTIO_META_POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: ISTIO_META_CONFIG_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: ISTIO_META_ROUTER_MODE
          value: sni-dnat
        image: mcpIstioConfig.proxyImage
        imagePullPolicy: IfNotPresent
        name: istio-proxy
        ports:
        - containerPort: 15020
        - containerPort: 80
        - containerPort: 443
        - containerPort: 15029
        - containerPort: 15032
        - containerPort: 15443
        - containerPort: 15090
          name: http-envoy-prom
          protocol: TCP
        readinessProbe:
          failureThreshold: 30
          httpGet:
            path: /healthz/ready
            port: 15020
            scheme: HTTP
          initialDelaySeconds: 1
          periodSeconds: 2
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            cpu: 2000m
            memory: 256Mi
          requests:
            cpu: 100m
            memory: 128Mi
        volumeMounts:
        - mountPath: /etc/pki_service
          name: maddog-certs
        - mountPath: /etc/certs/root-cert.pem
          name: tls-server-cert
          subPath: ca.pem
        - mountPath: /etc/certs/cert-chain.pem
          name: tls-server-cert
          subPath: server/certificates/server.pem
        - mountPath: /etc/certs/key.pem
          name: tls-server-cert
          subPath: server/keys/server-key.pem
        - mountPath: /etc/certs/client.pem
          name: tls-client-cert
          subPath: client/certificates/client.pem
        - mountPath: /etc/certs/client-key.pem
          name: tls-client-cert
          subPath: client/keys/client-key.pem
        - mountPath: /client-cert
          name: tls-client-cert
        - mountPath: /server-cert
          name: tls-server-cert
      - args:
        - /sam/madkub-client
        - --madkub-endpoint=%(madkubEndpoint)s
        - --maddog-endpoint=%(maddogEndpoint)s
        - --maddog-server-ca=/maddog-certs/ca/security-ca.pem
        - --madkub-server-ca=/maddog-certs/ca/cacerts.pem
        - --cert-folders=tls-client-cert:/client-cert/
        - --cert-folders=tls-server-cert:/server-cert/
        - --token-folder=/tokens/
        - --ca-folder=/maddog-certs/ca
        - --refresher
        - --run-init-for-refresher-mode
        env:
        - name: MADKUB_NODENAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: MADKUB_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: MADKUB_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: ESTATE
          value: mcpIstioConfig.istioEstate
        image: mcpIstioConfig.madkubImage
        imagePullPolicy: IfNotPresent
        name: madkub-refresher
        resources: {}
        volumeMounts:
        - mountPath: /client-cert
          name: tls-client-cert
        - mountPath: /server-cert
          name: tls-server-cert
        - mountPath: /maddog-certs/
          name: maddog-certs
        - mountPath: /tokens
          name: tokens
      initContainers:
      - args:
        - /sam/madkub-client
        - --madkub-endpoint=%(madkubEndpoint)s
        - --maddog-endpoint=%(maddogEndpoint)s
        - --maddog-server-ca=/maddog-certs/ca/security-ca.pem
        - --madkub-server-ca=/maddog-certs/ca/cacerts.pem
        - --cert-folders=tls-client-cert:/client-cert/
        - --cert-folders=tls-server-cert:/server-cert/
        - --token-folder=/tokens/
        - --ca-folder=/maddog-certs/ca
        env:
        - name: MADKUB_NODENAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: MADKUB_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: MADKUB_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        image: mcpIstioConfig.madkubImage
        imagePullPolicy: IfNotPresent
        name: madkub-init
        volumeMounts:
        - mountPath: /client-cert
          name: tls-client-cert
        - mountPath: /server-cert
          name: tls-server-cert
        - mountPath: /maddog-certs/
          name: maddog-certs
        - mountPath: /tokens
          name: tokens
      - command:
        - bash
        - -c
        - |
          set -ex
          chmod 775 -R /client-cert && chown -R 7447:7447 /client-cert
          chmod 775 -R /server-cert && chown -R 7447:7447 /server-cert
        image: mcpIstioConfig.permissionInitContainer
        imagePullPolicy: Always
        name: permissionsetterinitcontainer
        securityContext:
          runAsNonRoot: false
          runAsUser: 0
        volumeMounts:
        - mountPath: /client-cert
          name: tls-client-cert
        - mountPath: /server-cert
          name: tls-server-cert
      nodeSelector:
        pool: mcpIstioConfig.istioEstate
      serviceAccountName: istio-ingressgateway-service-account
      volumes:
      - hostPath:
          path: /etc/pki_service
        name: maddog-certs
      - emptyDir:
          medium: Memory
        name: tls-client-cert
      - emptyDir:
          medium: Memory
        name: tls-server-cert
      - emptyDir:
          medium: Memory
        name: tokens
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    checksum/config-volume: f8da08b6b8c170dde721efd680270b2901e750d4aa186ebb6c22bef5b78a43f9
  labels:
    app: pilot
    istio: pilot
    release: istio
  name: istio-pilot
  namespace: mesh-control-plane
spec:
  selector:
    matchLabels:
      app: pilot
      istio: pilot
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
      labels:
        app: pilot
        chart: pilot
        heritage: Tiller
        istio: pilot
        name: istio-pilot
        release: istio
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - amd64
            weight: 2
          - preference:
              matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - ppc64le
            weight: 2
          - preference:
              matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - s390x
            weight: 2
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - amd64
                - ppc64le
                - s390x
      containers:
      - args:
        - discovery
        - --monitoringAddr=:15014
        - --domain
        - cluster.local
        - --secureGrpcAddr
        - ""
        - --keepaliveMaxServerConnectionAge
        - 30m
        - --appNamespace
        - service-mesh
        - --log_output_level
        - info
        env:
        - name: ESTATE
          value: mcpIstioConfig.istioEstate
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: GODEBUG
          value: gctrace=1
        - name: PILOT_PUSH_THROTTLE
          value: "100"
        - name: PILOT_TRACE_SAMPLING
          value: "1"
        - name: PILOT_DISABLE_XDS_MARSHALING_TO_ANY
          value: "1"
        image: mcpIstioConfig.pilotImage
        imagePullPolicy: IfNotPresent
        name: discovery
        ports:
        - containerPort: 15011
        - containerPort: 8080
        - containerPort: 15010
        readinessProbe:
          httpGet:
            path: /ready
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 30
          timeoutSeconds: 5
        resources:
          requests:
            cpu: 500m
            memory: 2048Mi
        volumeMounts:
        - mountPath: /etc/istio/config
          name: config-volume
      - args:
        - --debug-mode
        - "true"
        env:
        - name: FUNCTION_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: SETTINGS_SUPERPOD
          value: mcpIstioConfig.superpod
        - name: SETTINGS_PATH
          value: mcpIstioConfig.settingsPath
        - name: SFDC_METRICS_SERVICE_HOST
          value: mcpIstioConfig.funnelHost
        - name: SFDC_METRICS_SERVICE_PORT
          value: mcpIstioConfig.funnelPort
        - name: ESTATE
          value: mcpIstioConfig.istioEstate
        image: mcpIstioConfig.metricsScraperImage
        imagePullPolicy: Always
        name: metrics-scraper
        readinessProbe:
          exec:
            command:
            - /bin/true
          initialDelaySeconds: 5
          periodSeconds: 30
          timeoutSeconds: 5
      nodeSelector:
        pool: mcpIstioConfig.istioEstate
      serviceAccountName: istio-pilot-service-account
      volumes:
      - configMap:
          name: istio
        name: config-volume
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: sidecarInjectorWebhook
    istio: sidecar-injector
    release: istio
  name: istio-sidecar-injector
  namespace: mesh-control-plane
spec:
  replicas: 1
  selector:
    matchLabels:
      istio: sidecar-injector
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      annotations:
        madkub.sam.sfdc.net/allcerts: mcpIstioConfig.sidecarInjectorMadkubAnnotations
        sidecar.istio.io/inject: "false"
      labels:
        app: sidecarInjectorWebhook
        chart: sidecarInjectorWebhook
        heritage: Tiller
        istio: sidecar-injector
        name: istio-sidecar-injector
        release: istio
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - amd64
            weight: 2
          - preference:
              matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - ppc64le
            weight: 2
          - preference:
              matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - s390x
            weight: 2
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - amd64
                - ppc64le
                - s390x
      containers:
      - args:
        - --caCertFile=/server-cert/ca.pem
        - --tlsCertFile=/server-cert/server/certificates/server.pem
        - --tlsKeyFile=/server-cert/server/keys/server-key.pem
        - --injectConfig=/etc/istio/inject/config
        - --meshConfig=/etc/istio/config/mesh
        - --healthCheckInterval=2s
        - --healthCheckFile=/health
        - --port=15009
        env:
        - name: ESTATE
          value: mcpIstioConfig.istioEstate
        image: mcpIstioConfig.sidecarInjectorImage
        imagePullPolicy: IfNotPresent
        livenessProbe:
          exec:
            command:
            - /usr/local/bin/sidecar-injector
            - probe
            - --probe-path=/health
            - --interval=4s
          initialDelaySeconds: 4
          periodSeconds: 4
        name: sidecar-injector-webhook
        ports:
        - containerPort: 15009
        readinessProbe:
          exec:
            command:
            - /usr/local/bin/sidecar-injector
            - probe
            - --probe-path=/health
            - --interval=4s
          initialDelaySeconds: 4
          periodSeconds: 4
        resources:
          requests:
            cpu: 10m
        volumeMounts:
        - mountPath: /etc/pki_service
          name: maddog-certs
        - mountPath: /server-cert
          name: tls-server-cert
        - mountPath: /etc/istio/config
          name: config-volume
          readOnly: true
        - mountPath: /etc/istio/inject
          name: inject-config
          readOnly: true
      - args:
        - /sam/madkub-client
        - --madkub-endpoint=%(madkubEndpoint)s
        - --maddog-endpoint=%(maddogEndpoint)s
        - --maddog-server-ca=/maddog-certs/ca/security-ca.pem
        - --madkub-server-ca=/maddog-certs/ca/cacerts.pem
        - --cert-folders=tls-server-cert:/server-cert/
        - --token-folder=/tokens/
        - --requested-cert-type=client
        - --ca-folder=/maddog-certs/ca
        - --refresher
        - --run-init-for-refresher-mode
        env:
        - name: MADKUB_NODENAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: MADKUB_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: MADKUB_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: ESTATE
          value: mcpIstioConfig.istioEstate
        image: mcpIstioConfig.madkubImage
        imagePullPolicy: IfNotPresent
        name: madkub-refresher
        resources: {}
        volumeMounts:
        - mountPath: /server-cert
          name: tls-server-cert
        - mountPath: /maddog-certs/
          name: maddog-certs
        - mountPath: /tokens
          name: tokens
      initContainers:
      - args:
        - /sam/madkub-client
        - --madkub-endpoint=%(madkubEndpoint)s
        - --maddog-endpoint=%(maddogEndpoint)s
        - --maddog-server-ca=/maddog-certs/ca/security-ca.pem
        - --madkub-server-ca=/maddog-certs/ca/cacerts.pem
        - --cert-folders=tls-server-cert:/server-cert/
        - --token-folder=/tokens/
        - --requested-cert-type=client
        - --ca-folder=/maddog-certs/ca
        env:
        - name: MADKUB_NODENAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: MADKUB_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: MADKUB_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        image: mcpIstioConfig.madkubImage
        imagePullPolicy: IfNotPresent
        name: madkub-init
        volumeMounts:
        - mountPath: /server-cert
          name: tls-server-cert
        - mountPath: /maddog-certs/
          name: maddog-certs
        - mountPath: /tokens
          name: tokens
      - command:
        - bash
        - -c
        - |
          set -ex
          chmod 775 -R /client-cert && chown -R 7447:7447 /client-cert
          chmod 775 -R /server-cert && chown -R 7447:7447 /server-cert
        image: mcpIstioConfig.permissionInitContainer
        imagePullPolicy: Always
        name: permissionsetterinitcontainer
        securityContext:
          runAsNonRoot: false
          runAsUser: 0
        volumeMounts:
        - mountPath: /client-cert
          name: tls-client-cert
        - mountPath: /server-cert
          name: tls-server-cert
      nodeSelector:
        master: "true"
      serviceAccountName: istio-sidecar-injector-service-account
      volumes:
      - hostPath:
          path: /etc/pki_service
        name: maddog-certs
      - emptyDir:
          medium: Memory
        name: tls-client-cert
      - emptyDir:
          medium: Memory
        name: tls-server-cert
      - emptyDir:
          medium: Memory
        name: tokens
      - configMap:
          name: istio
        name: config-volume
      - configMap:
          items:
          - key: config
            path: config
          name: istio-sidecar-injector
        name: inject-config
---
apiVersion: admissionregistration.k8s.io/v1beta1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    manifestctl.sam.data.sfdc.net/swagger: disable
  labels:
    app: sidecarInjectorWebhook
    release: istio
  name: istio-sidecar-injector
webhooks:
- clientConfig:
    caBundle: ""
    service:
      name: istio-sidecar-injector
      namespace: mesh-control-plane
      path: /inject
  failurePolicy: Fail
  name: sidecar-injector.istio.io
  namespaceSelector:
    matchLabels:
      istio-injection: enabled
  rules:
  - apiGroups:
    - ""
    apiVersions:
    - v1
    operations:
    - CREATE
    resources:
    - pods
---
apiVersion: autoscaling/v2beta1
kind: HorizontalPodAutoscaler
metadata:
  annotations:
    manifestctl.sam.data.sfdc.net/swagger: disable
  labels:
    app: ingressgateway
    release: istio
  name: istio-ingressgateway
  namespace: mesh-control-plane
spec:
  maxReplicas: 5
  metrics:
  - resource:
      name: cpu
      targetAverageUtilization: 80
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1beta1
    kind: Deployment
    name: istio-ingressgateway
---
apiVersion: autoscaling/v2beta1
kind: HorizontalPodAutoscaler
metadata:
  annotations:
    manifestctl.sam.data.sfdc.net/swagger: disable
  labels:
    app: pilot
    release: istio
  name: istio-pilot
  namespace: mesh-control-plane
spec:
  maxReplicas: 5
  metrics:
  - resource:
      name: cpu
      targetAverageUtilization: 80
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1beta1
    kind: Deployment
    name: istio-pilot
