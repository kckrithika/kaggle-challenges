apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    manifestctl.sam.data.sfdc.net/swagger: disable
  name: istio-ingressgateway
  namespace: core-on-sam-sp2
spec:
  selector:
    matchLabels:
      app: istio-ingressgateway
      istio: ingressgateway
  template:
    metadata:
      annotations:
        madkub.sam.sfdc.net/allcerts: mcpIstioConfig.ingressGatewayMadkubAnnotations
      labels:
        app: istio-ingressgateway
        istio: ingressgateway
        name: istio-ingressgateway
        cluster: mcpIstioConfig.istioEstate
    spec:
      containers:
      - args:
        - proxy
        - router
        - --domain
        - $(POD_NAMESPACE).svc.cluster.local
        - --log_output_level
        - default:info
        - --drainDuration
        - 45s
        - --parentShutdownDuration
        - 1m0s
        - --connectTimeout
        - 10s
        - --serviceCluster
        - istio-ingressgateway
        - --zipkinAddress
        - zipkin.service-mesh:9411
        - --envoyMetricsService
        - '{"address":"switchboard.service-mesh:15001","tls_settings":{"mode":2,"client_certificate":"/client-certs/client/certificates/client.pem","private_key":"/client-certs/client/keys/client-key.pem","ca_certificates":"/client-certs/ca.pem"},"tcp_keepalive":{"probes":3,"time":{"seconds":10},"interval":{"seconds":10}}}'
        - --proxyAdminPort
        - "15373"
        - --statusPort
        - "15020"
        - --controlPlaneAuthPolicy
        - MUTUAL_TLS
        - --discoveryAddress
        - istio-pilot.mesh-control-plane:15011
        env:
        - name: ESTATE
          value: mcpIstioConfig.casamEstate
        - name: ISTIO_META_superpod
          value: mcpIstioConfig.superpod
        - name: ISTIO_META_settings_path
          value: mcpIstioConfig.ingressGatewaySettingsPath
        - name: ISTIO_META_hostname
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: ISTIO_META_namespace
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: ISTIO_METAJSON_METRICS_INCLUSIONS
          value: "{\"sidecar.istio.io/statsInclusionPrefixes\": \"access_log_file,cluster,cluster_manager,control_plane,http,http2,http_mixer_filter,listener,listener_manager,redis,runtime,server,stats,tcp,tcp_mixer_filter,tracing\"}"
        - name: ISTIO_META_TLS_CLIENT_CERT_CHAIN
          value: /client-certs/client/certificates/client.pem
        - name: ISTIO_META_TLS_CLIENT_KEY
          value: /client-certs/client/keys/client-key.pem
        - name: ISTIO_META_TLS_CLIENT_ROOT_CERT
          value: /client-certs/ca.pem
        - name: ISTIO_META_TLS_SERVER_CERT_CHAIN
          value: /server-certs/server/certificates/server.pem
        - name: ISTIO_META_TLS_SERVER_KEY
          value: /server-certs/server/keys/server-key.pem
        - name: ISTIO_META_TLS_SERVER_ROOT_CERT
          value: /server-certs/ca.pem
        - name: ISTIO_META_kubernetes_cluster_name
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['cluster']
        name: istio-proxy
        ports:
        # coreapp https
        - containerPort: 8085
        - $patch: replace
        resources:
          limits:
            memory: 1024Mi
          requests:
            memory: 1024Mi
        securityContext:
          readOnlyRootFilesystem: true
          runAsUser: 1337
        volumeMounts:
        - mountPath: /client-certs
          name: tls-client-cert
        - mountPath: /server-certs
          name: tls-server-cert
        - mountPath: /etc/istio/proxy
          name: istio-envoy
        - $patch: delete
          mountPath: /etc/certs
        - $patch: delete
          mountPath: /etc/istio/ingressgateway-ca-certs
        - $patch: delete
          mountPath: /etc/istio/ingressgateway-certs
      - args:
        - /sam/madkub-client
        - --madkub-endpoint=%(madkubEndpoint)s
        - --maddog-endpoint=%(maddogEndpoint)s
        - --maddog-server-ca=/maddog-certs/ca/security-ca.pem
        - --madkub-server-ca=/maddog-certs/ca/cacerts.pem
        - --cert-folders=tls-client-cert:/client-cert/
        - --cert-folders=tls-server-cert:/server-cert/
        - --token-folder=/tokens/
        - --ca-folder=/maddog-certs/ca
        - --refresher
        - --run-init-for-refresher-mode
        env:
        - name: MADKUB_NODENAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: MADKUB_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: MADKUB_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: ESTATE
          value: mcpIstioConfig.casamEstate  
        image: mcpIstioConfig.madkubImage
        imagePullPolicy: IfNotPresent
        name: madkub-refresher
        resources: {}
        volumeMounts:
        - mountPath: /client-cert
          name: tls-client-cert
        - mountPath: /server-cert
          name: tls-server-cert
        - mountPath: /maddog-certs/
          name: maddog-certs
        - mountPath: /tokens
          name: tokens
      initContainers:
      - args:
        - /sam/madkub-client
        - --madkub-endpoint=%(madkubEndpoint)s
        - --maddog-endpoint=%(maddogEndpoint)s
        - --maddog-server-ca=/maddog-certs/ca/security-ca.pem
        - --madkub-server-ca=/maddog-certs/ca/cacerts.pem
        - --cert-folders=tls-client-cert:/client-cert/
        - --cert-folders=tls-server-cert:/server-cert/
        - --token-folder=/tokens/
        - --ca-folder=/maddog-certs/ca
        env:
        - name: MADKUB_NODENAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: MADKUB_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: MADKUB_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        image: mcpIstioConfig.madkubImage
        imagePullPolicy: IfNotPresent
        name: madkub-init
        volumeMounts:
        - mountPath: /client-cert
          name: tls-client-cert
        - mountPath: /server-cert
          name: tls-server-cert
        - mountPath: /maddog-certs/
          name: maddog-certs
        - mountPath: /tokens
          name: tokens
      - command:
        - bash
        - -c
        - |
          set -ex
          chmod 775 -R /client-cert && chown -R 7447:7447 /client-cert
          chmod 775 -R /server-cert && chown -R 7447:7447 /server-cert
        image: mcpIstioConfig.permissionInitContainer
        imagePullPolicy: Always
        name: permissionsetterinitcontainer
        securityContext:
          runAsNonRoot: false
          runAsUser: 0
        volumeMounts:
        - mountPath: /client-cert
          name: tls-client-cert
        - mountPath: /server-cert
          name: tls-server-cert
      nodeSelector:
        pool: mcpIstioConfig.casamEstate
      volumes:
      - hostPath:
          path: /etc/pki_service
        name: maddog-certs
      - emptyDir:
          medium: Memory
        name: tls-client-cert
      - emptyDir:
          medium: Memory
        name: tls-server-cert
      - emptyDir:
          medium: Memory
        name: tokens
      - emptyDir:
          medium: Memory
        name: istio-envoy
      - $patch: delete
        name: ingressgateway-ca-certs
      - $patch: delete
        name: ingressgateway-certs
      - $patch: delete
        name: istio-certs