{
  "v1": {
    "config": null,
    "helmValues": "# Common settings.\nglobal:\n  # Default hub for Istio images.\n  # Releases are published to docker hub under 'istio' project.\n  # Daily builds from prow are on gcr.io, and nightly builds from circle on docker.io/istionightly\n  hub: gcr.io/istio-release\n  # Default tag for Istio images.\n  tag: release-1.0-latest-daily\n  # Gateway used for legacy k8s Ingress resources. By default it is\n  # using 'istio:ingress', to match 0.8 config. It requires that\n  # ingress.enabled is set to true. You can also set it\n  # to ingressgateway, or any other gateway you define in the 'gateway'\n  # section.\n  k8sIngressSelector: ingress\n  # k8sIngressHttps will add port 443 on the ingress and ingressgateway.\n  # It REQUIRES that the certificates are installed  in the\n  # expected secrets - enabling this option without certificates\n  # will result in LDS rejection and the ingress will not work.\n  k8sIngressHttps: false\n  proxy:\n    image: proxyv2\n    # Resources for the sidecar.\n    resources:\n      requests:\n        cpu: 10m\n      #  memory: 128Mi\n      # limits:\n      #   cpu: 100m\n      #   memory: 128Mi\n\n    # Controls number of Proxy worker threads.\n    # If set to 0 (default), then start worker thread for each CPU thread/core.\n    concurrency: 0\n    # Configures the access log for each sidecar. Setting it to an empty string will\n    # disable access log for sidecar.\n    accessLogFile: /dev/stdout\n\n    #If set to true, istio-proxy container will have privileged securityContext\n    privileged: false\n    # If set, newly injected sidecars will have core dumps enabled.\n    enableCoreDump: false\n    # istio egress capture whitelist\n    # https://istio.io/docs/tasks/traffic-management/egress.html#calling-external-services-directly\n    # example: includeIPRanges: \"172.30.0.0/16,172.20.0.0/16\"\n    # would only capture egress traffic on those two IP Ranges, all other outbound traffic would\n    # be allowed by the sidecar\n    includeIPRanges: '*'\n    excludeIPRanges: \"\"\n\n    # istio ingress capture whitelist\n    # examples:\n    #     Redirect no inbound traffic to Envoy:    --includeInboundPorts=\"\"\n    #     Redirect all inbound traffic to Envoy:   --includeInboundPorts=\"*\"\n    #     Redirect only selected ports:            --includeInboundPorts=\"80,8080\"\n    includeInboundPorts: '*'\n    excludeInboundPorts: \"\"\n\n    # This controls the 'policy' in the sidecar injector.\n    autoInject: enabled\n    # Sets the destination Statsd in envoy (the value of the \"--statsdUdpAddress\" proxy argument\n    # would be \u003chost\u003e:\u003cport\u003e).\n    # Can also be disabled (e.g. when Mixer is not installed).\n    envoyStatsd:\n      enabled: true\n      host: istio-statsd-prom-bridge\n      port: 9125\n  proxy_init:\n    # Base name for the proxy_init container, used to configure iptables.\n    image: proxy_init\n  # imagePullPolicy is applied to istio control plane components.\n  # local tests require IfNotPresent, to avoid uploading to dockerhub.\n  # TODO: Switch to Always as default, and override in the local tests.\n  imagePullPolicy: IfNotPresent\n  # controlPlaneMtls enabled. Will result in delays starting the pods while secrets are\n  # propagated, not recommended for tests.\n  controlPlaneSecurityEnabled: false\n  # disablePolicyChecks disables mixer policy checks.\n  # Will set the value with same name in istio config map - pilot needs to be restarted to take effect.\n  disablePolicyChecks: false\n  # EnableTracing sets the value with same name in istio config map, requires pilot restart to take effect.\n  enableTracing: true\n  # Default mtls policy. If true, mtls between services will be enabled by default.\n  mtls:\n    # Default setting for service-to-service mtls. Can be set explicitly using\n    # destination rules or service annotations.\n    enabled: false\n  # ImagePullSecrets for all ServiceAccount, list of secrets in the same namespace\n  # to use for pulling any images in pods that reference this ServiceAccount.\n  # Must be set for any clustser configured with privte docker registry.\n  imagePullSecrets: null\n  arch:\n    amd64: 2\n    s390x: 2\n    ppc64le: 2\n  # Whether to restrict the applications namespace the controller manages;\n  # If not set, controller watches all namespaces\n  oneNamespace: false\n  # Whether to perform server-side validation of configuration.\n  configValidation: true\n  # If set to true, the pilot and citadel mtls will be exposed on the\n  # ingress gateway\n  meshExpansion: false\n  # If set to true, the pilot and citadel mtls and the plain text pilot ports\n  # will be exposed on an internal gateway\n  meshExpansionILB: false\n  # A minimal set of requested resources to applied to all deployments so that\n  # Horizontal Pod Autoscaler will be able to function (if set).\n  # Each component can overwrite these default values by adding its own resources\n  # block in the relevant section below and setting the desired resources values.\n  defaultResources:\n    requests:\n      cpu: 10m\n    #   memory: 128Mi\n    # limits:\n    #   cpu: 100m\n    #   memory: 128Mi\n\n  # Not recommended for user to configure this. Hyperkube image to use when creating custom resources\n  hyperkube:\n    hub: quay.io/coreos\n    tag: v1.7.6_coreos.0\n  # Kubernetes \u003e=v1.11.0 will create two PriorityClass, including system-cluster-critical and\n  # system-node-critical, it is better to configure this in order to make sure your Istio pods\n  # will not be killed because of low prioroty class.\n  # Refer to https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass\n  # for more detail.\n  priorityClassName: \"\"\n\n  # Include the crd definition when generating the template.\n  # For 'helm template' and helm install \u003e 2.10 it should be true.\n  # For helm \u003c 2.9, crds must be installed ahead of time with\n  # 'kubectl apply -f install/kubernetes/helm/istio/templates/crds.yaml\n  # and this options must be set off.\n  crds: true\n#\n# ingress configuration\n#\ningress:\n  enabled: false\n  replicaCount: 1\n  autoscaleMin: 1\n  autoscaleMax: 5\n  service:\n    annotations: {}\n    loadBalancerIP: \"\"\n    type: LoadBalancer\n                       #change to NodePort, ClusterIP or LoadBalancer if need be\n    ports:\n    - port: 80\n      name: http\n      nodePort: 32000\n    - port: 443\n      name: https\n    selector:\n      istio: ingress\n#\n# Gateways Configuration\n# By default (if enabled) a pair of Ingress and Egress Gateways will be created for the mesh.\n# You can add more gateways in addition to the defaults but make sure those are uniquely named\n# and that NodePorts are not conflicting.\n# Disable specifc gateway by setting the `enabled` to false.\n#\ngateways:\n  enabled: true\n  istio-ingressgateway:\n    enabled: true\n    labels:\n      app: istio-ingressgateway\n      istio: ingressgateway\n    replicaCount: 1\n    autoscaleMin: 1\n    autoscaleMax: 5\n    resources: {}\n      # limits:\n      #  cpu: 100m\n      #  memory: 128Mi\n      #requests:\n      #  cpu: 1800m\n      #  memory: 256Mi\n    cpu:\n      targetAverageUtilization: 80\n    loadBalancerIP: \"\"\n    serviceAnnotations: {}\n    type: LoadBalancer\n                       #change to NodePort, ClusterIP or LoadBalancer if need be\n\n    ports:\n      ## You can add custom gateway ports\n    - port: 80\n      targetPort: 80\n      name: http2\n      nodePort: 31380\n    - port: 443\n      name: https\n      nodePort: 31390\n    - port: 31400\n      name: tcp\n      nodePort: 31400\n    # Pilot and Citadel MTLS ports are enabled in gateway - but will only redirect\n    # to pilot/citadel if global.meshExpansion settings are enabled.\n    - port: 15011\n      targetPort: 15011\n      name: tcp-pilot-grpc-tls\n    - port: 8060\n      targetPort: 8060\n      name: tcp-citadel-grpc-tls\n    - port: 853\n      targetPort: 853\n      name: tcp-dns-tls\n    - port: 15030\n      targetPort: 15030\n      name: http2-prometheus\n    - port: 15031\n      targetPort: 15031\n      name: http2-grafana\n    secretVolumes:\n    - name: ingressgateway-certs\n      secretName: istio-ingressgateway-certs\n      mountPath: /etc/istio/ingressgateway-certs\n    - name: ingressgateway-ca-certs\n      secretName: istio-ingressgateway-ca-certs\n      mountPath: /etc/istio/ingressgateway-ca-certs\n  istio-egressgateway:\n    enabled: false\n    labels:\n      app: istio-egressgateway\n      istio: egressgateway\n    replicaCount: 1\n    autoscaleMin: 1\n    autoscaleMax: 5\n    cpu:\n      targetAverageUtilization: 80\n    serviceAnnotations: {}\n    type: ClusterIP\n                    #change to NodePort or LoadBalancer if need be\n    ports:\n    - port: 80\n      name: http2\n    - port: 443\n      name: https\n    secretVolumes:\n    - name: egressgateway-certs\n      secretName: istio-egressgateway-certs\n      mountPath: /etc/istio/egressgateway-certs\n    - name: egressgateway-ca-certs\n      secretName: istio-egressgateway-ca-certs\n      mountPath: /etc/istio/egressgateway-ca-certs\n  # Mesh ILB gateway creates a gateway of type InternalLoadBalancer,\n  # for mesh expansion. It exposes the mtls ports for Pilot,CA as well\n  # as non-mtls ports to support upgrades and gradual transition.\n  istio-ilbgateway:\n    enabled: false\n    labels:\n      app: istio-ilbgateway\n      istio: ilbgateway\n    replicaCount: 1\n    autoscaleMin: 1\n    autoscaleMax: 5\n    resources:\n      requests:\n        cpu: 800m\n        memory: 512Mi\n      #limits:\n      #  cpu: 1800m\n      #  memory: 256Mi\n    cpu:\n      targetAverageUtilization: 80\n    loadBalancerIP: \"\"\n    serviceAnnotations:\n      cloud.google.com/load-balancer-type: internal\n    type: LoadBalancer\n    ports:\n    ## You can add custom gateway ports - google ILB default quota is 5 ports,\n    - port: 15011\n      name: grpc-pilot-mtls\n    # Insecure port - only for migration from 0.8. Will be removed in 1.1\n    - port: 15010\n      name: grpc-pilot\n    - port: 8060\n      targetPort: 8060\n      name: tcp-citadel-grpc-tls\n    # Port 853 is reserved for the kube-dns gateway\n    - port: 853\n      name: tcp-dns\n    secretVolumes:\n    - name: ilbgateway-certs\n      secretName: istio-ilbgateway-certs\n      mountPath: /etc/istio/ilbgateway-certs\n    - name: ilbgateway-ca-certs\n      secretName: istio-ilbgateway-ca-certs\n      mountPath: /etc/istio/ilbgateway-ca-certs\n#\n# sidecar-injector webhook configuration\n#\nsidecarInjectorWebhook:\n  enabled: true\n  replicaCount: 1\n  image: sidecar_injector\n  enableNamespacesByDefault: false\n#\n# galley configuration\n#\ngalley:\n  enabled: false\n  replicaCount: 1\n  image: galley\n#\n# mixer configuration\n#\nmixer:\n  enabled: false\n  replicaCount: 1\n  autoscaleMin: 1\n  autoscaleMax: 5\n  image: mixer\n  istio-policy:\n    autoscaleEnabled: true\n    autoscaleMin: 1\n    autoscaleMax: 5\n    cpu:\n      targetAverageUtilization: 80\n  istio-telemetry:\n    autoscaleEnabled: true\n    autoscaleMin: 1\n    autoscaleMax: 5\n    cpu:\n      targetAverageUtilization: 80\n  prometheusStatsdExporter:\n    hub: docker.io/prom\n    tag: v0.6.0\n#\n# pilot configuration\n#\npilot:\n  enabled: true\n  replicaCount: 1\n  autoscaleMin: 1\n  autoscaleMax: 5\n  image: pilot\n  sidecar: true\n  traceSampling: 100\n  # Resources for a small pilot install\n  resources:\n    requests:\n      cpu: 500m\n      memory: 2048Mi\n  env:\n    PILOT_PUSH_THROTTLE_COUNT: 100\n    GODEBUG: gctrace=2\n  cpu:\n    targetAverageUtilization: 80\n#\n# security configuration\n#\nsecurity:\n  replicaCount: 1\n  image: citadel\n  selfSigned: true\n                   # indicate if self-signed CA is used.\n\n#\n# addons configuration\n#\n  enabled: false\ntelemetry-gateway:\n  gatewayName: ingressgateway\n  grafanaEnabled: false\n  prometheusEnabled: false\ngrafana:\n  enabled: false\n  replicaCount: 1\n  image: grafana\n  persist: false\n  storageClassName: \"\"\n  security:\n    enabled: false\n    adminUser: admin\n    adminPassword: admin\n  service:\n    annotations: {}\n    name: http\n    type: ClusterIP\n    externalPort: 3000\n    internalPort: 3000\nprometheus:\n  enabled: false\n  replicaCount: 1\n  hub: docker.io/prom\n  tag: v2.3.1\n  service:\n    annotations: {}\n    nodePort:\n      enabled: false\n      port: 32090\nservicegraph:\n  enabled: false\n  replicaCount: 1\n  image: servicegraph\n  service:\n    annotations: {}\n    name: http\n    type: ClusterIP\n    externalPort: 8088\n    internalPort: 8088\n  ingress:\n    enabled: false\n    # Used to create an Ingress record.\n    hosts:\n    - servicegraph.local\n    annotations: null\n    tls: null\n  prometheusAddr: http://prometheus:9090\ntracing:\n  enabled: false\n  provider: jaeger\n  jaeger:\n    hub: docker.io/jaegertracing\n    tag: 1.5\n    memory:\n      max_traces: 50000\n    ui:\n      port: 16686\n    ingress:\n      enabled: false\n      # Used to create an Ingress record.\n      hosts:\n      - jaeger.local\n      annotations: null\n      tls: null\n  replicaCount: 1\n  service:\n    annotations: {}\n    name: http\n    type: ClusterIP\n    externalPort: 9411\n    internalPort: 9411\n  ingress:\n    enabled: false\n    # Used to create an Ingress record.\n    hosts:\n    - tracing.local\n    annotations: null\n    tls: null\nkiali:\n  enabled: false\n  replicaCount: 1\n  hub: docker.io/kiali\n  tag: istio-release-1.0\n  ingress:\n    enabled: false\n    ## Used to create an Ingress record.\n    # hosts:\n    #  - kiali.local\n    annotations: null\n    tls: null\n  dashboard:\n    username: admin\n    # Default admin passphrase for kiali. Must be set during setup, and\n    # changed by overriding the secret\n    passphrase: admin\n    # Override the automatically detected Grafana URL, usefull when Grafana service has no ExternalIPs\n    # grafanaURL:\n\n    # Override the automatically detected Jaeger URL, usefull when Jaeger service has no ExternalIPs\n    # jaegerURL:\n\n# Certmanager uses ACME to sign certificates. Since Istio gateways are\n# mounting the TLS secrets the Certificate CRDs must be created in the\n# istio-system namespace. Once the certificate has been created, the\n# gateway must be updated by adding 'secretVolumes'. After the gateway\n# restart, DestinationRules can be created using the ACME-signed certificates.\ncertmanager:\n  enabled: false\n  hub: quay.io/jetstack\n  tag: v0.3.1\n  resources: {}\n",
    "releaseName": "istio",
    "namespace": "mesh-control-plane",
    "helmValuesDefaults": "# Common settings.\nglobal:\n  # Default hub for Istio images.\n  # Releases are published to docker hub under 'istio' project.\n  # Daily builds from prow are on gcr.io, and nightly builds from circle on docker.io/istionightly\n  hub: gcr.io/istio-release\n\n  # Default tag for Istio images.\n  tag: release-1.0-latest-daily\n\n  # Gateway used for legacy k8s Ingress resources. By default it is\n  # using 'istio:ingress', to match 0.8 config. It requires that\n  # ingress.enabled is set to true. You can also set it\n  # to ingressgateway, or any other gateway you define in the 'gateway'\n  # section.\n  k8sIngressSelector: ingress\n\n  # k8sIngressHttps will add port 443 on the ingress and ingressgateway.\n  # It REQUIRES that the certificates are installed  in the\n  # expected secrets - enabling this option without certificates\n  # will result in LDS rejection and the ingress will not work.\n  k8sIngressHttps: false\n\n  proxy:\n    image: proxyv2\n\n    # Resources for the sidecar.\n    resources:\n      requests:\n        cpu: 10m\n      #  memory: 128Mi\n      # limits:\n      #   cpu: 100m\n      #   memory: 128Mi\n\n    # Controls number of Proxy worker threads.\n    # If set to 0 (default), then start worker thread for each CPU thread/core.\n    concurrency: 0\n\n    # Configures the access log for each sidecar. Setting it to an empty string will\n    # disable access log for sidecar.\n    accessLogFile: \"/dev/stdout\"\n\n    #If set to true, istio-proxy container will have privileged securityContext\n    privileged: false\n\n    # If set, newly injected sidecars will have core dumps enabled.\n    enableCoreDump: false\n\n    # istio egress capture whitelist\n    # https://istio.io/docs/tasks/traffic-management/egress.html#calling-external-services-directly\n    # example: includeIPRanges: \"172.30.0.0/16,172.20.0.0/16\"\n    # would only capture egress traffic on those two IP Ranges, all other outbound traffic would\n    # be allowed by the sidecar\n    includeIPRanges: \"*\"\n    excludeIPRanges: \"\"\n\n    # istio ingress capture whitelist\n    # examples:\n    #     Redirect no inbound traffic to Envoy:    --includeInboundPorts=\"\"\n    #     Redirect all inbound traffic to Envoy:   --includeInboundPorts=\"*\"\n    #     Redirect only selected ports:            --includeInboundPorts=\"80,8080\"\n    includeInboundPorts: \"*\"\n    excludeInboundPorts: \"\"\n\n    # This controls the 'policy' in the sidecar injector.\n    autoInject: enabled\n\n    # Sets the destination Statsd in envoy (the value of the \"--statsdUdpAddress\" proxy argument\n    # would be \u003chost\u003e:\u003cport\u003e).\n    # Can also be disabled (e.g. when Mixer is not installed).\n    envoyStatsd:\n      enabled: true\n      host: istio-statsd-prom-bridge\n      port: 9125\n\n  proxy_init:\n    # Base name for the proxy_init container, used to configure iptables.\n    image: proxy_init\n\n  # imagePullPolicy is applied to istio control plane components.\n  # local tests require IfNotPresent, to avoid uploading to dockerhub.\n  # TODO: Switch to Always as default, and override in the local tests.\n  imagePullPolicy: IfNotPresent\n\n  # controlPlaneMtls enabled. Will result in delays starting the pods while secrets are\n  # propagated, not recommended for tests.\n  controlPlaneSecurityEnabled: false\n\n  # disablePolicyChecks disables mixer policy checks.\n  # Will set the value with same name in istio config map - pilot needs to be restarted to take effect.\n  disablePolicyChecks: false\n\n  # EnableTracing sets the value with same name in istio config map, requires pilot restart to take effect.\n  enableTracing: true\n\n  # Default mtls policy. If true, mtls between services will be enabled by default.\n  mtls:\n    # Default setting for service-to-service mtls. Can be set explicitly using\n    # destination rules or service annotations.\n    enabled: false\n\n  # ImagePullSecrets for all ServiceAccount, list of secrets in the same namespace\n  # to use for pulling any images in pods that reference this ServiceAccount.\n  # Must be set for any clustser configured with privte docker registry.\n  imagePullSecrets:\n    # - private-registry-key\n\n  # Specify pod scheduling arch(amd64, ppc64le, s390x) and weight as follows:\n  #   0 - Never scheduled\n  #   1 - Least preferred\n  #   2 - No preference\n  #   3 - Most preferred\n  arch:\n    amd64: 2\n    s390x: 2\n    ppc64le: 2\n\n  # Whether to restrict the applications namespace the controller manages;\n  # If not set, controller watches all namespaces\n  oneNamespace: false\n\n  # Whether to perform server-side validation of configuration.\n  configValidation: true\n\n  # If set to true, the pilot and citadel mtls will be exposed on the\n  # ingress gateway\n  meshExpansion: false\n\n  # If set to true, the pilot and citadel mtls and the plain text pilot ports\n  # will be exposed on an internal gateway\n  meshExpansionILB: false\n\n  # A minimal set of requested resources to applied to all deployments so that\n  # Horizontal Pod Autoscaler will be able to function (if set).\n  # Each component can overwrite these default values by adding its own resources\n  # block in the relevant section below and setting the desired resources values.\n  defaultResources:\n    requests:\n      cpu: 10m\n    #   memory: 128Mi\n    # limits:\n    #   cpu: 100m\n    #   memory: 128Mi\n\n  # Not recommended for user to configure this. Hyperkube image to use when creating custom resources\n  hyperkube:\n    hub: quay.io/coreos\n    tag: v1.7.6_coreos.0\n\n  # Kubernetes \u003e=v1.11.0 will create two PriorityClass, including system-cluster-critical and\n  # system-node-critical, it is better to configure this in order to make sure your Istio pods\n  # will not be killed because of low prioroty class.\n  # Refer to https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass\n  # for more detail.\n  priorityClassName: \"\"\n\n  # Include the crd definition when generating the template.\n  # For 'helm template' and helm install \u003e 2.10 it should be true.\n  # For helm \u003c 2.9, crds must be installed ahead of time with\n  # 'kubectl apply -f install/kubernetes/helm/istio/templates/crds.yaml\n  # and this options must be set off.\n  crds: true\n\n#\n# ingress configuration\n#\ningress:\n  enabled: false\n  replicaCount: 1\n  autoscaleMin: 1\n  autoscaleMax: 5\n  service:\n    annotations: {}\n    loadBalancerIP: \"\"\n    type: LoadBalancer #change to NodePort, ClusterIP or LoadBalancer if need be\n    ports:\n    - port: 80\n      name: http\n      nodePort: 32000\n    - port: 443\n      name: https\n    selector:\n      istio: ingress\n\n#\n# Gateways Configuration\n# By default (if enabled) a pair of Ingress and Egress Gateways will be created for the mesh.\n# You can add more gateways in addition to the defaults but make sure those are uniquely named\n# and that NodePorts are not conflicting.\n# Disable specifc gateway by setting the `enabled` to false.\n#\ngateways:\n  enabled: true\n\n  istio-ingressgateway:\n    enabled: true\n    labels:\n      app: istio-ingressgateway\n      istio: ingressgateway\n    replicaCount: 1\n    autoscaleMin: 1\n    autoscaleMax: 5\n    resources: {}\n      # limits:\n      #  cpu: 100m\n      #  memory: 128Mi\n      #requests:\n      #  cpu: 1800m\n      #  memory: 256Mi\n    cpu:\n      targetAverageUtilization: 80\n    loadBalancerIP: \"\"\n    serviceAnnotations: {}\n    type: LoadBalancer #change to NodePort, ClusterIP or LoadBalancer if need be\n\n    ports:\n      ## You can add custom gateway ports\n    - port: 80\n      targetPort: 80\n      name: http2\n      nodePort: 31380\n    - port: 443\n      name: https\n      nodePort: 31390\n    - port: 31400\n      name: tcp\n      nodePort: 31400\n    # Pilot and Citadel MTLS ports are enabled in gateway - but will only redirect\n    # to pilot/citadel if global.meshExpansion settings are enabled.\n    - port: 15011\n      targetPort: 15011\n      name: tcp-pilot-grpc-tls\n    - port: 8060\n      targetPort: 8060\n      name: tcp-citadel-grpc-tls\n    - port: 853\n      targetPort: 853\n      name: tcp-dns-tls\n    - port: 15030\n      targetPort: 15030\n      name: http2-prometheus\n    - port: 15031\n      targetPort: 15031\n      name: http2-grafana\n    secretVolumes:\n    - name: ingressgateway-certs\n      secretName: istio-ingressgateway-certs\n      mountPath: /etc/istio/ingressgateway-certs\n    - name: ingressgateway-ca-certs\n      secretName: istio-ingressgateway-ca-certs\n      mountPath: /etc/istio/ingressgateway-ca-certs\n\n  istio-egressgateway:\n    enabled: true\n    labels:\n      app: istio-egressgateway\n      istio: egressgateway\n    replicaCount: 1\n    autoscaleMin: 1\n    autoscaleMax: 5\n    cpu:\n      targetAverageUtilization: 80\n    serviceAnnotations: {}\n    type: ClusterIP #change to NodePort or LoadBalancer if need be\n    ports:\n      - port: 80\n        name: http2\n      - port: 443\n        name: https\n    secretVolumes:\n      - name: egressgateway-certs\n        secretName: istio-egressgateway-certs\n        mountPath: /etc/istio/egressgateway-certs\n      - name: egressgateway-ca-certs\n        secretName: istio-egressgateway-ca-certs\n        mountPath: /etc/istio/egressgateway-ca-certs\n\n  # Mesh ILB gateway creates a gateway of type InternalLoadBalancer,\n  # for mesh expansion. It exposes the mtls ports for Pilot,CA as well\n  # as non-mtls ports to support upgrades and gradual transition.\n  istio-ilbgateway:\n    enabled: false\n    labels:\n      app: istio-ilbgateway\n      istio: ilbgateway\n    replicaCount: 1\n    autoscaleMin: 1\n    autoscaleMax: 5\n    resources:\n      requests:\n        cpu: 800m\n        memory: 512Mi\n      #limits:\n      #  cpu: 1800m\n      #  memory: 256Mi\n    cpu:\n      targetAverageUtilization: 80      \n    loadBalancerIP: \"\"\n    serviceAnnotations:\n      cloud.google.com/load-balancer-type: \"internal\"\n    type: LoadBalancer\n    ports:\n    ## You can add custom gateway ports - google ILB default quota is 5 ports,\n    - port: 15011\n      name: grpc-pilot-mtls\n    # Insecure port - only for migration from 0.8. Will be removed in 1.1\n    - port: 15010\n      name: grpc-pilot\n    - port: 8060\n      targetPort: 8060\n      name: tcp-citadel-grpc-tls\n    # Port 853 is reserved for the kube-dns gateway\n    - port: 853\n      name: tcp-dns\n    secretVolumes:\n    - name: ilbgateway-certs\n      secretName: istio-ilbgateway-certs\n      mountPath: /etc/istio/ilbgateway-certs\n    - name: ilbgateway-ca-certs\n      secretName: istio-ilbgateway-ca-certs\n      mountPath: /etc/istio/ilbgateway-ca-certs\n\n#\n# sidecar-injector webhook configuration\n#\nsidecarInjectorWebhook:\n  enabled: true\n  replicaCount: 1\n  image: sidecar_injector\n  enableNamespacesByDefault: false\n\n#\n# galley configuration\n#\ngalley:\n  enabled: true\n  replicaCount: 1\n  image: galley\n\n#\n# mixer configuration\n#\nmixer:\n  enabled: true\n  replicaCount: 1\n  autoscaleMin: 1\n  autoscaleMax: 5\n  image: mixer\n\n  istio-policy:\n    autoscaleEnabled: true\n    autoscaleMin: 1\n    autoscaleMax: 5\n    cpu:\n      targetAverageUtilization: 80\n\n  istio-telemetry:\n    autoscaleEnabled: true\n    autoscaleMin: 1\n    autoscaleMax: 5\n    cpu:\n      targetAverageUtilization: 80\n\n  prometheusStatsdExporter:\n    hub: docker.io/prom\n    tag: v0.6.0\n\n#\n# pilot configuration\n#\npilot:\n  enabled: true\n  replicaCount: 1\n  autoscaleMin: 1\n  autoscaleMax: 5\n  image: pilot\n  sidecar: true\n  traceSampling: 100.0\n  # Resources for a small pilot install\n  resources:\n    requests:\n      cpu: 500m\n      memory: 2048Mi\n  env:\n    PILOT_PUSH_THROTTLE_COUNT: 100\n    GODEBUG: gctrace=2\n  cpu:\n    targetAverageUtilization: 80\n\n#\n# security configuration\n#\nsecurity:\n  replicaCount: 1\n  image: citadel\n  selfSigned: true # indicate if self-signed CA is used.\n\n#\n# addons configuration\n#\ntelemetry-gateway:\n  gatewayName: ingressgateway\n  grafanaEnabled: false\n  prometheusEnabled: false\n\ngrafana:\n  enabled: false\n  replicaCount: 1\n  image: grafana\n  persist: false\n  storageClassName: \"\"\n  security:\n    enabled: false\n    adminUser: admin\n    adminPassword: admin\n  service:\n    annotations: {}\n    name: http\n    type: ClusterIP\n    externalPort: 3000\n    internalPort: 3000\n\nprometheus:\n  enabled: true\n  replicaCount: 1\n  hub: docker.io/prom\n  tag: v2.3.1\n\n  service:\n    annotations: {}\n    nodePort:\n      enabled: false\n      port: 32090\n\nservicegraph:\n  enabled: false\n  replicaCount: 1\n  image: servicegraph\n  service:\n    annotations: {}\n    name: http\n    type: ClusterIP\n    externalPort: 8088\n    internalPort: 8088\n  ingress:\n    enabled: false\n    # Used to create an Ingress record.\n    hosts:\n      - servicegraph.local\n    annotations:\n      # kubernetes.io/ingress.class: nginx\n      # kubernetes.io/tls-acme: \"true\"\n    tls:\n      # Secrets must be manually created in the namespace.\n      # - secretName: servicegraph-tls\n      #   hosts:\n      #     - servicegraph.local\n  # prometheus addres\n  prometheusAddr: http://prometheus:9090\n\ntracing:\n  enabled: false\n  provider: jaeger\n  jaeger:\n    hub: docker.io/jaegertracing\n    tag: 1.5\n    memory:\n      max_traces: 50000\n    ui:\n      port: 16686\n    ingress:\n      enabled: false\n      # Used to create an Ingress record.\n      hosts:\n        - jaeger.local\n      annotations:\n        # kubernetes.io/ingress.class: nginx\n        # kubernetes.io/tls-acme: \"true\"\n      tls:\n        # Secrets must be manually created in the namespace.\n        # - secretName: jaeger-tls\n        #   hosts:\n        #     - jaeger.local\n  replicaCount: 1\n  service:\n    annotations: {}\n    name: http\n    type: ClusterIP\n    externalPort: 9411\n    internalPort: 9411\n  ingress:\n    enabled: false\n    # Used to create an Ingress record.\n    hosts:\n      - tracing.local\n    annotations:\n      # kubernetes.io/ingress.class: nginx\n      # kubernetes.io/tls-acme: \"true\"\n    tls:\n      # Secrets must be manually created in the namespace.\n      # - secretName: tracing-tls\n      #   hosts:\n      #     - tracing.local\n\nkiali:\n  enabled: false\n  replicaCount: 1\n  hub: docker.io/kiali\n  tag: istio-release-1.0\n  ingress:\n    enabled: false\n    ## Used to create an Ingress record.\n    # hosts:\n    #  - kiali.local\n    annotations:\n      # kubernetes.io/ingress.class: nginx\n      # kubernetes.io/tls-acme: \"true\"\n    tls:\n      # Secrets must be manually created in the namespace.\n      # - secretName: kiali-tls\n      #   hosts:\n      #     - kiali.local\n  dashboard:\n    username: admin\n    # Default admin passphrase for kiali. Must be set during setup, and\n    # changed by overriding the secret\n    passphrase: admin\n\n    # Override the automatically detected Grafana URL, usefull when Grafana service has no ExternalIPs\n    # grafanaURL:\n\n    # Override the automatically detected Jaeger URL, usefull when Jaeger service has no ExternalIPs\n    # jaegerURL:\n\n# Certmanager uses ACME to sign certificates. Since Istio gateways are\n# mounting the TLS secrets the Certificate CRDs must be created in the\n# istio-system namespace. Once the certificate has been created, the\n# gateway must be updated by adding 'secretVolumes'. After the gateway\n# restart, DestinationRules can be created using the ACME-signed certificates.\ncertmanager:\n  enabled: false\n  hub: quay.io/jetstack\n  tag: v0.3.1\n  resources: {}\n",
    "kustomize": {
      "overlays": {
        "ship": {
          "patches": {
            "/charts/gateways/templates/autoscale.yaml": "apiVersion: autoscaling/v2beta1\nkind: HorizontalPodAutoscaler\nmetadata:\n  name: istio-ingressgateway\n  namespace: mesh-control-plane\n  annotations:\n    manifestctl.sam.data.sfdc.net/swagger: disable",
            "/charts/gateways/templates/deployment.yaml": "apiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  name: istio-ingressgateway\n  namespace: mesh-control-plane\nspec:\n  selector:\n    matchLabels:\n      app: istio-ingressgateway\n      istio: ingressgateway\n  template:\n    metadata:\n      annotations:\n        madkub.sam.sfdc.net/allcerts: mcpIstioConfig.ingressGatewayMadkubAnnotations\n    spec:\n      containers:\n      - args:\n        - proxy\n        - router\n        - -v\n        - \"2\"\n        - --discoveryRefreshDelay\n        - 1s\n        - --drainDuration\n        - 45s\n        - --parentShutdownDuration\n        - 1m0s\n        - --connectTimeout\n        - 10s\n        - --serviceCluster\n        - istio-ingressgateway\n        - --zipkinAddress\n        - zipkin.service-mesh:9411\n        - --proxyAdminPort\n        - \"15000\"\n        - --controlPlaneAuthPolicy\n        - NONE\n        - --discoveryAddress\n        - istio-pilot:8080\n        image: mcpIstioConfig.proxyImage\n        name: istio-proxy\n        ports:\n        - $patch: delete\n          containerPort: 15030\n        - $patch: delete\n          containerPort: 15031\n        - $patch: delete\n          containerPort: 31400\n        volumeMounts:\n        - mountPath: /etc/pki_service\n          name: maddog-certs\n        - mountPath: /etc/certs/root-cert.pem\n          name: tls-server-cert\n          subPath: ca.pem\n        - mountPath: /etc/certs/cert-chain.pem\n          name: tls-server-cert\n          subPath: server/certificates/server.pem\n        - mountPath: /etc/certs/key.pem\n          name: tls-server-cert\n          subPath: server/keys/server-key.pem\n        - mountPath: /etc/certs/client.pem\n          name: tls-client-cert\n          subPath: client/certificates/client.pem\n        - mountPath: /etc/certs/client-key.pem\n          name: tls-client-cert\n          subPath: client/keys/client-key.pem\n        - mountPath: /client-cert\n          name: tls-client-cert\n        - mountPath: /server-cert\n          name: tls-server-cert\n        - $patch: delete\n          mountPath: /etc/certs\n        - $patch: delete\n          mountPath: /etc/istio/ingressgateway-ca-certs\n        - $patch: delete\n          mountPath: /etc/istio/ingressgateway-certs\n      - args:\n        - /sam/madkub-client\n        - --madkub-endpoint=%(madkubEndpoint)s\n        - --maddog-endpoint=%(maddogEndpoint)s\n        - --maddog-server-ca=/maddog-certs/ca/security-ca.pem\n        - --madkub-server-ca=/maddog-certs/ca/cacerts.pem\n        - --cert-folders=tls-client-cert:/client-cert/\n        - --cert-folders=tls-server-cert:/server-cert/\n        - --token-folder=/tokens/\n        - --ca-folder=/maddog-certs/ca\n        - --refresher\n        - --run-init-for-refresher-mode\n        env:\n        - name: MADKUB_NODENAME\n          valueFrom:\n            fieldRef:\n              apiVersion: v1\n              fieldPath: spec.nodeName\n        - name: MADKUB_NAME\n          valueFrom:\n            fieldRef:\n              apiVersion: v1\n              fieldPath: metadata.name\n        - name: MADKUB_NAMESPACE\n          valueFrom:\n            fieldRef:\n              apiVersion: v1\n              fieldPath: metadata.namespace\n        image: mcpIstioConfig.madkubImage\n        imagePullPolicy: IfNotPresent\n        name: madkub-refresher\n        resources: {}\n        volumeMounts:\n        - mountPath: /client-cert\n          name: tls-client-cert\n        - mountPath: /server-cert\n          name: tls-server-cert\n        - mountPath: /maddog-certs/\n          name: maddog-certs\n        - mountPath: /tokens\n          name: tokens\n      initContainers:\n      - args:\n        - /sam/madkub-client\n        - --madkub-endpoint=%(madkubEndpoint)s\n        - --maddog-endpoint=%(maddogEndpoint)s\n        - --maddog-server-ca=/maddog-certs/ca/security-ca.pem\n        - --madkub-server-ca=/maddog-certs/ca/cacerts.pem\n        - --cert-folders=tls-client-cert:/client-cert/\n        - --cert-folders=tls-server-cert:/server-cert/\n        - --token-folder=/tokens/\n        - --ca-folder=/maddog-certs/ca\n        env:\n        - name: MADKUB_NODENAME\n          valueFrom:\n            fieldRef:\n              apiVersion: v1\n              fieldPath: spec.nodeName\n        - name: MADKUB_NAME\n          valueFrom:\n            fieldRef:\n              apiVersion: v1\n              fieldPath: metadata.name\n        - name: MADKUB_NAMESPACE\n          valueFrom:\n            fieldRef:\n              apiVersion: v1\n              fieldPath: metadata.namespace\n        image: mcpIstioConfig.madkubImage\n        imagePullPolicy: IfNotPresent\n        name: madkub-init\n        volumeMounts:\n        - mountPath: /client-cert\n          name: tls-client-cert\n        - mountPath: /server-cert\n          name: tls-server-cert\n        - mountPath: /maddog-certs/\n          name: maddog-certs\n        - mountPath: /tokens\n          name: tokens\n      - command:\n        - bash\n        - -c\n        - |\n          set -ex\n          chmod 775 -R /client-cert \u0026\u0026 chown -R 7447:7447 /client-cert\n          chmod 775 -R /server-cert \u0026\u0026 chown -R 7447:7447 /server-cert\n        image: ops0-artifactrepo2-0-prd.data.sfdc.net/docker-release-candidate/tnrp/sam/hypersam:sam-c07d4afb-673\n        imagePullPolicy: Always\n        name: permissionsetterinitcontainer\n        securityContext:\n          runAsNonRoot: false\n          runAsUser: 0\n        volumeMounts:\n        - mountPath: /client-cert\n          name: tls-client-cert\n        - mountPath: /server-cert\n          name: tls-server-cert\n      nodeSelector:\n        pool: prd-sam_gater\n      volumes:\n      - $patch: delete\n        name: istio-certs\n      - $patch: delete\n        name: ingressgateway-certs\n      - $patch: delete\n        name: ingressgateway-ca-certs\n      - hostPath:\n          path: /etc/pki_service\n        name: maddog-certs\n      - emptyDir:\n          medium: Memory\n        name: tls-client-cert\n      - emptyDir:\n          medium: Memory\n        name: tls-server-cert\n      - emptyDir:\n          medium: Memory\n        name: tokens",
            "/charts/gateways/templates/service.yaml": "apiVersion: v1\nkind: Service\nmetadata:\n  name: istio-ingressgateway\n  namespace: mesh-control-plane\nspec:\n  ports:\n  - $patch: delete\n    port: 15030\n  - $patch: delete\n    port: 15031\n  - $patch: delete\n    port: 31400\n  - port: 32400\n    nodePort: 32400\n    name: tcp\n  - port: 80\n    nodePort: 32380\n  - port: 443\n    nodePort: 32390",
            "/charts/gateways/templates/serviceaccount.yaml": "--- \napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  annotations:\n    manifestctl.sam.data.sfdc.net/swagger: disable\n  name: istio-ingressgateway-service-account",
            "/charts/pilot/templates/autoscale.yaml": "apiVersion: autoscaling/v2beta1\nkind: HorizontalPodAutoscaler\nmetadata:\n  name: istio-pilot\n  annotations:\n    manifestctl.sam.data.sfdc.net/swagger: disable",
            "/charts/pilot/templates/deployment.yaml": "apiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  name: istio-pilot\n  namespace: mesh-control-plane\nspec:\n  selector:\n    matchLabels:\n      app: pilot\n      istio: pilot\n  template:\n    spec:\n      containers:\n      - args:\n        - discovery\n        - --secureGrpcAddr\n        - :15011\n        - --appNamespace\n        - service-mesh\n        - --log_output_level\n        - debug\n        image: mcpIstioConfig.pilotImage\n        name: discovery\n        ports:\n        - containerPort: 15011\n        volumeMounts:\n        - $patch: delete\n          mountPath: /etc/certs\n      - image: mcpIstioConfig.proxyImage\n        name: istio-proxy\n        volumeMounts:\n        - $patch: delete\n          mountPath: /etc/certs\n      - args:\n        - --debug-mode\n        - \"true\"\n        env:\n        - name: FUNCTION_NAMESPACE\n          valueFrom:\n            fieldRef:\n              apiVersion: v1\n              fieldPath: metadata.namespace\n        - name: SETTINGS_SUPERPOD\n          value: mcpIstioConfig.superpod\n        - name: SETTINGS_PATH\n          value: mcpIstioConfig.settingsPath\n        - name: SFDC_METRICS_SERVICE_HOST\n          value: mcpIstioConfig.funnelHost\n        - name: SFDC_METRICS_SERVICE_PORT\n          value: mcpIstioConfig.funnelPort\n        image: mcpIstioConfig.metricsScraperImage\n        imagePullPolicy: Always\n        name: metrics-scraper\n        readinessProbe:\n          exec:\n            command:\n            - /bin/true\n          initialDelaySeconds: 5\n          periodSeconds: 30\n          timeoutSeconds: 5\n      nodeSelector:\n        pool: prd-sam_gater\n      volumes:\n      - $patch: delete\n        name: istio-certs",
            "/charts/pilot/templates/gateway.yaml": "--- \napiVersion: networking.istio.io/v1alpha3\nkind: Gateway\nmetadata:\n  name: istio-autogenerated-k8s-ingress\n  annotations:\n    manifestctl.sam.data.sfdc.net/swagger: disable",
            "/charts/pilot/templates/serviceaccount.yaml": "--- \napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  annotations:\n    manifestctl.sam.data.sfdc.net/swagger: disable\n  name: istio-pilot-service-account",
            "/charts/sidecarInjectorWebhook/templates/deployment.yaml": "apiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  name: istio-sidecar-injector\n  namespace: mesh-control-plane\nspec:\n  replicas: 2\n  selector:\n    matchLabels:\n      istio: sidecar-injector\n  template:\n    metadata:\n      annotations:\n        madkub.sam.sfdc.net/allcerts: mcpIstioConfig.sidecarInjectorMadkubAnnotations\n    spec:\n      containers:\n      - args:\n        - --caCertFile=/cert1/ca.pem\n        - --tlsCertFile=/cert1/server/certificates/server.pem\n        - --tlsKeyFile=/cert1/server/keys/server-key.pem\n        - --injectConfig=/etc/istio/inject/config\n        - --meshConfig=/etc/istio/config/mesh\n        - --healthCheckInterval=2s\n        - --healthCheckFile=/health\n        - --port=15009\n        image: mcpIstioConfig.sidecarInjectorImage\n        name: sidecar-injector-webhook\n        ports:\n        - containerPort: 15009\n        volumeMounts:\n        - mountPath: /etc/pki_service\n          name: maddog-certs\n        - mountPath: /cert1\n          name: cert1\n        - $patch: delete\n          mountPath: /etc/istio/certs\n      - args:\n        - /sam/madkub-client\n        - --madkub-endpoint=%(madkubEndpoint)s\n        - --maddog-endpoint=%(maddogEndpoint)s\n        - --maddog-server-ca=/maddog-certs/ca/security-ca.pem\n        - --madkub-server-ca=/maddog-certs/ca/cacerts.pem\n        - --cert-folders=cert1:/cert1/\n        - --token-folder=/tokens/\n        - --requested-cert-type=client\n        - --ca-folder=/maddog-certs/ca\n        - --refresher\n        - --run-init-for-refresher-mode\n        env:\n        - name: MADKUB_NODENAME\n          valueFrom:\n            fieldRef:\n              apiVersion: v1\n              fieldPath: spec.nodeName\n        - name: MADKUB_NAME\n          valueFrom:\n            fieldRef:\n              apiVersion: v1\n              fieldPath: metadata.name\n        - name: MADKUB_NAMESPACE\n          valueFrom:\n            fieldRef:\n              apiVersion: v1\n              fieldPath: metadata.namespace\n        image: mcpIstioConfig.madkubImage\n        imagePullPolicy: IfNotPresent\n        name: madkub-refresher\n        resources: {}\n        volumeMounts:\n        - mountPath: /cert1\n          name: cert1\n        - mountPath: /maddog-certs/\n          name: maddog-certs\n        - mountPath: /tokens\n          name: tokens\n      initContainers:\n      - args:\n        - /sam/madkub-client\n        - --madkub-endpoint=%(madkubEndpoint)s\n        - --maddog-endpoint=%(maddogEndpoint)s\n        - --maddog-server-ca=/maddog-certs/ca/security-ca.pem\n        - --madkub-server-ca=/maddog-certs/ca/cacerts.pem\n        - --cert-folders=cert1:/cert1/\n        - --token-folder=/tokens/\n        - --requested-cert-type=client\n        - --ca-folder=/maddog-certs/ca\n        env:\n        - name: MADKUB_NODENAME\n          valueFrom:\n            fieldRef:\n              apiVersion: v1\n              fieldPath: spec.nodeName\n        - name: MADKUB_NAME\n          valueFrom:\n            fieldRef:\n              apiVersion: v1\n              fieldPath: metadata.name\n        - name: MADKUB_NAMESPACE\n          valueFrom:\n            fieldRef:\n              apiVersion: v1\n              fieldPath: metadata.namespace\n        image: mcpIstioConfig.madkubImage\n        imagePullPolicy: IfNotPresent\n        name: madkub-init\n        volumeMounts:\n        - mountPath: /cert1\n          name: cert1\n        - mountPath: /maddog-certs/\n          name: maddog-certs\n        - mountPath: /tokens\n          name: tokens\n      nodeSelector:\n        master: \"true\"\n      volumes:\n      - $patch: delete\n        name: certs\n      - hostPath:\n          path: /etc/pki_service\n        name: maddog-certs\n      - emptyDir:\n          medium: Memory\n        name: cert1\n      - emptyDir:\n          medium: Memory\n        name: tokens",
            "/charts/sidecarInjectorWebhook/templates/mutatingwebhook.yaml": "--- \napiVersion: admissionregistration.k8s.io/v1beta1\nkind: MutatingWebhookConfiguration\nmetadata:\n  annotations:\n    manifestctl.sam.data.sfdc.net/swagger: disable\n  name: istio-sidecar-injector\n  namespace:",
            "/charts/sidecarInjectorWebhook/templates/service.yaml": "apiVersion: v1\nkind: Service\nmetadata:\n  name: istio-sidecar-injector\n  namespace: mesh-control-plane\nspec:\n  ports:\n  - port: 443\n    targetPort: 15009\n    name: sidecar-injector-port",
            "/charts/sidecarInjectorWebhook/templates/serviceaccount.yaml": "--- \napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  annotations:\n    manifestctl.sam.data.sfdc.net/swagger: disable\n  name: istio-sidecar-injector-service-account",
            "/configmap.yaml": "apiVersion: v1\ndata:\n  mesh:  |-\n    # Set the following variable to true to disable policy checks by the Mixer.\n    # Note that metrics will still be reported to the Mixer.\n    disablePolicyChecks: false\n\n    # Set enableTracing to false to disable request tracing.\n    enableTracing: true\n\n    # Set accessLogFile to empty string to disable access log.\n    accessLogFile: \"/dev/stdout\"\n    #\n    # Deprecated: mixer is using EDS\n\n    # Unix Domain Socket through which envoy communicates with NodeAgent SDS to get\n    # key/cert for mTLS. Use secret-mount files instead of SDS if set to empty. \n    sdsUdsPath: \"\"\n    \n    # How frequently should Envoy fetch key/cert from NodeAgent.\n    sdsRefreshDelay: 15s\n\n    #\n    defaultConfig:\n      #\n      # TCP connection timeout between Envoy \u0026 the application, and between Envoys.\n      connectTimeout: 10s\n      #\n      ### ADVANCED SETTINGS #############\n      # Where should envoy's configuration be stored in the istio-proxy container\n      configPath: \"/etc/istio/proxy\"\n      binaryPath: \"/usr/local/bin/envoy\"\n      # The pseudo service name used for Envoy.\n      serviceCluster: istio-proxy\n      # These settings that determine how long an old Envoy\n      # process should be kept alive after an occasional reload.\n      drainDuration: 45s\n      parentShutdownDuration: 1m0s\n      #\n      # The mode used to redirect inbound connections to Envoy. This setting\n      # has no effect on outbound traffic: iptables REDIRECT is always used for\n      # outbound connections.\n      # If \"REDIRECT\", use iptables REDIRECT to NAT and redirect to Envoy.\n      # The \"REDIRECT\" mode loses source addresses during redirection.\n      # If \"TPROXY\", use iptables TPROXY to redirect to Envoy.\n      # The \"TPROXY\" mode preserves both the source and destination IP\n      # addresses and ports, so that they can be used for advanced filtering\n      # and manipulation.\n      # The \"TPROXY\" mode also configures the sidecar to run with the\n      # CAP_NET_ADMIN capability, which is required to use TPROXY.\n      #interceptionMode: REDIRECT\n      #\n      # Port where Envoy listens (on local host) for admin commands\n      # You can exec into the istio-proxy container in a pod and\n      # curl the admin port (curl http://localhost:15000/) to obtain\n      # diagnostic information from Envoy. See\n      # https://lyft.github.io/envoy/docs/operations/admin.html\n      # for more details\n      proxyAdminPort: 15000\n      #\n      # Set concurrency to a specific number to control the number of Proxy worker threads.\n      # If set to 0 (default), then start worker thread for each CPU thread/core.\n      concurrency: 0\n      #\n      # Zipkin trace collector\n      zipkinAddress: zipkin.service-mesh:9411\n      #\n      # Mutual TLS authentication between sidecars and istio control plane.\n      controlPlaneAuthPolicy: NONE\n      #\n      # Address where istio Pilot service is running\n      discoveryAddress: istio-pilot.mesh-control-plane:15010\nkind: ConfigMap\nmetadata:\n  labels:\n    app: istio\n    chart: istio-1.0.1\n    heritage: Tiller\n    release: istio\n  name: istio\n  namespace: mesh-control-plane",
            "/crds.yaml": "---\napiVersion: apiextensions.k8s.io/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: virtualservices.networking.istio.io\n  annotations:\n    manifestctl.sam.data.sfdc.net/swagger: disable\n---\napiVersion: apiextensions.k8s.io/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: destinationrules.networking.istio.io\n  annotations:\n    manifestctl.sam.data.sfdc.net/swagger: disable\n---\napiVersion: apiextensions.k8s.io/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: serviceentries.networking.istio.io\n  annotations:\n    manifestctl.sam.data.sfdc.net/swagger: disable\n---\napiVersion: apiextensions.k8s.io/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: gateways.networking.istio.io\n  annotations:\n    manifestctl.sam.data.sfdc.net/swagger: disable\n---\napiVersion: apiextensions.k8s.io/v1beta1\nkind: CustomResourceDefinition\nmetadata:\n  name: envoyfilters.networking.istio.io\n  annotations:\n    manifestctl.sam.data.sfdc.net/swagger: disable\n---",
            "/sidecar-injector-configmap.yaml": "apiVersion: v1\ndata:\n  config: |-\n    policy: disabled\n    template: |-\n      initContainers:\n      - name: istio-init\n        image: \"ops0-artifactrepo2-0-prd.data.sfdc.net/docker-sfci-dev/sfci/servicemesh/istio-packaging/proxy_init:1.0.2\"\n        args:\n        - \"-p\"\n        - [[ .MeshConfig.ProxyListenPort ]]\n        - \"-u\"\n        - 1337\n        - \"-m\"\n        - [[ or (index .ObjectMeta.Annotations \"sidecar.istio.io/interceptionMode\") .ProxyConfig.InterceptionMode.String ]]\n        - \"-i\"\n        [[ if (isset .ObjectMeta.Annotations \"traffic.sidecar.istio.io/includeOutboundIPRanges\") -]]\n        - \"[[ index .ObjectMeta.Annotations \"traffic.sidecar.istio.io/includeOutboundIPRanges\"  ]]\"\n        [[ else -]]\n        - \"127.1.2.3/32\"\n        [[ end -]]\n        - \"-x\"\n        [[ if (isset .ObjectMeta.Annotations \"traffic.sidecar.istio.io/excludeOutboundIPRanges\") -]]\n        - \"[[ index .ObjectMeta.Annotations \"traffic.sidecar.istio.io/excludeOutboundIPRanges\"  ]]\"\n        [[ else -]]\n        - \"\"\n        [[ end -]]\n        - \"-b\"\n        [[ if (isset .ObjectMeta.Annotations \"traffic.sidecar.istio.io/includeInboundPorts\") -]]\n        - \"[[ index .ObjectMeta.Annotations \"traffic.sidecar.istio.io/includeInboundPorts\"  ]]\"\n        [[ else -]]\n        - [[ range .Spec.Containers -]][[ range .Ports -]][[ .ContainerPort -]], [[ end -]][[ end -]][[ end]]\n        - \"-d\"\n        [[ if (isset .ObjectMeta.Annotations \"traffic.sidecar.istio.io/excludeInboundPorts\") -]]\n        - \"[[ index .ObjectMeta.Annotations \"traffic.sidecar.istio.io/excludeInboundPorts\" ]]\"\n        [[ else -]]\n        - \"\"\n        [[ end -]]\n        imagePullPolicy: IfNotPresent\n        securityContext:\n          runAsNonRoot: false\n          runAsUser: 0\n          capabilities:\n            add:\n            - NET_ADMIN\n          restartPolicy: Always\n      \n      containers:\n      - name: istio-proxy\n        image: [[ if (isset .ObjectMeta.Annotations \"sidecar.istio.io/proxyImage\") -]]\n        \"[[ index .ObjectMeta.Annotations \"sidecar.istio.io/proxyImage\" ]]\"\n        [[ else -]]\n        ops0-artifactrepo2-0-prd.data.sfdc.net/docker-sfci-dev/sfci/servicemesh/istio-packaging/proxy:50d25caed2638ed29259a2be55ba2dc0ceb49b00\n        [[ end -]]\n        args:\n        - proxy\n        - sidecar\n        - --configPath\n        - [[ .ProxyConfig.ConfigPath ]]\n        - --binaryPath\n        - [[ .ProxyConfig.BinaryPath ]]\n        - --serviceCluster\n        [[ if ne \"\" (index .ObjectMeta.Labels \"app\") -]]\n        - [[ index .ObjectMeta.Labels \"app\" ]]\n        [[ else -]]\n        - \"istio-proxy\"\n        [[ end -]]\n        - --drainDuration\n        - [[ formatDuration .ProxyConfig.DrainDuration ]]\n        - --parentShutdownDuration\n        - [[ formatDuration .ProxyConfig.ParentShutdownDuration ]]\n        - --discoveryAddress\n        - [[ .ProxyConfig.DiscoveryAddress ]]\n        - --discoveryRefreshDelay\n        - [[ formatDuration .ProxyConfig.DiscoveryRefreshDelay ]]\n        - --zipkinAddress\n        - [[ .ProxyConfig.ZipkinAddress ]]\n        - --connectTimeout\n        - [[ formatDuration .ProxyConfig.ConnectTimeout ]]\n        - --proxyAdminPort\n        - [[ .ProxyConfig.ProxyAdminPort ]]\n        [[ if gt .ProxyConfig.Concurrency 0 -]]\n        - --concurrency\n        - [[ .ProxyConfig.Concurrency ]]\n        [[ end -]]\n        - --controlPlaneAuthPolicy\n        - [[ or (index .ObjectMeta.Annotations \"sidecar.istio.io/controlPlaneAuthPolicy\") .ProxyConfig.ControlPlaneAuthPolicy ]]\n        env:\n        - name: POD_NAME\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.name\n        - name: POD_NAMESPACE\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.namespace\n        - name: INSTANCE_IP\n          valueFrom:\n            fieldRef:\n              fieldPath: status.podIP\n        - name: ISTIO_META_POD_NAME\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.name\n        - name: ISTIO_META_INTERCEPTION_MODE\n          value: [[ or (index .ObjectMeta.Annotations \"sidecar.istio.io/interceptionMode\") .ProxyConfig.InterceptionMode.String ]]\n        imagePullPolicy: IfNotPresent\n        securityContext:\n          readOnlyRootFilesystem: true\n          [[ if eq (or (index .ObjectMeta.Annotations \"sidecar.istio.io/interceptionMode\") .ProxyConfig.InterceptionMode.String) \"TPROXY\" -]]\n          capabilities:\n            add:\n            - NET_ADMIN\n          runAsGroup: 1337\n          [[ else -]]\n          runAsUser: 1337\n          [[ end -]]\n        restartPolicy: Always\n        resources:\n          [[ if (isset .ObjectMeta.Annotations \"sidecar.istio.io/proxyCPU\") -]]\n          requests:\n            cpu: \"[[ index .ObjectMeta.Annotations \"sidecar.istio.io/proxyCPU\" ]]\"\n            memory: \"[[ index .ObjectMeta.Annotations \"sidecar.istio.io/proxyMemory\" ]]\"\n        [[ else -]]\n          requests:\n            cpu: 10m\n          \n        [[ end -]]\n        volumeMounts:\n        - mountPath: /etc/istio/proxy\n          name: istio-envoy\n        - mountPath: /etc/certs/root-cert.pem # Maddog certs mapped to istio certs default locations.\n          name: tls-server-cert               # Volume should be defined in Manifest file.\n          subPath: ca.pem\n        - mountPath: /etc/certs/cert-chain.pem\n          name: tls-server-cert\n          subPath: server/certificates/server.pem\n        - mountPath: /etc/certs/key.pem\n          name: tls-server-cert\n          subPath: server/keys/server-key.pem\n        - mountPath: /etc/certs/client.pem\n          name: tls-client-cert\n          subPath: client/certificates/client.pem\n        - mountPath: /etc/certs/client-key.pem\n          name: tls-client-cert\n          subPath: client/keys/client-key.pem\n      volumes:\n      - emptyDir:\n          medium: Memory\n        name: istio-envoy\nkind: ConfigMap\nmetadata:\n  labels:\n    app: istio\n    chart: istio-1.0.1\n    heritage: Tiller\n    istio: sidecar-injector\n    release: istio\n  name: istio-sidecar-injector\n  namespace: mesh-control-plane"
          }
        }
      }
    },
    "upstream": "https://github.com/istio/istio/tree/d639408fded355fb906ef2a1f9e8ffddc24c3d64/install/kubernetes/helm/istio",
    "metadata": {
      "applicationType": "helm",
      "icon": "https://istio.io/favicons/android-192x192.png",
      "name": "istio",
      "releaseNotes": "Add grafana persist option to istio helm chart (#7553) (#8417)\n\nOn pod death, the current grafana chart does not persist any\r\nconfiguration changes made in the UI (like adding alerts).\r\nThis adds a boolean option `grafana.persist` to create a\r\n`PersistentVolumeClaim` that mounts to the existing grafana\r\ndata volume.\r\n\r\nThere is an additional option for `storageClassName` to override the\r\ndefault storage class.\r\n\r\n* Moved storageClassName to values.yaml instead of default operator",
      "version": "1.0.1"
    },
    "contentSHA": "1118d0abefaa95e8d0617dcf735daa8f454a729e54f34f3860d619e5d71d9e15",
    "lifecycle": {
      "stepsCompleted": {
        "intro": true,
        "kustomize": true,
        "kustomize-intro": true,
        "outro": true,
        "render": true,
        "values": true
      }
    }
  }
}