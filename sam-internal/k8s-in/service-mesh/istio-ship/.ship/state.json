{
  "v1": {
    "config": null,
    "helmValues": "# Top level istio values file has the following sections.\n#\n# global: This file is the authoritative and exhaustive source for the global section.\n#\n# chart sections: Every subdirectory inside the charts/ directory has a top level\n#       configuration key in this file. This file overrides the values specified\n#       by the charts/${chartname}/values.yaml.\n#       Check the chart level values file for exhaustive list of configuration options.\n\n#\n# Gateways Configuration, refer to the charts/gateways/values.yaml\n# for detailed configuration\n#\ngateways:\n  enabled: true\n#\n# sidecar-injector webhook configuration, refer to the\n# charts/sidecarInjectorWebhook/values.yaml for detailed configuration\n#\nsidecarInjectorWebhook:\n  enabled: true\n#\n# galley configuration, refer to charts/galley/values.yaml\n# for detailed configuration\n#\ngalley:\n  enabled: false\n#\n# mixer configuration\n#\n# @see charts/mixer/values.yaml, it takes precedence\nmixer:\n  enabled: false\n  policy:\n    # if policy is enabled the global.disablePolicyChecks has affect.\n    enabled: false\n  telemetry:\n    enabled: false\n#\n# pilot configuration\n#\n# @see charts/pilot/values.yaml\npilot:\n  enabled: true\n#\n# security configuration\n#\nsecurity:\n  enabled: false\n#\n# nodeagent configuration\n#\nnodeagent:\n  enabled: false\n#\n# addon grafana configuration\n#\ngrafana:\n  enabled: false\n#\n# addon prometheus configuration\n#\nprometheus:\n  enabled: false\n#\n# addon servicegraph configuration\n#\nservicegraph:\n  enabled: false\n#\n# addon jaeger tracing configuration\n#\ntracing:\n  enabled: false\n#\n# addon kiali tracing configuration\n#\nkiali:\n  enabled: false\n#\n# Istio CNI plugin enabled\n#   This must be enabled to use the CNI plugin in Istio.  The CNI plugin is installed separately.\n#   If true, the privileged initContainer istio-init is not needed to perform the traffic redirect\n#   settings for the istio-proxy.\n#\nistio_cni:\n  enabled: false\n# addon Istio CoreDNS configuration\n#\nistiocoredns:\n  enabled: false\n# Common settings used among istio subcharts.\nglobal:\n  # Default hub for Istio images.\n  # Releases are published to docker hub under 'istio' project.\n  # Daily builds from prow are on gcr.io, and nightly builds from circle on docker.io/istionightly\n  hub: gcr.io/istio-release\n  # Default tag for Istio images.\n  tag: release-1.1-latest-daily\n  # Comma-separated minimum per-scope logging level of messages to output, in the form of \u003cscope\u003e:\u003clevel\u003e,\u003cscope\u003e:\u003clevel\u003e\n  # The control plane has different scopes depending on component, but can configure default log level across all components\n  # If empty, default scope and level will be used as configured in code\n  logging:\n    level: default:info\n\n  # monitoring port used by mixer, pilot, galley\n  monitoringPort: 15014\n  k8sIngress:\n    enabled: false\n    # Gateway used for k8s Ingress resources. By default it is\n    # using 'istio:ingressgateway' that will be installed by setting\n    # 'gateways.enabled' and 'gateways.istio-ingressgateway.enabled'\n    # flags to true.\n    gatewayName: ingressgateway\n    # enableHttps will add port 443 on the ingress.\n    # It REQUIRES that the certificates are installed  in the\n    # expected secrets - enabling this option without certificates\n    # will result in LDS rejection and the ingress will not work.\n    enableHttps: false\n  proxy:\n    image: proxyv2\n    # cluster domain. Default value is \"cluster.local\".\n    clusterDomain: cluster.local\n\n    # Resources for the sidecar.\n    resources:\n      requests:\n        cpu: 100m\n        memory: 128Mi\n      limits:\n        cpu: 2000m\n        memory: 128Mi\n    # Controls number of Proxy worker threads.\n    # If set to 0 (default), then start worker thread for each CPU thread/core.\n    concurrency: 2\n    # Configures the access log for each sidecar.\n    # Options:\n    #   \"\" - disables access log\n    #   \"/dev/stdout\" - enables access log\n    accessLogFile: \"\"\n\n    # Configure how and what fields are displayed in sidecar access log. Setting to\n    # empty string will result in default log format\n    accessLogFormat: \"\"\n\n    # Configure the access log for sidecar to JSON or TEXT.\n    accessLogEncoding: TEXT\n    # Log level for proxy, applies to gateways and sidecars.  If left empty, \"warning\" is used.\n    # Expected values are: trace|debug|info|warning|error|critical|off\n    logLevel: \"\"\n\n    # Configure the DNS refresh rate for Envoy cluster of type STRICT_DNS\n    # 5 seconds is the default refresh rate used by Envoy\n    dnsRefreshRate: 5s\n    #If set to true, istio-proxy container will have privileged securityContext\n    privileged: false\n    # If set, newly injected sidecars will have core dumps enabled.\n    enableCoreDump: false\n    # Default port for Pilot agent health checks. A value of 0 will disable health checking.\n    statusPort: 15020\n    # The initial delay for readiness probes in seconds.\n    readinessInitialDelaySeconds: 1\n    # The period between readiness probes.\n    readinessPeriodSeconds: 2\n    # The number of successive failed probes before indicating readiness failure.\n    readinessFailureThreshold: 30\n    # istio egress capture whitelist\n    # https://istio.io/docs/tasks/traffic-management/egress.html#calling-external-services-directly\n    # example: includeIPRanges: \"172.30.0.0/16,172.20.0.0/16\"\n    # would only capture egress traffic on those two IP Ranges, all other outbound traffic would\n    # be allowed by the sidecar\n    includeIPRanges: '*'\n    excludeIPRanges: \"\"\n\n    # pod internal interfaces\n    kubevirtInterfaces: \"\"\n\n    # istio ingress capture whitelist\n    # examples:\n    #     Redirect no inbound traffic to Envoy:    --includeInboundPorts=\"\"\n    #     Redirect all inbound traffic to Envoy:   --includeInboundPorts=\"*\"\n    #     Redirect only selected ports:            --includeInboundPorts=\"80,8080\"\n    includeInboundPorts: '*'\n    excludeInboundPorts: \"\"\n\n    # This controls the 'policy' in the sidecar injector.\n    autoInject: enabled\n    # Sets the destination Statsd in envoy (the value of the \"--statsdUdpAddress\" proxy argument\n    # would be \u003chost\u003e:\u003cport\u003e).\n    # Disabled by default.\n    # The istio-statsd-prom-bridge is deprecated and should not be used moving forward.\n    envoyStatsd:\n      # If enabled is set to true, host and port must also be provided. Istio no longer provides a statsd collector.\n      enabled: false\n      host: null\n      port: null\n    envoyMetricsService:\n      enabled: false\n      host: null\n      port: null\n    tracer: zipkin\n\n  proxy_init:\n    # Base name for the proxy_init container, used to configure iptables.\n    image: proxy_init\n  # imagePullPolicy is applied to istio control plane components.\n  # local tests require IfNotPresent, to avoid uploading to dockerhub.\n  # TODO: Switch to Always as default, and override in the local tests.\n  imagePullPolicy: IfNotPresent\n  # controlPlaneMtls enabled. Will result in delays starting the pods while secrets are\n  # propagated, not recommended for tests.\n  controlPlaneSecurityEnabled: false\n  # disablePolicyChecks disables mixer policy checks.\n  # if mixer.policy.enabled==true then disablePolicyChecks has affect.\n  # Will set the value with same name in istio config map - pilot needs to be restarted to take effect.\n  disablePolicyChecks: true\n  # policyCheckFailOpen allows traffic in cases when the mixer policy service cannot be reached.\n  # Default is false which means the traffic is denied when the client is unable to connect to Mixer.\n  policyCheckFailOpen: false\n  # EnableTracing sets the value with same name in istio config map, requires pilot restart to take effect.\n  enableTracing: true\n  # Configuration for each of the supported tracers\n  tracer:\n    # Configuration for envoy to send trace data to LightStep.\n    # Disabled by default.\n    # address: the \u003chost\u003e:\u003cport\u003e of the satellite pool\n    # accessToken: required for sending data to the pool\n    # secure: specifies whether data should be sent with TLS\n    # cacertPath: the path to the file containing the cacert to use when verifying TLS. If secure is true, this is\n    #   required. If a value is specified then a secret called \"lightstep.cacert\" must be created in the destination\n    #   namespace with the key matching the base of the provided cacertPath and the value being the cacert itself.\n    #\n    lightstep:\n      address: \"\"\n                                 # example: lightstep-satellite:443\n      accessToken: \"\"\n                                 # example: abcdefg1234567\n      secure: true\n                                 # example: true|false\n      cacertPath: \"\"\n                                 # example: /etc/lightstep/cacert.pem\n    zipkin:\n      # Host:Port for reporting trace data in zipkin format. If not specified, will default to\n      # zipkin service (port 9411) in the same namespace as the other istio components.\n      address: \"\"\n    datadog:\n      # Host:Port for submitting traces to the Datadog agent.\n      address: $(HOST_IP):8126\n\n  # Default mtls policy. If true, mtls between services will be enabled by default.\n  mtls:\n    # Default setting for service-to-service mtls. Can be set explicitly using\n    # destination rules or service annotations.\n    enabled: false\n  # ImagePullSecrets for all ServiceAccount, list of secrets in the same namespace\n  # to use for pulling any images in pods that reference this ServiceAccount.\n  # For components that don't use ServiceAccounts (i.e. grafana, servicegraph, tracing)\n  # ImagePullSecrets will be added to the corresponding Deployment(StatefulSet) objects.\n  # Must be set for any clustser configured with private docker registry.\n  imagePullSecrets: null\n  arch:\n    amd64: 2\n    s390x: 2\n    ppc64le: 2\n  # Whether to restrict the applications namespace the controller manages;\n  # If not set, controller watches all namespaces\n  oneNamespace: false\n  # Default node selector to be applied to all deployments so that all pods can be \n  # constrained to run a particular nodes. Each component can overwrite these default \n  # values by adding its node selector block in the relevant section below and setting \n  # the desired values.\n  defaultNodeSelector: {}\n\n  # Whether to perform server-side validation of configuration.\n  configValidation: false\n  # Custom DNS config for the pod to resolve names of services in other\n  # clusters. Use this to add additional search domains, and other settings.\n  # see\n  # https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/#dns-config\n  # This does not apply to gateway pods as they typically need a different\n  # set of DNS settings than the normal application pods (e.g., in\n  # multicluster scenarios).\n  # NOTE: If using templates, follow the pattern in the commented example below.\n  #podDNSSearchNamespaces:\n  #- global\n  #- \"[[ valueOrDefault .DeploymentMeta.Namespace \\\"default\\\" ]].global\"\n\n  # If set to true, the pilot and citadel mtls will be exposed on the\n  # ingress gateway\n  meshExpansion:\n    enabled: false\n    # If set to true, the pilot and citadel mtls and the plain text pilot ports\n    # will be exposed on an internal gateway\n    useILB: false\n  multiCluster:\n    # Set to true to connect two kubernetes clusters via their respective\n    # ingressgateway services when pods in each cluster cannot directly\n    # talk to one another. All clusters should be using Istio mTLS and must\n    # have a shared root CA for this model to work.\n    enabled: false\n  # A minimal set of requested resources to applied to all deployments so that\n  # Horizontal Pod Autoscaler will be able to function (if set).\n  # Each component can overwrite these default values by adding its own resources\n  # block in the relevant section below and setting the desired resources values.\n  defaultResources:\n    requests:\n      cpu: 10m\n    #   memory: 128Mi\n    # limits:\n    #   cpu: 100m\n    #   memory: 128Mi\n\n  # enable pod distruption budget for the control plane, which is used to\n  # ensure Istio control plane components are gradually upgraded or recovered.\n  defaultPodDisruptionBudget:\n    enabled: false\n    # The values aren't mutable due to a current PodDisruptionBudget limitation\n    # minAvailable: 1\n\n  # Kubernetes \u003e=v1.11.0 will create two PriorityClass, including system-cluster-critical and\n  # system-node-critical, it is better to configure this in order to make sure your Istio pods\n  # will not be killed because of low priority class.\n  # Refer to https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass\n  # for more detail.\n  priorityClassName: \"\"\n\n  # Use the Mesh Control Protocol (MCP) for configuring Mixer and\n  # Pilot. Requires galley (`--set galley.enabled=true`).\n  useMCP: false\n  # The trust domain corresponds to the trust root of a system\n  # Refer to https://github.com/spiffe/spiffe/blob/master/standards/SPIFFE-ID.md#21-trust-domain\n  # Indicate the domain used in SPIFFE identity URL\n  # The default depends on the environment.\n  #   kubernetes: cluster.local\n  #   else:  default dns domain\n  trustDomain: \"\"\n\n  # Set the default behavior of the sidecar for handling outbound traffic from the application:\n  # ALLOW_ANY - outbound traffic to unknown destinations will be allowed, in case there are no\n  #   services or ServiceEntries for the destination port\n  # REGISTRY_ONLY - restrict outbound traffic to services defined in the service registry as well\n  #   as those defined through ServiceEntries\n  # ALLOW_ANY is the default in 1.1.  This means each pod will be able to make outbound requests \n  # to services outside of the mesh without any ServiceEntry.\n  # REGISTRY_ONLY was the default in 1.0.  If this behavior is desired, set the value below to REGISTRY_ONLY.\n  outboundTrafficPolicy:\n    mode: ALLOW_ANY\n  # The namespace where globally shared configurations should be present.\n  # DestinationRules that apply to the entire mesh (e.g., enabling mTLS),\n  # default Sidecar configs, etc. should be added to this namespace.\n  # configRootNamespace: istio-config\n\n  # set the default set of namespaces to which services, service entries, virtual services, destination\n  # rules should be exported to. Currently only one value can be provided in this list. This value\n  # should be one of the following two options:\n  # * implies these objects are visible to all namespaces, enabling any sidecar to talk to any other sidecar.\n  # . implies these objects are visible to only to sidecars in the same namespace, or if imported as a Sidecar.egress.host  \n  #defaultConfigVisibilitySettings:\n  #- '*'\n\n  sds:\n    # SDS enabled. IF set to true, mTLS certificates for the sidecars will be\n    # distributed through the SecretDiscoveryService instead of using K8S secrets to mount the certificates.\n    enabled: false\n    udsPath: \"\"\n    useTrustworthyJwt: false\n    useNormalJwt: false\n  # Configure the mesh networks to be used by the Split Horizon EDS.\n  #\n  # The following example defines two networks with different endpoints association methods.\n  # For `network1` all endpoints that their IP belongs to the provided CIDR range will be\n  # mapped to network1. The gateway for this network example is specified by its public IP\n  # address and port.\n  # The second network, `network2`, in this example is defined differently with all endpoints\n  # retrieved through the specified Multi-Cluster registry being mapped to network2. The\n  # gateway is also defined differently with the name of the gateway service on the remote\n  # cluster. The public IP for the gateway will be determined from that remote service (not\n  # supported yet).\n  #\n  # meshNetworks:\n  #   network1:\n  #     endpoints:\n  #     - fromCidr: \"192.168.0.1/24\"\n  #     gateways:\n  #     - address: 1.1.1.1\n  #       port: 80\n  #   network2:\n  #     endpoints:\n  #     - fromRegistry: reg1\n  #     gateways:\n  #     - registryServiceName: istio-ingressgateway\n  #       port: 443\n  #\n  meshNetworks: {}\n\n  # Specifies the global locality load balancing settings.\n  # Locality-weighted load balancing allows administrators to control the distribution of traffic to\n  # endpoints based on the localities of where the traffic originates and where it will terminate.\n  # Please set either failover or distribute configuration but not both.\n  #\n  # localityLbSetting:\n  #   distribute:\n  #   - from: \"us-central1/*\"\n  #     to:\n  #       \"us-central1/*\": 80\n  #       \"us-central2/*\": 20\n  #\n  # localityLbSetting:\n  #   failover:\n  #   - from: us-east\n  #     to: eu-west\n  #   - from: us-west\n  #     to: us-east\n  localityLbSetting: {}\n\n  # Specifies whether helm test is enabled or not.\n  # This field is set to false by default, so 'helm template ...'\n  # will ignore the helm test yaml files when generating the template\n  enableHelmTest: false\n",
    "releaseName": "istio",
    "namespace": "mesh-control-plane",
    "helmValuesDefaults": "# Top level istio values file has the following sections.\n#\n# global: This file is the authoritative and exhaustive source for the global section.\n#\n# chart sections: Every subdirectory inside the charts/ directory has a top level\n#       configuration key in this file. This file overrides the values specified\n#       by the charts/${chartname}/values.yaml.\n#       Check the chart level values file for exhaustive list of configuration options.\n\n#\n# Gateways Configuration, refer to the charts/gateways/values.yaml\n# for detailed configuration\n#\ngateways:\n  enabled: true\n\n#\n# sidecar-injector webhook configuration, refer to the\n# charts/sidecarInjectorWebhook/values.yaml for detailed configuration\n#\nsidecarInjectorWebhook:\n  enabled: true\n\n#\n# galley configuration, refer to charts/galley/values.yaml\n# for detailed configuration\n#\ngalley:\n  enabled: true\n\n#\n# mixer configuration\n#\n# @see charts/mixer/values.yaml, it takes precedence\nmixer:\n  enabled: true\n  policy:\n    # if policy is enabled the global.disablePolicyChecks has affect.\n    enabled: true\n\n  telemetry:\n    enabled: true\n#\n# pilot configuration\n#\n# @see charts/pilot/values.yaml\npilot:\n  enabled: true\n\n#\n# security configuration\n#\nsecurity:\n  enabled: true\n\n#\n# nodeagent configuration\n#\nnodeagent:\n  enabled: false\n\n#\n# addon grafana configuration\n#\ngrafana:\n  enabled: false\n\n#\n# addon prometheus configuration\n#\nprometheus:\n  enabled: true\n\n#\n# addon servicegraph configuration\n#\nservicegraph:\n  enabled: false\n\n#\n# addon jaeger tracing configuration\n#\ntracing:\n  enabled: false\n\n#\n# addon kiali tracing configuration\n#\nkiali:\n  enabled: false\n\n#\n# Istio CNI plugin enabled\n#   This must be enabled to use the CNI plugin in Istio.  The CNI plugin is installed separately.\n#   If true, the privileged initContainer istio-init is not needed to perform the traffic redirect\n#   settings for the istio-proxy.\n#\nistio_cni:\n  enabled: false\n\n# addon Istio CoreDNS configuration\n#\nistiocoredns:\n  enabled: false\n\n# Common settings used among istio subcharts.\nglobal:\n  # Default hub for Istio images.\n  # Releases are published to docker hub under 'istio' project.\n  # Daily builds from prow are on gcr.io, and nightly builds from circle on docker.io/istionightly\n  hub: gcr.io/istio-release\n\n  # Default tag for Istio images.\n  tag: release-1.1-latest-daily\n\n  # Comma-separated minimum per-scope logging level of messages to output, in the form of \u003cscope\u003e:\u003clevel\u003e,\u003cscope\u003e:\u003clevel\u003e\n  # The control plane has different scopes depending on component, but can configure default log level across all components\n  # If empty, default scope and level will be used as configured in code\n  logging:\n    level: \"default:info\"\n\n  # monitoring port used by mixer, pilot, galley\n  monitoringPort: 15014\n\n  k8sIngress:\n    enabled: false\n    # Gateway used for k8s Ingress resources. By default it is\n    # using 'istio:ingressgateway' that will be installed by setting\n    # 'gateways.enabled' and 'gateways.istio-ingressgateway.enabled'\n    # flags to true.\n    gatewayName: ingressgateway\n    # enableHttps will add port 443 on the ingress.\n    # It REQUIRES that the certificates are installed  in the\n    # expected secrets - enabling this option without certificates\n    # will result in LDS rejection and the ingress will not work.\n    enableHttps: false\n\n  proxy:\n    image: proxyv2\n\n    # cluster domain. Default value is \"cluster.local\".\n    clusterDomain: \"cluster.local\"\n\n    # Resources for the sidecar.\n    resources:\n      requests:\n        cpu: 100m\n        memory: 128Mi\n      limits:\n        cpu: 2000m\n        memory: 128Mi\n\n    # Controls number of Proxy worker threads.\n    # If set to 0 (default), then start worker thread for each CPU thread/core.\n    concurrency: 2\n\n    # Configures the access log for each sidecar.\n    # Options:\n    #   \"\" - disables access log\n    #   \"/dev/stdout\" - enables access log\n    accessLogFile: \"\"\n\n    # Configure how and what fields are displayed in sidecar access log. Setting to\n    # empty string will result in default log format\n    accessLogFormat: \"\"\n\n    # Configure the access log for sidecar to JSON or TEXT.\n    accessLogEncoding: TEXT\n\n    # Log level for proxy, applies to gateways and sidecars.  If left empty, \"warning\" is used.\n    # Expected values are: trace|debug|info|warning|error|critical|off\n    logLevel: \"\"\n\n    # Configure the DNS refresh rate for Envoy cluster of type STRICT_DNS\n    # 5 seconds is the default refresh rate used by Envoy\n    dnsRefreshRate: 5s\n\n    #If set to true, istio-proxy container will have privileged securityContext\n    privileged: false\n\n    # If set, newly injected sidecars will have core dumps enabled.\n    enableCoreDump: false\n\n    # Default port for Pilot agent health checks. A value of 0 will disable health checking.\n    statusPort: 15020\n\n    # The initial delay for readiness probes in seconds.\n    readinessInitialDelaySeconds: 1\n\n    # The period between readiness probes.\n    readinessPeriodSeconds: 2\n\n    # The number of successive failed probes before indicating readiness failure.\n    readinessFailureThreshold: 30\n\n    # istio egress capture whitelist\n    # https://istio.io/docs/tasks/traffic-management/egress.html#calling-external-services-directly\n    # example: includeIPRanges: \"172.30.0.0/16,172.20.0.0/16\"\n    # would only capture egress traffic on those two IP Ranges, all other outbound traffic would\n    # be allowed by the sidecar\n    includeIPRanges: \"*\"\n    excludeIPRanges: \"\"\n\n    # pod internal interfaces\n    kubevirtInterfaces: \"\"\n\n    # istio ingress capture whitelist\n    # examples:\n    #     Redirect no inbound traffic to Envoy:    --includeInboundPorts=\"\"\n    #     Redirect all inbound traffic to Envoy:   --includeInboundPorts=\"*\"\n    #     Redirect only selected ports:            --includeInboundPorts=\"80,8080\"\n    includeInboundPorts: \"*\"\n    excludeInboundPorts: \"\"\n\n    # This controls the 'policy' in the sidecar injector.\n    autoInject: enabled\n\n    # Sets the destination Statsd in envoy (the value of the \"--statsdUdpAddress\" proxy argument\n    # would be \u003chost\u003e:\u003cport\u003e).\n    # Disabled by default.\n    # The istio-statsd-prom-bridge is deprecated and should not be used moving forward.\n    envoyStatsd:\n      # If enabled is set to true, host and port must also be provided. Istio no longer provides a statsd collector.\n      enabled: false\n      host: # example: statsd-svc.istio-system\n      port: # example: 9125\n\n    # Sets the Envoy Metrics Service address, used to push Envoy metrics to an external collector\n    # via the Metrics Service gRPC API. This contains detailed stats information emitted directly\n    # by Envoy and should not be confused with the the Istio telemetry. The Envoy stats are also\n    # available to scrape via the Envoy admin port at either /stats or /stats/prometheus.\n    #\n    # See https://www.envoyproxy.io/docs/envoy/latest/api-v2/config/metrics/v2/metrics_service.proto\n    # for details about Envoy's Metrics Service API. \n    #\n    # Disabled by default.\n    envoyMetricsService:\n      enabled: false\n      host: # example: metrics-service.istio-system\n      port: # example: 15000\n\n    # Specify which tracer to use. One of: lightstep, zipkin, datadog\n    tracer: \"zipkin\"\n\n  proxy_init:\n    # Base name for the proxy_init container, used to configure iptables.\n    image: proxy_init\n\n  # imagePullPolicy is applied to istio control plane components.\n  # local tests require IfNotPresent, to avoid uploading to dockerhub.\n  # TODO: Switch to Always as default, and override in the local tests.\n  imagePullPolicy: IfNotPresent\n\n  # controlPlaneMtls enabled. Will result in delays starting the pods while secrets are\n  # propagated, not recommended for tests.\n  controlPlaneSecurityEnabled: false\n\n  # disablePolicyChecks disables mixer policy checks.\n  # if mixer.policy.enabled==true then disablePolicyChecks has affect.\n  # Will set the value with same name in istio config map - pilot needs to be restarted to take effect.\n  disablePolicyChecks: true\n\n  # policyCheckFailOpen allows traffic in cases when the mixer policy service cannot be reached.\n  # Default is false which means the traffic is denied when the client is unable to connect to Mixer.\n  policyCheckFailOpen: false\n\n  # EnableTracing sets the value with same name in istio config map, requires pilot restart to take effect.\n  enableTracing: true\n\n  # Configuration for each of the supported tracers\n  tracer:\n    # Configuration for envoy to send trace data to LightStep.\n    # Disabled by default.\n    # address: the \u003chost\u003e:\u003cport\u003e of the satellite pool\n    # accessToken: required for sending data to the pool\n    # secure: specifies whether data should be sent with TLS\n    # cacertPath: the path to the file containing the cacert to use when verifying TLS. If secure is true, this is\n    #   required. If a value is specified then a secret called \"lightstep.cacert\" must be created in the destination\n    #   namespace with the key matching the base of the provided cacertPath and the value being the cacert itself.\n    #\n    lightstep:\n      address: \"\"                # example: lightstep-satellite:443\n      accessToken: \"\"            # example: abcdefg1234567\n      secure: true               # example: true|false\n      cacertPath: \"\"             # example: /etc/lightstep/cacert.pem\n    zipkin:\n      # Host:Port for reporting trace data in zipkin format. If not specified, will default to\n      # zipkin service (port 9411) in the same namespace as the other istio components.\n      address: \"\"\n    datadog:\n      # Host:Port for submitting traces to the Datadog agent.\n      address: \"$(HOST_IP):8126\"\n\n  # Default mtls policy. If true, mtls between services will be enabled by default.\n  mtls:\n    # Default setting for service-to-service mtls. Can be set explicitly using\n    # destination rules or service annotations.\n    enabled: false\n\n  # ImagePullSecrets for all ServiceAccount, list of secrets in the same namespace\n  # to use for pulling any images in pods that reference this ServiceAccount.\n  # For components that don't use ServiceAccounts (i.e. grafana, servicegraph, tracing)\n  # ImagePullSecrets will be added to the corresponding Deployment(StatefulSet) objects.\n  # Must be set for any clustser configured with private docker registry.\n  imagePullSecrets:\n    # - private-registry-key\n\n  # Specify pod scheduling arch(amd64, ppc64le, s390x) and weight as follows:\n  #   0 - Never scheduled\n  #   1 - Least preferred\n  #   2 - No preference\n  #   3 - Most preferred\n  arch:\n    amd64: 2\n    s390x: 2\n    ppc64le: 2\n\n  # Whether to restrict the applications namespace the controller manages;\n  # If not set, controller watches all namespaces\n  oneNamespace: false\n\n  # Default node selector to be applied to all deployments so that all pods can be \n  # constrained to run a particular nodes. Each component can overwrite these default \n  # values by adding its node selector block in the relevant section below and setting \n  # the desired values.\n  defaultNodeSelector: {}\n\n  # Whether to perform server-side validation of configuration.\n  configValidation: true\n\n  # Custom DNS config for the pod to resolve names of services in other\n  # clusters. Use this to add additional search domains, and other settings.\n  # see\n  # https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/#dns-config\n  # This does not apply to gateway pods as they typically need a different\n  # set of DNS settings than the normal application pods (e.g., in\n  # multicluster scenarios).\n  # NOTE: If using templates, follow the pattern in the commented example below.\n  #podDNSSearchNamespaces:\n  #- global\n  #- \"[[ valueOrDefault .DeploymentMeta.Namespace \\\"default\\\" ]].global\"\n\n  # If set to true, the pilot and citadel mtls will be exposed on the\n  # ingress gateway\n  meshExpansion:\n    enabled: false\n    # If set to true, the pilot and citadel mtls and the plain text pilot ports\n    # will be exposed on an internal gateway\n    useILB: false\n\n  multiCluster:\n    # Set to true to connect two kubernetes clusters via their respective\n    # ingressgateway services when pods in each cluster cannot directly\n    # talk to one another. All clusters should be using Istio mTLS and must\n    # have a shared root CA for this model to work.\n    enabled: false\n\n  # A minimal set of requested resources to applied to all deployments so that\n  # Horizontal Pod Autoscaler will be able to function (if set).\n  # Each component can overwrite these default values by adding its own resources\n  # block in the relevant section below and setting the desired resources values.\n  defaultResources:\n    requests:\n      cpu: 10m\n    #   memory: 128Mi\n    # limits:\n    #   cpu: 100m\n    #   memory: 128Mi\n\n  # enable pod distruption budget for the control plane, which is used to\n  # ensure Istio control plane components are gradually upgraded or recovered.\n  defaultPodDisruptionBudget:\n    enabled: true\n    # The values aren't mutable due to a current PodDisruptionBudget limitation\n    # minAvailable: 1\n\n  # Kubernetes \u003e=v1.11.0 will create two PriorityClass, including system-cluster-critical and\n  # system-node-critical, it is better to configure this in order to make sure your Istio pods\n  # will not be killed because of low priority class.\n  # Refer to https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass\n  # for more detail.\n  priorityClassName: \"\"\n\n  # Use the Mesh Control Protocol (MCP) for configuring Mixer and\n  # Pilot. Requires galley (`--set galley.enabled=true`).\n  useMCP: true\n\n  # The trust domain corresponds to the trust root of a system\n  # Refer to https://github.com/spiffe/spiffe/blob/master/standards/SPIFFE-ID.md#21-trust-domain\n  # Indicate the domain used in SPIFFE identity URL\n  # The default depends on the environment.\n  #   kubernetes: cluster.local\n  #   else:  default dns domain\n  trustDomain: \"\"\n\n  # Set the default behavior of the sidecar for handling outbound traffic from the application:\n  # ALLOW_ANY - outbound traffic to unknown destinations will be allowed, in case there are no\n  #   services or ServiceEntries for the destination port\n  # REGISTRY_ONLY - restrict outbound traffic to services defined in the service registry as well\n  #   as those defined through ServiceEntries\n  # ALLOW_ANY is the default in 1.1.  This means each pod will be able to make outbound requests \n  # to services outside of the mesh without any ServiceEntry.\n  # REGISTRY_ONLY was the default in 1.0.  If this behavior is desired, set the value below to REGISTRY_ONLY.\n  outboundTrafficPolicy:\n    mode: ALLOW_ANY\n\n  # The namespace where globally shared configurations should be present.\n  # DestinationRules that apply to the entire mesh (e.g., enabling mTLS),\n  # default Sidecar configs, etc. should be added to this namespace.\n  # configRootNamespace: istio-config\n\n  # set the default set of namespaces to which services, service entries, virtual services, destination\n  # rules should be exported to. Currently only one value can be provided in this list. This value\n  # should be one of the following two options:\n  # * implies these objects are visible to all namespaces, enabling any sidecar to talk to any other sidecar.\n  # . implies these objects are visible to only to sidecars in the same namespace, or if imported as a Sidecar.egress.host  \n  #defaultConfigVisibilitySettings:\n  #- '*'\n\n  sds:\n    # SDS enabled. IF set to true, mTLS certificates for the sidecars will be\n    # distributed through the SecretDiscoveryService instead of using K8S secrets to mount the certificates.\n    enabled: false\n    udsPath: \"\"\n    useTrustworthyJwt: false\n    useNormalJwt: false\n\n  # Configure the mesh networks to be used by the Split Horizon EDS.\n  #\n  # The following example defines two networks with different endpoints association methods.\n  # For `network1` all endpoints that their IP belongs to the provided CIDR range will be\n  # mapped to network1. The gateway for this network example is specified by its public IP\n  # address and port.\n  # The second network, `network2`, in this example is defined differently with all endpoints\n  # retrieved through the specified Multi-Cluster registry being mapped to network2. The\n  # gateway is also defined differently with the name of the gateway service on the remote\n  # cluster. The public IP for the gateway will be determined from that remote service (not\n  # supported yet).\n  #\n  # meshNetworks:\n  #   network1:\n  #     endpoints:\n  #     - fromCidr: \"192.168.0.1/24\"\n  #     gateways:\n  #     - address: 1.1.1.1\n  #       port: 80\n  #   network2:\n  #     endpoints:\n  #     - fromRegistry: reg1\n  #     gateways:\n  #     - registryServiceName: istio-ingressgateway\n  #       port: 443\n  #\n  meshNetworks: {}\n\n  # Specifies the global locality load balancing settings.\n  # Locality-weighted load balancing allows administrators to control the distribution of traffic to\n  # endpoints based on the localities of where the traffic originates and where it will terminate.\n  # Please set either failover or distribute configuration but not both.\n  #\n  # localityLbSetting:\n  #   distribute:\n  #   - from: \"us-central1/*\"\n  #     to:\n  #       \"us-central1/*\": 80\n  #       \"us-central2/*\": 20\n  #\n  # localityLbSetting:\n  #   failover:\n  #   - from: us-east\n  #     to: eu-west\n  #   - from: us-west\n  #     to: us-east\n  localityLbSetting: {}\n\n  # Specifies whether helm test is enabled or not.\n  # This field is set to false by default, so 'helm template ...'\n  # will ignore the helm test yaml files when generating the template\n  enableHelmTest: false\n",
    "kustomize": {
      "overlays": {
        "ship": {
          "patches": {
            "/charts/gateways/templates/autoscale.yaml": "apiVersion: autoscaling/v2beta1\nkind: HorizontalPodAutoscaler\nmetadata:\n  name: istio-ingressgateway\n  namespace: mesh-control-plane\n  annotations:\n    manifestctl.sam.data.sfdc.net/swagger: disable",
            "/charts/gateways/templates/clusterrole.yaml": "apiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRole\nmetadata:\n  annotations:\n    manifestctl.sam.data.sfdc.net/swagger: disable\n  name: istio-ingressgateway-mesh-control-plane",
            "/charts/gateways/templates/clusterrolebindings.yaml": "apiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRoleBinding\nmetadata:\n  annotations:\n    manifestctl.sam.data.sfdc.net/swagger: disable\n  name: istio-ingressgateway-mesh-control-plane",
            "/charts/gateways/templates/deployment.yaml": "apiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  name: istio-ingressgateway\n  namespace: mesh-control-plane\nspec:\n  selector:\n    matchLabels:\n      app: istio-ingressgateway\n      istio: ingressgateway\n  template:\n    metadata:\n      annotations:\n        madkub.sam.sfdc.net/allcerts: mcpIstioConfig.ingressGatewayMadkubAnnotations\n      labels:\n        name: istio-ingressgateway\n    spec:\n      containers:\n      - args:\n        - proxy\n        - router\n        - --domain\n        - $(POD_NAMESPACE).svc.cluster.local\n        - --log_output_level\n        - info\n        - --drainDuration\n        - 45s\n        - --parentShutdownDuration\n        - 1m0s\n        - --connectTimeout\n        - 10s\n        - --serviceCluster\n        - istio-ingressgateway\n        - --zipkinAddress\n        - zipkin.service-mesh:9411\n        - --proxyAdminPort\n        - \"15000\"\n        - --statusPort\n        - \"15020\"\n        - --controlPlaneAuthPolicy\n        - NONE\n        - --discoveryAddress\n        - istio-pilot:15010\n        env:\n        - name: ESTATE\n          value: mcpIstioConfig.istioEstate\n        image: mcpIstioConfig.proxyImage\n        name: istio-proxy\n        ports:\n        - $patch: delete\n          containerPort: 15030\n        - $patch: delete\n          containerPort: 15031\n        - $patch: delete\n          containerPort: 31400\n        volumeMounts:\n        - mountPath: /etc/pki_service\n          name: maddog-certs\n        - mountPath: /etc/certs/root-cert.pem\n          name: tls-server-cert\n          subPath: ca.pem\n        - mountPath: /etc/certs/cert-chain.pem\n          name: tls-server-cert\n          subPath: server/certificates/server.pem\n        - mountPath: /etc/certs/key.pem\n          name: tls-server-cert\n          subPath: server/keys/server-key.pem\n        - mountPath: /etc/certs/client.pem\n          name: tls-client-cert\n          subPath: client/certificates/client.pem\n        - mountPath: /etc/certs/client-key.pem\n          name: tls-client-cert\n          subPath: client/keys/client-key.pem\n        - mountPath: /client-cert\n          name: tls-client-cert\n        - mountPath: /server-cert\n          name: tls-server-cert\n        - $patch: delete\n          mountPath: /etc/certs\n        - $patch: delete\n          mountPath: /etc/istio/ingressgateway-ca-certs\n        - $patch: delete\n          mountPath: /etc/istio/ingressgateway-certs\n      - args:\n        - /sam/madkub-client\n        - --madkub-endpoint=%(madkubEndpoint)s\n        - --maddog-endpoint=%(maddogEndpoint)s\n        - --maddog-server-ca=/maddog-certs/ca/security-ca.pem\n        - --madkub-server-ca=/maddog-certs/ca/cacerts.pem\n        - --cert-folders=tls-client-cert:/client-cert/\n        - --cert-folders=tls-server-cert:/server-cert/\n        - --token-folder=/tokens/\n        - --ca-folder=/maddog-certs/ca\n        - --refresher\n        - --run-init-for-refresher-mode\n        env:\n        - name: MADKUB_NODENAME\n          valueFrom:\n            fieldRef:\n              apiVersion: v1\n              fieldPath: spec.nodeName\n        - name: MADKUB_NAME\n          valueFrom:\n            fieldRef:\n              apiVersion: v1\n              fieldPath: metadata.name\n        - name: MADKUB_NAMESPACE\n          valueFrom:\n            fieldRef:\n              apiVersion: v1\n              fieldPath: metadata.namespace\n        - name: ESTATE\n          value: mcpIstioConfig.istioEstate      \n        image: mcpIstioConfig.madkubImage\n        imagePullPolicy: IfNotPresent\n        name: madkub-refresher\n        resources: {}\n        volumeMounts:\n        - mountPath: /client-cert\n          name: tls-client-cert\n        - mountPath: /server-cert\n          name: tls-server-cert\n        - mountPath: /maddog-certs/\n          name: maddog-certs\n        - mountPath: /tokens\n          name: tokens\n      initContainers:\n      - args:\n        - /sam/madkub-client\n        - --madkub-endpoint=%(madkubEndpoint)s\n        - --maddog-endpoint=%(maddogEndpoint)s\n        - --maddog-server-ca=/maddog-certs/ca/security-ca.pem\n        - --madkub-server-ca=/maddog-certs/ca/cacerts.pem\n        - --cert-folders=tls-client-cert:/client-cert/\n        - --cert-folders=tls-server-cert:/server-cert/\n        - --token-folder=/tokens/\n        - --ca-folder=/maddog-certs/ca\n        env:\n        - name: MADKUB_NODENAME\n          valueFrom:\n            fieldRef:\n              apiVersion: v1\n              fieldPath: spec.nodeName\n        - name: MADKUB_NAME\n          valueFrom:\n            fieldRef:\n              apiVersion: v1\n              fieldPath: metadata.name\n        - name: MADKUB_NAMESPACE\n          valueFrom:\n            fieldRef:\n              apiVersion: v1\n              fieldPath: metadata.namespace\n        image: mcpIstioConfig.madkubImage\n        imagePullPolicy: IfNotPresent\n        name: madkub-init\n        volumeMounts:\n        - mountPath: /client-cert\n          name: tls-client-cert\n        - mountPath: /server-cert\n          name: tls-server-cert\n        - mountPath: /maddog-certs/\n          name: maddog-certs\n        - mountPath: /tokens\n          name: tokens\n      - command:\n        - bash\n        - -c\n        - |\n          set -ex\n          chmod 775 -R /client-cert \u0026\u0026 chown -R 7447:7447 /client-cert\n          chmod 775 -R /server-cert \u0026\u0026 chown -R 7447:7447 /server-cert\n        image: mcpIstioConfig.permissionInitContainer\n        imagePullPolicy: Always\n        name: permissionsetterinitcontainer\n        securityContext:\n          runAsNonRoot: false\n          runAsUser: 0\n        volumeMounts:\n        - mountPath: /client-cert\n          name: tls-client-cert\n        - mountPath: /server-cert\n          name: tls-server-cert\n      nodeSelector:\n        pool: mcpIstioConfig.istioEstate\n      volumes:\n      - hostPath:\n          path: /etc/pki_service\n        name: maddog-certs\n      - emptyDir:\n          medium: Memory\n        name: tls-client-cert\n      - emptyDir:\n          medium: Memory\n        name: tls-server-cert\n      - emptyDir:\n          medium: Memory\n        name: tokens\n      - $patch: delete\n        name: ingressgateway-ca-certs\n      - $patch: delete\n        name: ingressgateway-certs\n      - $patch: delete\n        name: istio-certs",
            "/charts/gateways/templates/role.yaml": "apiVersion: rbac.authorization.k8s.io/v1\nkind: Role\nmetadata:\n  annotations:\n    manifestctl.sam.data.sfdc.net/swagger: disable\n  name: istio-ingressgateway-sds\n  namespace: mesh-control-plane",
            "/charts/gateways/templates/rolebindings.yaml": "apiVersion: rbac.authorization.k8s.io/v1\nkind: RoleBinding\nmetadata:\n  annotations:\n    manifestctl.sam.data.sfdc.net/swagger: disable\n  name: istio-ingressgateway-sds\n  namespace: mesh-control-plane",
            "/charts/gateways/templates/service.yaml": "apiVersion: v1\nkind: Service\nmetadata:\n  name: istio-ingressgateway\n  namespace: mesh-control-plane\nspec:\n  ports:\n  - $patch: delete\n    port: 15030\n  - $patch: delete\n    port: 15031\n  - $patch: delete\n    port: 31400\n  - port: 32400\n    nodePort: 32400\n    name: tcp\n  - port: 80\n    nodePort: 32380\n  - port: 443\n    nodePort: 32390",
            "/charts/gateways/templates/serviceaccount.yaml": "--- \napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  annotations:\n    manifestctl.sam.data.sfdc.net/swagger: disable\n  name: istio-ingressgateway-service-account",
            "/charts/pilot/templates/autoscale.yaml": "apiVersion: autoscaling/v2beta1\nkind: HorizontalPodAutoscaler\nmetadata:\n  name: istio-pilot\n  annotations:\n    manifestctl.sam.data.sfdc.net/swagger: disable",
            "/charts/pilot/templates/clusterrole.yaml": "apiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRole\nmetadata:\n  annotations:\n    manifestctl.sam.data.sfdc.net/swagger: disable\n  name: istio-pilot-mesh-control-plane",
            "/charts/pilot/templates/clusterrolebinding.yaml": "apiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRoleBinding\nmetadata:\n  annotations:\n    manifestctl.sam.data.sfdc.net/swagger: disable\n  name: istio-pilot-mesh-control-plane",
            "/charts/pilot/templates/deployment.yaml": "apiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  name: istio-pilot\n  namespace: mesh-control-plane\nspec:\n  selector:\n    matchLabels:\n      app: pilot\n  template:\n    metadata:\n      labels:\n        name: istio-pilot\n    spec:\n      containers:\n      - args:\n        - discovery\n        - --monitoringAddr=:15014\n        - --domain\n        - cluster.local\n        - --secureGrpcAddr\n        - \"\"\n        - --keepaliveMaxServerConnectionAge\n        - 30m\n        - --log_output_level\n        - info\n        env:\n        - name: ESTATE\n          value: mcpIstioConfig.istioEstate\n        image: mcpIstioConfig.pilotImage\n        name: discovery\n        ports:\n        - containerPort: 15011\n        volumeMounts:\n        - $patch: delete\n          mountPath: /etc/certs\n      - args:\n        - --debug-mode\n        - \"true\"\n        env:\n        - name: FUNCTION_NAMESPACE\n          valueFrom:\n            fieldRef:\n              apiVersion: v1\n              fieldPath: metadata.namespace\n        - name: SETTINGS_SUPERPOD\n          value: mcpIstioConfig.superpod\n        - name: SETTINGS_PATH\n          value: mcpIstioConfig.settingsPath\n        - name: SFDC_METRICS_SERVICE_HOST\n          value: mcpIstioConfig.funnelHost\n        - name: SFDC_METRICS_SERVICE_PORT\n          value: mcpIstioConfig.funnelPort\n        - name: ESTATE\n          value: mcpIstioConfig.istioEstate\n        image: mcpIstioConfig.metricsScraperImage\n        imagePullPolicy: Always\n        name: metrics-scraper\n        readinessProbe:\n          exec:\n            command:\n            - /bin/true\n          initialDelaySeconds: 5\n          periodSeconds: 30\n          timeoutSeconds: 5\n      - $patch: delete\n        name: istio-proxy\n      nodeSelector:\n        pool: mcpIstioConfig.istioEstate\n      volumes:\n      - $patch: delete\n        name: istio-certs",
            "/charts/pilot/templates/serviceaccount.yaml": "--- \napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  annotations:\n    manifestctl.sam.data.sfdc.net/swagger: disable\n  name: istio-pilot-service-account",
            "/charts/sidecarInjectorWebhook/templates/clusterrole.yaml": "apiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRole\nmetadata:\n  annotations:\n    manifestctl.sam.data.sfdc.net/swagger: disable\n  name: istio-sidecar-injector-mesh-control-plane",
            "/charts/sidecarInjectorWebhook/templates/clusterrolebinding.yaml": "apiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRoleBinding\nmetadata:\n  annotations:\n    manifestctl.sam.data.sfdc.net/swagger: disable\n  name: istio-sidecar-injector-admin-role-binding-mesh-control-plane",
            "/charts/sidecarInjectorWebhook/templates/deployment.yaml": "apiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  name: istio-sidecar-injector\n  namespace: mesh-control-plane\nspec:\n  selector:\n    matchLabels:\n      istio: sidecar-injector\n  template:\n    metadata:\n      annotations:\n        madkub.sam.sfdc.net/allcerts: mcpIstioConfig.sidecarInjectorMadkubAnnotations\n      labels:\n        name: istio-sidecar-injector\n    spec:\n      containers:\n      - args:\n        - --caCertFile=/server-cert/ca.pem\n        - --tlsCertFile=/server-cert/server/certificates/server.pem\n        - --tlsKeyFile=/server-cert/server/keys/server-key.pem\n        - --injectConfig=/etc/istio/inject/config\n        - --meshConfig=/etc/istio/config/mesh\n        - --healthCheckInterval=2s\n        - --healthCheckFile=/health\n        - --port=15009\n        env:\n        - name: ESTATE\n          value: mcpIstioConfig.istioEstate\n        image: mcpIstioConfig.sidecarInjectorImage\n        name: sidecar-injector-webhook\n        ports:\n        - containerPort: 15009\n        volumeMounts:\n        - mountPath: /etc/pki_service\n          name: maddog-certs\n        - mountPath: /server-cert\n          name: tls-server-cert\n        - $patch: delete\n          mountPath: /etc/istio/certs\n      - args:\n        - /sam/madkub-client\n        - --madkub-endpoint=%(madkubEndpoint)s\n        - --maddog-endpoint=%(maddogEndpoint)s\n        - --maddog-server-ca=/maddog-certs/ca/security-ca.pem\n        - --madkub-server-ca=/maddog-certs/ca/cacerts.pem\n        - --cert-folders=tls-server-cert:/server-cert/\n        - --token-folder=/tokens/\n        - --requested-cert-type=client\n        - --ca-folder=/maddog-certs/ca\n        - --refresher\n        - --run-init-for-refresher-mode\n        env:\n        - name: MADKUB_NODENAME\n          valueFrom:\n            fieldRef:\n              apiVersion: v1\n              fieldPath: spec.nodeName\n        - name: MADKUB_NAME\n          valueFrom:\n            fieldRef:\n              apiVersion: v1\n              fieldPath: metadata.name\n        - name: MADKUB_NAMESPACE\n          valueFrom:\n            fieldRef:\n              apiVersion: v1\n              fieldPath: metadata.namespace\n        - name: ESTATE\n          value: mcpIstioConfig.istioEstate\n        image: mcpIstioConfig.madkubImage\n        imagePullPolicy: IfNotPresent\n        name: madkub-refresher\n        resources: {}\n        volumeMounts:\n        - mountPath: /server-cert\n          name: tls-server-cert\n        - mountPath: /maddog-certs/\n          name: maddog-certs\n        - mountPath: /tokens\n          name: tokens\n      initContainers:\n      - args:\n        - /sam/madkub-client\n        - --madkub-endpoint=%(madkubEndpoint)s\n        - --maddog-endpoint=%(maddogEndpoint)s\n        - --maddog-server-ca=/maddog-certs/ca/security-ca.pem\n        - --madkub-server-ca=/maddog-certs/ca/cacerts.pem\n        - --cert-folders=tls-server-cert:/server-cert/\n        - --token-folder=/tokens/\n        - --requested-cert-type=client\n        - --ca-folder=/maddog-certs/ca\n        env:\n        - name: MADKUB_NODENAME\n          valueFrom:\n            fieldRef:\n              apiVersion: v1\n              fieldPath: spec.nodeName\n        - name: MADKUB_NAME\n          valueFrom:\n            fieldRef:\n              apiVersion: v1\n              fieldPath: metadata.name\n        - name: MADKUB_NAMESPACE\n          valueFrom:\n            fieldRef:\n              apiVersion: v1\n              fieldPath: metadata.namespace\n        image: mcpIstioConfig.madkubImage\n        imagePullPolicy: IfNotPresent\n        name: madkub-init\n        volumeMounts:\n        - mountPath: /server-cert\n          name: tls-server-cert\n        - mountPath: /maddog-certs/\n          name: maddog-certs\n        - mountPath: /tokens\n          name: tokens\n      - command:\n        - bash\n        - -c\n        - |\n          set -ex\n          chmod 775 -R /client-cert \u0026\u0026 chown -R 7447:7447 /client-cert\n          chmod 775 -R /server-cert \u0026\u0026 chown -R 7447:7447 /server-cert\n        image: mcpIstioConfig.permissionInitContainer\n        imagePullPolicy: Always\n        name: permissionsetterinitcontainer\n        securityContext:\n          runAsNonRoot: false\n          runAsUser: 0\n        volumeMounts:\n        - mountPath: /client-cert\n          name: tls-client-cert\n        - mountPath: /server-cert\n          name: tls-server-cert\n      nodeSelector:\n        master: \"true\"\n      volumes:\n      - hostPath:\n          path: /etc/pki_service\n        name: maddog-certs\n      - emptyDir:\n          medium: Memory\n        name: tls-client-cert\n      - emptyDir:\n          medium: Memory\n        name: tls-server-cert\n      - emptyDir:\n          medium: Memory\n        name: tokens\n      - $patch: delete\n        name: certs",
            "/charts/sidecarInjectorWebhook/templates/mutatingwebhook.yaml": "--- \napiVersion: admissionregistration.k8s.io/v1beta1\nkind: MutatingWebhookConfiguration\nmetadata:\n  annotations:\n    manifestctl.sam.data.sfdc.net/swagger: disable\n  name: istio-sidecar-injector\n  namespace:",
            "/charts/sidecarInjectorWebhook/templates/service.yaml": "apiVersion: v1\nkind: Service\nmetadata:\n  name: istio-sidecar-injector\n  namespace: mesh-control-plane\nspec:\n  ports:\n  - port: 443\n    targetPort: 15009\n    name: sidecar-injector-port",
            "/charts/sidecarInjectorWebhook/templates/serviceaccount.yaml": "--- \napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  annotations:\n    manifestctl.sam.data.sfdc.net/swagger: disable\n  name: istio-sidecar-injector-service-account",
            "/clusterrole.yaml": "apiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRole\nmetadata:\n  annotations:\n    manifestctl.sam.data.sfdc.net/swagger: disable\n  name: istio-reader",
            "/clusterrolebinding.yaml": "apiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRoleBinding\nmetadata:\n  annotations:\n    manifestctl.sam.data.sfdc.net/swagger: disable\n  name: istio-multi",
            "/configmap.yaml": "# IMPORTANT - To preserve SAM k8s out yaml formatting, \n#   do NOT leave any empty lines or comments in multi-line config values.\n# This would be of immense help when comparing the final k8s out directory \u0026 \n#   would prevent bugs due to lack of readability in k8s-out for ConfigMap.\napiVersion: v1\ndata:\n  mesh: |-\n    disablePolicyChecks: false\n    enableTracing: true\n    accessLogFile: \"/dev/stdout\"\n    accessLogFormat: \"\"\n    accessLogEncoding: 'TEXT'\n    ingressService: istio-ingressgateway\n    dnsRefreshRate: 5s\n    sdsUdsPath:\n    enableSdsTokenMount: false\n    sdsUseK8sSaJwt: false\n    trustDomain:\n    outboundTrafficPolicy:\n      mode: ALLOW_ANY\n    rootNamespace: mesh-control-plane\n    defaultConfig:\n      connectTimeout: 10s\n      configPath: \"/etc/istio/proxy\"\n      binaryPath: \"/usr/local/bin/envoy\"\n      serviceCluster: istio-proxy\n      drainDuration: 45s\n      parentShutdownDuration: 1m0s\n      interceptionMode: REDIRECT\n      proxyAdminPort: 15000\n      concurrency: 2\n      tracing:\n        zipkin:\n          address: zipkin.service-mesh:9411\n      controlPlaneAuthPolicy: NONE\n      discoveryAddress: istio-pilot.mesh-control-plane:15010\n  meshNetworks: |-\n    networks: {}\nkind: ConfigMap\nmetadata:\n  name: istio\n  namespace: mesh-control-plane",
            "/serviceaccount.yaml": "apiVersion: v1\nkind: ServiceAccount\nmetadata:\n  annotations:\n    manifestctl.sam.data.sfdc.net/swagger: disable\n  name: istio-multi",
            "/sidecar-injector-configmap.yaml": "# IMPORTANT - To preserve SAM k8s out yaml formatting, \n#   do NOT leave any empty lines or comments in multi-line config values.\n# This would be of immense help when comparing the final k8s out directory \u0026 \n#   would prevent bugs due to lack of readability in k8s-out for ConfigMap.\napiVersion: v1\ndata:\n  config: |-\n    policy: disabled\n    template: |-\n      rewriteAppHTTPProbe: false\n      initContainers:\n      [[ if ne (annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode) \"NONE\" ]]\n      - name: istio-init\n        image: %(proxyInitImage)s\n        args:\n        - \"-p\"\n        - [[ .MeshConfig.ProxyListenPort ]]\n        - \"-u\"\n        - 7447\n        - \"-m\"\n        - [[ annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode ]]\n        - \"-i\"\n        - \"[[ annotation .ObjectMeta `traffic.sidecar.istio.io/includeOutboundIPRanges`  \"127.1.2.3/32\"  ]]\"\n        - \"-x\"\n        - \"[[ annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundIPRanges`  \"\"  ]]\"\n        - \"-b\"\n        - \"[[ annotation .ObjectMeta `traffic.sidecar.istio.io/includeInboundPorts` (includeInboundPorts .Spec.Containers) ]]\"\n        - \"-d\"\n        - \"[[ excludeInboundPort (annotation .ObjectMeta `status.sidecar.istio.io/port`  15020 ) (annotation .ObjectMeta `traffic.sidecar.istio.io/excludeInboundPorts`  \"\" ) ]]\"\n        [[ if (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/kubevirtInterfaces`) -]]\n        - \"-k\"\n        - \"[[ index .ObjectMeta.Annotations `traffic.sidecar.istio.io/kubevirtInterfaces` ]]\"\n        [[ end -]]\n        imagePullPolicy: IfNotPresent\n        resources:\n          requests:\n            cpu: 10m\n            memory: 10Mi\n          limits:\n            cpu: 100m\n            memory: 50Mi\n        securityContext:\n          runAsNonRoot: false\n          runAsUser: 0\n          capabilities:\n            add:\n            - NET_ADMIN\n          restartPolicy: Always\n      [[ end -]]\n      containers:\n      - name: istio-proxy\n        image: [[ annotation .ObjectMeta `sidecar.istio.io/proxyImage`  \"%(proxyImage)s\"  ]]\n        args:\n        - proxy\n        - sidecar\n        - --domain\n        - $(POD_NAMESPACE).svc.cluster.local\n        - --configPath\n        - [[ .ProxyConfig.ConfigPath ]]\n        - --binaryPath\n        - [[ .ProxyConfig.BinaryPath ]]\n        - --serviceCluster\n        [[ if ne \"\" (index .ObjectMeta.Labels \"app\") -]]\n        - [[ index .ObjectMeta.Labels \"app\" ]].$(POD_NAMESPACE)\n        [[ else -]]\n        - [[ valueOrDefault .DeploymentMeta.Name \"istio-proxy\" ]].[[ valueOrDefault .DeploymentMeta.Namespace \"default\" ]]\n        [[ end -]]\n        - --drainDuration\n        - [[ formatDuration .ProxyConfig.DrainDuration ]]\n        - --parentShutdownDuration\n        - [[ formatDuration .ProxyConfig.ParentShutdownDuration ]]\n        - --discoveryAddress\n        - [[ annotation .ObjectMeta `sidecar.istio.io/discoveryAddress` .ProxyConfig.DiscoveryAddress ]]\n        - --zipkinAddress\n        - [[ .ProxyConfig.GetTracing.GetZipkin.GetAddress ]]\n        - --connectTimeout\n        - [[ formatDuration .ProxyConfig.ConnectTimeout ]]\n        - --proxyAdminPort\n        - [[ .ProxyConfig.ProxyAdminPort ]]\n        [[ if gt .ProxyConfig.Concurrency 0 -]]\n        - --concurrency\n        - [[ .ProxyConfig.Concurrency ]]\n        [[ end -]]\n        - --controlPlaneAuthPolicy\n        - [[ annotation .ObjectMeta `sidecar.istio.io/controlPlaneAuthPolicy` .ProxyConfig.ControlPlaneAuthPolicy ]]\n      [[- if (ne (annotation .ObjectMeta `status.sidecar.istio.io/port`  15020 ) \"0\") ]]\n        - --statusPort\n        - [[ annotation .ObjectMeta `status.sidecar.istio.io/port`  15020  ]]\n        - --applicationPorts\n        - \"[[ annotation .ObjectMeta `readiness.status.sidecar.istio.io/applicationPorts` (applicationPorts .Spec.Containers) ]]\"\n      [[- end ]]\n        - --envoyMetricsServiceAddress\n        - switchboard.service-mesh:15001\n        env:\n        - name: POD_NAME\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.name\n        - name: POD_NAMESPACE\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.namespace\n        - name: INSTANCE_IP\n          valueFrom:\n            fieldRef:\n              fieldPath: status.podIP\n        - name: ISTIO_META_POD_NAME\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.name\n        - name: ISTIO_META_CONFIG_NAMESPACE\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.namespace\n        - name: ISTIO_META_INTERCEPTION_MODE\n          value: [[ or (index .ObjectMeta.Annotations \"sidecar.istio.io/interceptionMode\") .ProxyConfig.InterceptionMode.String ]]\n        [[ if .ObjectMeta.Annotations ]]\n        - name: ISTIO_METAJSON_ANNOTATIONS\n          value: |\n                 [[ toJSON .ObjectMeta.Annotations ]]\n        [[ end ]]\n        [[ if .ObjectMeta.Labels ]]\n        - name: ISTIO_METAJSON_LABELS\n          value: |\n                 [[ toJSON .ObjectMeta.Labels ]]\n        [[ end ]]\n        [[- if (isset .ObjectMeta.Annotations `sidecar.istio.io/bootstrapOverride`) ]]\n        - name: ISTIO_BOOTSTRAP_OVERRIDE\n          value: \"/etc/istio/custom-bootstrap/custom_bootstrap.json\"\n        [[- end ]]\n        ###\n        # Start metadata fields used by switchboard for building metric tags.\n        ###\n        - name: ISTIO_META_hostname\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.name\n        - name: ISTIO_META_namespace\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.namespace\n        ###\n        # End metadata fields used by switchboard for building metric tags.\n        ###\n        ###\n        # Start metadata fields for configuring sidecar metrics.\n        ###\n        # We currently want to include all envoy metrics, so the inclusion list includes all known prefixes.\n        - name: ISTIO_METAJSON_METRICS_INCLUSIONS\n          value: \"{\\\"sidecar.istio.io/statsInclusionPrefixes\\\": \\\"access_log_file,cluster,cluster_manager,control_plane,http,http2,http_mixer_filter,listener,listener_manager,redis,runtime,server,stats,tcp,tcp_mixer_filter,tracing\\\"}\"\n        ###\n        # End metadata fields for configuring sidecar metrics.\n        ###\n        imagePullPolicy: IfNotPresent\n        [[ if (ne (annotation .ObjectMeta `status.sidecar.istio.io/port`  15020 ) \"0\") ]]\n        readinessProbe:\n          httpGet:\n            path: /healthz/ready\n            port: [[ annotation .ObjectMeta `status.sidecar.istio.io/port`  15020  ]]\n          initialDelaySeconds: [[ annotation .ObjectMeta `readiness.status.sidecar.istio.io/initialDelaySeconds`  1  ]]\n          periodSeconds: [[ annotation .ObjectMeta `readiness.status.sidecar.istio.io/periodSeconds`  2  ]]\n          failureThreshold: [[ annotation .ObjectMeta `readiness.status.sidecar.istio.io/failureThreshold`  30  ]]\n        [[ end -]]\n        securityContext:\n          readOnlyRootFilesystem: true\n          [[ if eq (annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode) \"TPROXY\" -]]\n          capabilities:\n            add:\n            - NET_ADMIN\n          runAsGroup: 7447\n          [[ else -]]\n          runAsUser: 7447\n          [[ end -]]\n        restartPolicy: Always\n        resources:\n          [[ if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) -]]\n          requests:\n            [[ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) -]]\n            cpu: \"[[ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU` ]]\"\n            [[ end ]]\n            [[ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) -]]\n            memory: \"[[ index .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory` ]]\"\n            [[ end ]]\n        [[ else -]]\n          limits:\n            cpu: 2000m\n            memory: 512Mi\n          requests:\n            cpu: 100m\n            memory: 512Mi\n        [[ end -]]\n        volumeMounts:\n        [[- if (isset .ObjectMeta.Annotations `sidecar.istio.io/bootstrapOverride`) ]]\n        - mountPath: /etc/istio/custom-bootstrap\n          name: custom-bootstrap-volume\n        [[- end ]]\n        - mountPath: /etc/istio/proxy\n          name: istio-envoy\n        - mountPath: /etc/certs/root-cert.pem # Maddog certs mapped to istio certs default locations.\n          name: tls-server-cert               # Volume should be defined in Manifest file.\n          subPath: ca.pem\n        - mountPath: /etc/certs/cert-chain.pem\n          name: tls-server-cert\n          subPath: server/certificates/server.pem\n        - mountPath: /etc/certs/key.pem\n          name: tls-server-cert\n          subPath: server/keys/server-key.pem\n        - mountPath: /etc/certs/client.pem\n          name: tls-client-cert\n          subPath: client/certificates/client.pem\n        - mountPath: /etc/certs/client-key.pem\n          name: tls-client-cert\n          subPath: client/keys/client-key.pem\n      volumes:\n      [[- if (isset .ObjectMeta.Annotations `sidecar.istio.io/bootstrapOverride`) ]]\n      - name: custom-bootstrap-volume\n        configMap:\n          name: [[ annotation .ObjectMeta `sidecar.istio.io/bootstrapOverride` `` ]]\n      [[- end ]]\n      - emptyDir:\n          medium: Memory\n        name: istio-envoy\nkind: ConfigMap\nmetadata:\n  name: istio-sidecar-injector\n  namespace: mesh-control-plane"
          }
        }
      }
    },
    "upstream": "https://github.com/istio/istio/tree/9b6d31b74d1c0cc9358cc82d395b53f71393326b/install/kubernetes/helm/istio",
    "metadata": {
      "applicationType": "helm",
      "icon": "https://istio.io/favicons/android-192x192.png",
      "name": "istio",
      "releaseNotes": "remove init container from prometheus (#13571)",
      "version": "1.1.0"
    },
    "contentSHA": "48b533bb87fec445255001f8a7550ae73625fa8ebca56ab8da2423e3a4a3f2b3",
    "lifecycle": {
      "stepsCompleted": {
        "intro": true,
        "kustomize": true,
        "kustomize-intro": true,
        "outro": true,
        "render": true,
        "values": true
      }
    }
  }
}