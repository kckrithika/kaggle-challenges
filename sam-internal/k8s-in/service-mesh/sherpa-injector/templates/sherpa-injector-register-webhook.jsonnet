local configs = import "config.jsonnet";

{
  apiVersion: "admissionregistration.k8s.io/v1beta1",
  kind: "MutatingWebhookConfiguration",
  metadata: {
    name: "sherpa-injector-cfg",
    labels: {
      app: "sherpa-injector",
    },
    annotations: {
      "manifestctl.sam.data.sfdc.net/swagger": "disable",
    },
  },
  webhooks: [
    {
      name: "sherpa-injector.service-mesh.svc",
      clientConfig: {
        url: "https://sherpa-injector.service-mesh.svc.%s:7443/mutate" % configs.dnsdomain,
        caBundle: "",
      },
      rules: [
        {
          apiGroups: [
            "apps",
            "",
          ],
          apiVersions: [
            "v1",
          ],
          operations: [
            "CREATE",
          ],
          resources: [
            "pods",
          ],
        },
      ],
      failurePolicy: "Ignore",  //TODO: Set to "Fail", when the code/configs are stable
      namespaceSelector: {
        matchExpressions: [
          {
            key: "sherpa-injector.service-mesh/inject",
            operator: "NotIn",
            values: [
              "disabled",
            ],
          },
        ],
      },
    },
  ],
}
