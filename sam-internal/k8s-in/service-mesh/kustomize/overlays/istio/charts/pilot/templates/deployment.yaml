apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    checksum/config-volume: f8da08b6b8c170dde721efd680270b2901e750d4aa186ebb6c22bef5b78a43f9
    manifestctl.sam.data.sfdc.net/swagger: disable
  labels:
    app: pilot
    istio: pilot
  name: istio-pilot
  namespace: mesh-control-plane
spec:
  replicas: mcpIstioConfig.pilotReplicasCount
  strategy:
    rollingUpdate:
      maxSurge: 3
      maxUnavailable: 1
  selector:
    matchLabels:
      app: pilot
  template:
    metadata:
      annotations:
        madkub.sam.sfdc.net/allcerts: mcpIstioConfig.pilotMadkubAnnotations
      labels:
        app: pilot
        name: istio-pilot
        istio: pilot
        release: istio
        cluster: mcpIstioConfig.istioEstate
    spec:
      containers:
      - args:
        - discovery
        - --registries=Kubernetes
        - --monitoringAddr=:15014
        - --log_output_level=default:warn
        - --domain
        - cluster.local
        - --keepaliveMaxServerConnectionAge
        - 30m
        - --secureGrpcAddr=
        - --resync
        - 5m
        env:
        - name: ESTATE
          value: mcpIstioConfig.istioEstate
        - name: PILOT_SIDECAR_USE_REMOTE_ADDRESS
          value: "true"
        - name: PILOT_ENABLE_REDIS_FILTER
          value: "true"
        - name: PILOT_DEBOUNCE_AFTER
          value: 100ms
        - name: PILOT_DEBOUNCE_MAX
          value: 10s
        - name: PILOT_PUSH_THROTTLE
          value: "100"
        - name: PILOT_RESPECT_DNS_TTL
          value: "false"
        - name: SETTINGS_PATH
          $patch: delete
        - name: SETTINGS_SUPERPOD
          $patch: delete
        name: discovery
        image: '%(istioHub)s/pilot:%(istioTag)s'
        resources:
          limits:
            cpu: 4000m
          requests:
            cpu: 1000m
        volumeMounts:
        - $patch: delete
          mountPath: /etc/certs
      - args:
        - proxy
        - --domain
        - $(POD_NAMESPACE).svc.cluster.local
        - --serviceCluster
        - istio-pilot
        - --templateFile
        - /etc/istio/proxy/envoy_pilot.yaml.tmpl
        - --controlPlaneAuthPolicy
        - MUTUAL_TLS
        - --proxyLogLevel=info
        - --log_output_level=default:warn
        - --envoyMetricsService
        - '{"address":"switchboard.service-mesh:15001","tls_settings":{"mode":2,"client_certificate":"/client-certs/client/certificates/client.pem","private_key":"/client-certs/client/keys/client-key.pem","ca_certificates":"/client-certs/ca.pem"},"tcp_keepalive":{"probes":3,"time":"10s","interval":"10s"}}'
        - --proxyAdminPort
        - "15373"
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: INSTANCE_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.podIP
        - name: ISTIO_META_hostname
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: ISTIO_META_namespace
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: ISTIO_METAJSON_METRICS_INCLUSIONS
          value: '{"sidecar.istio.io/statsInclusionPrefixes": "access_log_file,cluster,cluster_manager,control_plane,http,http2,http_mixer_filter,listener,listener_manager,redis,runtime,server,stats,tcp,tcp_mixer_filter,tracing,authz"}'
        - name: ISTIO_META_TLS_CLIENT_CERT_CHAIN
          value: /client-certs/client/certificates/client.pem
        - name: ISTIO_META_TLS_CLIENT_KEY
          value: /client-certs/client/keys/client-key.pem
        - name: ISTIO_META_TLS_CLIENT_ROOT_CERT
          value: /client-certs/ca.pem
        - name: ISTIO_META_TLS_SERVER_CERT_CHAIN
          value: /server-certs/server/certificates/server.pem
        - name: ISTIO_META_TLS_SERVER_KEY
          value: /server-certs/server/keys/server-key.pem
        - name: ISTIO_META_TLS_SERVER_ROOT_CERT
          value: /server-certs/ca.pem
        - name: ISTIO_META_kubernetes_cluster_name
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['cluster']
        - name: ESTATE
          value: mcpIstioConfig.istioEstate
        - name: KINGDOM
          value: mcpIstioConfig.kingdom
        name: istio-proxy
        image: '%(istioHub)s/proxy:%(istioTag)s'
        resources:
          limits:
            cpu: 6000m
        securityContext:
          runAsUser: 1337
        volumeMounts:
        - mountPath: /client-certs
          name: tls-client-cert
        - mountPath: /server-certs
          name: tls-server-cert
      - args:
        - /sam/madkub-client
        - --madkub-endpoint=%(madkubEndpoint)s
        - --maddog-endpoint=%(maddogEndpoint)s
        - --maddog-server-ca=/maddog-certs/ca/security-ca.pem
        - --madkub-server-ca=/maddog-certs/ca/cacerts.pem
        - --cert-folders=tls-client-cert:/client-cert/
        - --cert-folders=tls-server-cert:/server-cert/
        - --token-folder=/tokens/
        - --ca-folder=/maddog-certs/ca
        - --refresher
        - --run-init-for-refresher-mode
        env:
        - name: MADKUB_NODENAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: MADKUB_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: MADKUB_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: ESTATE
          value: mcpIstioConfig.istioEstate
        image: mcpIstioConfig.madkubImage
        imagePullPolicy: IfNotPresent
        name: madkub-refresher
        resources: {}
        volumeMounts:
        - mountPath: /client-cert
          name: tls-client-cert
        - mountPath: /server-cert
          name: tls-server-cert
        - mountPath: /maddog-certs/
          name: maddog-certs
        - mountPath: /tokens
          name: tokens
      - args:
        - --funnel-address
        - mcpIstioConfig.funnelEndpoint
        - --alt-tags
        - cluster=svccluster
        env:
        - name: FUNCTION_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: SETTINGS_SUPERPOD
          value: mcpIstioConfig.superpod
        - name: SETTINGS_PATH
          value: mcpIstioConfig.pilotSettingsPath
        - name: ESTATE
          value: mcpIstioConfig.istioEstate
        - name: PILOT_ENABLE_REDIS_FILTER
          $patch: delete
        - name: PILOT_PUSH_THROTTLE
          $patch: delete
        - name: PILOT_SIDECAR_USE_REMOTE_ADDRESS
          $patch: delete
        image: mcpIstioConfig.metricsScraperImage
        imagePullPolicy: Always
        name: metrics-scraper
        readinessProbe:
          exec:
            command:
            - /bin/true
          initialDelaySeconds: 5
          periodSeconds: 30
          timeoutSeconds: 5
        resources:
          limits:
            cpu: 2000m
            memory: 2048Mi
          requests:
            cpu: 100m
            memory: 512Mi
      initContainers:
      - args:
        - /sam/madkub-client
        - --madkub-endpoint=%(madkubEndpoint)s
        - --maddog-endpoint=%(maddogEndpoint)s
        - --maddog-server-ca=/maddog-certs/ca/security-ca.pem
        - --madkub-server-ca=/maddog-certs/ca/cacerts.pem
        - --cert-folders=tls-client-cert:/client-cert/
        - --cert-folders=tls-server-cert:/server-cert/
        - --token-folder=/tokens/
        - --ca-folder=/maddog-certs/ca
        env:
        - name: MADKUB_NODENAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: MADKUB_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: MADKUB_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        image: mcpIstioConfig.madkubImage
        imagePullPolicy: IfNotPresent
        name: madkub-init
        volumeMounts:
        - mountPath: /client-cert
          name: tls-client-cert
        - mountPath: /server-cert
          name: tls-server-cert
        - mountPath: /maddog-certs/
          name: maddog-certs
        - mountPath: /tokens
          name: tokens
      - command:
        - bash
        - -c
        - |
          set -ex
          chmod 775 -R /client-cert && chown -R 7447:7447 /client-cert
          chmod 775 -R /server-cert && chown -R 7447:7447 /server-cert
        image: mcpIstioConfig.permissionInitContainer
        imagePullPolicy: Always
        name: permissionsetterinitcontainer
        securityContext:
          runAsNonRoot: false
          runAsUser: 0
        volumeMounts:
        - mountPath: /client-cert
          name: tls-client-cert
        - mountPath: /server-cert
          name: tls-server-cert
      - image: mcpIstioConfig.proxyImage
        name: istio-init
      nodeSelector:
        pool: mcpIstioConfig.istioEstate
      volumes:
      - hostPath:
          path: /etc/pki_service
        name: maddog-certs
      - emptyDir:
          medium: Memory
        name: tls-client-cert
      - emptyDir:
          medium: Memory
        name: tls-server-cert
      - emptyDir:
          medium: Memory
        name: tokens
      - $patch: delete
        name: istio-certs