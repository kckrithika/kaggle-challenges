apiVersion: admissionregistration.k8s.io/v1beta1
kind: MutatingWebhookConfiguration
metadata:
  labels:
    app: sidecarInjectorWebhook
    chart: sidecarInjectorWebhook
    heritage: Tiller
    release: RELEASE-NAME
  name: istio-sidecar-injector
webhooks:
- clientConfig:
    caBundle: ""
    service:
      name: istio-sidecar-injector
      namespace: mesh-control-plane
      path: /inject
  failurePolicy: Fail
  name: sidecar-injector.istio.io
  namespaceSelector:
    matchLabels:
      istio-injection: enabled
  rules:
  - apiGroups:
    - ""
    apiVersions:
    - v1
    operations:
    - CREATE
    resources:
    - pods
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    manifestctl.sam.data.sfdc.net/swagger: disable
  labels:
    app: istio-init
    istio: init
  name: istio-init-service-account
  namespace: mesh-control-plane
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: pilot
    chart: pilot
    heritage: Tiller
    release: RELEASE-NAME
  name: istio-pilot-service-account
  namespace: mesh-control-plane
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: sidecarInjectorWebhook
    chart: sidecarInjectorWebhook
    heritage: Tiller
    istio: sidecar-injector
    release: RELEASE-NAME
  name: istio-sidecar-injector-service-account
  namespace: mesh-control-plane
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: istio-ingressgateway-sds
  namespace: mesh-control-plane
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - watch
  - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    manifestctl.sam.data.sfdc.net/swagger: disable
  labels:
    app: istio-init
    istio: init
  name: istio-init-mesh-control-plane
rules:
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app: pilot
    chart: pilot
    heritage: Tiller
    release: RELEASE-NAME
  name: istio-pilot-mesh-control-plane
rules:
- apiGroups:
  - config.istio.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - rbac.istio.io
  resources:
  - '*'
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - security.istio.io
  resources:
  - '*'
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - networking.istio.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - authentication.istio.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - '*'
- apiGroups:
  - extensions
  resources:
  - ingresses
  - ingresses/status
  verbs:
  - '*'
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - get
  - list
  - watch
  - update
- apiGroups:
  - ""
  resources:
  - endpoints
  - pods
  - services
  - namespaces
  - nodes
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - get
  - watch
  - list
  - update
  - delete
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests
  - certificatesigningrequests/approval
  - certificatesigningrequests/status
  verbs:
  - update
  - create
  - get
  - delete
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app: sidecarInjectorWebhook
    chart: sidecarInjectorWebhook
    heritage: Tiller
    istio: sidecar-injector
    release: RELEASE-NAME
  name: istio-sidecar-injector-mesh-control-plane
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - mutatingwebhookconfigurations
  verbs:
  - get
  - list
  - watch
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: istio-ingressgateway-sds
  namespace: mesh-control-plane
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: istio-ingressgateway-sds
subjects:
- kind: ServiceAccount
  name: istio-ingressgateway-service-account
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    manifestctl.sam.data.sfdc.net/swagger: disable
  labels:
    app: istio-init
    istio: init
  name: istio-init-admin-role-binding-mesh-control-plane
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: istio-init-mesh-control-plane
subjects:
- kind: ServiceAccount
  name: istio-init-service-account
  namespace: mesh-control-plane
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app: pilot
    chart: pilot
    heritage: Tiller
    release: RELEASE-NAME
  name: istio-pilot-mesh-control-plane
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: istio-pilot-mesh-control-plane
subjects:
- kind: ServiceAccount
  name: istio-pilot-service-account
  namespace: mesh-control-plane
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app: sidecarInjectorWebhook
    chart: sidecarInjectorWebhook
    heritage: Tiller
    istio: sidecar-injector
    release: RELEASE-NAME
  name: istio-sidecar-injector-admin-role-binding-mesh-control-plane
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: istio-sidecar-injector-mesh-control-plane
subjects:
- kind: ServiceAccount
  name: istio-sidecar-injector-service-account
  namespace: mesh-control-plane
---
apiVersion: v1
data:
  crd-all.gen.yaml: |-
    # DO NOT EDIT - Generated by Cue OpenAPI generator.
    apiVersion: apiextensions.k8s.io/v1beta1
    kind: CustomResourceDefinition
    metadata:
      annotations:
        "helm.sh/resource-policy": keep
      creationTimestamp: null
      labels:
        app: mixer
        chart: istio
        heritage: Tiller
        istio: core
        package: istio.io.mixer
        release: istio
      name: attributemanifests.config.istio.io
    spec:
      group: config.istio.io
      names:
        categories:
        - istio-io
        - policy-istio-io
        kind: attributemanifest
        plural: attributemanifests
        singular: attributemanifest
      scope: Namespaced
      subresources:
        status: {}
      version: "v1alpha2"
      versions:
      - name: v1alpha2
        served: true
        storage: true
    status:
      acceptedNames:
        kind: ""
        plural: ""
      conditions: []
      storedVersions: []

    ---
    apiVersion: apiextensions.k8s.io/v1beta1
    kind: CustomResourceDefinition
    metadata:
      annotations:
        "helm.sh/resource-policy": keep
      creationTimestamp: null
      labels:
        app: istio-pilot
        heritage: Tiller
        istio: security
        release: istio
      name: authorizationpolicies.security.istio.io
    spec:
      group: security.istio.io
      names:
        categories:
        - istio-io
        - security-istio-io
        kind: AuthorizationPolicy
        plural: authorizationpolicies
        singular: authorizationpolicy
      scope: Namespaced
      subresources:
        status: {}
      version: "v1beta1"
      versions:
      - name: v1beta1
        served: true
        storage: true
    status:
      acceptedNames:
        kind: ""
        plural: ""
      conditions: []
      storedVersions: []

    ---
    apiVersion: apiextensions.k8s.io/v1beta1
    kind: CustomResourceDefinition
    metadata:
      annotations:
        "helm.sh/resource-policy": keep
      creationTimestamp: null
      labels:
        app: istio-pilot
        heritage: Tiller
        istio: rbac
        release: istio
      name: clusterrbacconfigs.rbac.istio.io
    spec:
      group: rbac.istio.io
      names:
        categories:
        - istio-io
        - rbac-istio-io
        kind: ClusterRbacConfig
        plural: clusterrbacconfigs
        singular: clusterrbacconfig
      scope: Cluster
      subresources:
        status: {}
      version: "v1alpha1"
      versions:
      - name: v1alpha1
        served: true
        storage: true
    status:
      acceptedNames:
        kind: ""
        plural: ""
      conditions: []
      storedVersions: []

    ---
    apiVersion: apiextensions.k8s.io/v1beta1
    kind: CustomResourceDefinition
    metadata:
      annotations:
        "helm.sh/resource-policy": keep
      creationTimestamp: null
      labels:
        app: istio-pilot
        chart: istio
        heritage: Tiller
        release: istio
      name: destinationrules.networking.istio.io
    spec:
      additionalPrinterColumns:
      - JSONPath: .spec.host
        description: The name of a service from the service registry
        name: Host
        type: string
      - JSONPath: .metadata.creationTimestamp
        description: |-
          CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.
          Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
        name: Age
        type: date
      group: networking.istio.io
      names:
        categories:
        - istio-io
        - networking-istio-io
        kind: DestinationRule
        listKind: DestinationRuleList
        plural: destinationrules
        shortNames:
        - dr
        singular: destinationrule
      scope: Namespaced
      subresources:
        status: {}
      version: "v1alpha3"
      versions:
      - name: v1alpha3
        served: true
        storage: true
    status:
      acceptedNames:
        kind: ""
        plural: ""
      conditions: []
      storedVersions: []

    ---
    apiVersion: apiextensions.k8s.io/v1beta1
    kind: CustomResourceDefinition
    metadata:
      annotations:
        "helm.sh/resource-policy": keep
      creationTimestamp: null
      labels:
        app: istio-pilot
        chart: istio
        heritage: Tiller
        release: istio
      name: envoyfilters.networking.istio.io
    spec:
      group: networking.istio.io
      names:
        categories:
        - istio-io
        - networking-istio-io
        kind: EnvoyFilter
        plural: envoyfilters
        singular: envoyfilter
      scope: Namespaced
      subresources:
        status: {}
      version: "v1alpha3"
      versions:
      - name: v1alpha3
        served: true
        storage: true
    status:
      acceptedNames:
        kind: ""
        plural: ""
      conditions: []
      storedVersions: []

    ---
    apiVersion: apiextensions.k8s.io/v1beta1
    kind: CustomResourceDefinition
    metadata:
      annotations:
        "helm.sh/resource-policy": keep
      creationTimestamp: null
      labels:
        app: istio-pilot
        chart: istio
        heritage: Tiller
        release: istio
      name: gateways.networking.istio.io
    spec:
      group: networking.istio.io
      names:
        categories:
        - istio-io
        - networking-istio-io
        kind: Gateway
        plural: gateways
        shortNames:
        - gw
        singular: gateway
      scope: Namespaced
      subresources:
        status: {}
      version: "v1alpha3"
      versions:
      - name: v1alpha3
        served: true
        storage: true
    status:
      acceptedNames:
        kind: ""
        plural: ""
      conditions: []
      storedVersions: []

    ---
    apiVersion: apiextensions.k8s.io/v1beta1
    kind: CustomResourceDefinition
    metadata:
      annotations:
        "helm.sh/resource-policy": keep
      creationTimestamp: null
      labels:
        app: istio-mixer
        chart: istio
        heritage: Tiller
        release: istio
      name: httpapispecbindings.config.istio.io
    spec:
      group: config.istio.io
      names:
        categories:
        - istio-io
        - apim-istio-io
        kind: HTTPAPISpecBinding
        plural: httpapispecbindings
        singular: httpapispecbinding
      scope: Namespaced
      subresources:
        status: {}
      version: "v1alpha2"
      versions:
      - name: v1alpha2
        served: true
        storage: true
    status:
      acceptedNames:
        kind: ""
        plural: ""
      conditions: []
      storedVersions: []

    ---
    apiVersion: apiextensions.k8s.io/v1beta1
    kind: CustomResourceDefinition
    metadata:
      annotations:
        "helm.sh/resource-policy": keep
      creationTimestamp: null
      labels:
        app: istio-mixer
        chart: istio
        heritage: Tiller
        release: istio
      name: httpapispecs.config.istio.io
    spec:
      group: config.istio.io
      names:
        categories:
        - istio-io
        - apim-istio-io
        kind: HTTPAPISpec
        plural: httpapispecs
        singular: httpapispec
      scope: Namespaced
      subresources:
        status: {}
      version: "v1alpha2"
      versions:
      - name: v1alpha2
        served: true
        storage: true
    status:
      acceptedNames:
        kind: ""
        plural: ""
      conditions: []
      storedVersions: []

    ---
    apiVersion: apiextensions.k8s.io/v1beta1
    kind: CustomResourceDefinition
    metadata:
      annotations:
        "helm.sh/resource-policy": keep
      creationTimestamp: null
      labels:
        app: istio-citadel
        chart: istio
        heritage: Tiller
        release: istio
      name: meshpolicies.authentication.istio.io
    spec:
      group: authentication.istio.io
      names:
        categories:
        - istio-io
        - authentication-istio-io
        kind: MeshPolicy
        listKind: MeshPolicyList
        plural: meshpolicies
        singular: meshpolicy
      scope: Cluster
      subresources:
        status: {}
      version: "v1alpha1"
      versions:
      - name: v1alpha1
        served: true
        storage: true
    status:
      acceptedNames:
        kind: ""
        plural: ""
      conditions: []
      storedVersions: []

    ---
    apiVersion: apiextensions.k8s.io/v1beta1
    kind: CustomResourceDefinition
    metadata:
      annotations:
        "helm.sh/resource-policy": keep
      creationTimestamp: null
      labels:
        app: istio-citadel
        chart: istio
        heritage: Tiller
        release: istio
      name: policies.authentication.istio.io
    spec:
      group: authentication.istio.io
      names:
        categories:
        - istio-io
        - authentication-istio-io
        kind: Policy
        plural: policies
        singular: policy
      scope: Namespaced
      subresources:
        status: {}
      version: "v1alpha1"
      versions:
      - name: v1alpha1
        served: true
        storage: true
    status:
      acceptedNames:
        kind: ""
        plural: ""
      conditions: []
      storedVersions: []

    ---
    apiVersion: apiextensions.k8s.io/v1beta1
    kind: CustomResourceDefinition
    metadata:
      annotations:
        "helm.sh/resource-policy": keep
      creationTimestamp: null
      labels:
        app: istio-mixer
        chart: istio
        heritage: Tiller
        release: istio
      name: quotaspecbindings.config.istio.io
    spec:
      group: config.istio.io
      names:
        categories:
        - istio-io
        - apim-istio-io
        kind: QuotaSpecBinding
        plural: quotaspecbindings
        singular: quotaspecbinding
      scope: Namespaced
      subresources:
        status: {}
      version: "v1alpha2"
      versions:
      - name: v1alpha2
        served: true
        storage: true
    status:
      acceptedNames:
        kind: ""
        plural: ""
      conditions: []
      storedVersions: []

    ---
    apiVersion: apiextensions.k8s.io/v1beta1
    kind: CustomResourceDefinition
    metadata:
      annotations:
        "helm.sh/resource-policy": keep
      creationTimestamp: null
      labels:
        app: istio-mixer
        chart: istio
        heritage: Tiller
        release: istio
      name: quotaspecs.config.istio.io
    spec:
      group: config.istio.io
      names:
        categories:
        - istio-io
        - apim-istio-io
        kind: QuotaSpec
        plural: quotaspecs
        singular: quotaspec
      scope: Namespaced
      subresources:
        status: {}
      version: "v1alpha2"
      versions:
      - name: v1alpha2
        served: true
        storage: true
    status:
      acceptedNames:
        kind: ""
        plural: ""
      conditions: []
      storedVersions: []

    ---
    apiVersion: apiextensions.k8s.io/v1beta1
    kind: CustomResourceDefinition
    metadata:
      annotations:
        "helm.sh/resource-policy": keep
      creationTimestamp: null
      labels:
        app: mixer
        chart: istio
        heritage: Tiller
        istio: rbac
        package: istio.io.mixer
        release: istio
      name: rbacconfigs.rbac.istio.io
    spec:
      group: rbac.istio.io
      names:
        categories:
        - istio-io
        - rbac-istio-io
        kind: RbacConfig
        plural: rbacconfigs
        singular: rbacconfig
      scope: Namespaced
      subresources:
        status: {}
      version: "v1alpha1"
      versions:
      - name: v1alpha1
        served: true
        storage: true
    status:
      acceptedNames:
        kind: ""
        plural: ""
      conditions: []
      storedVersions: []

    ---
    apiVersion: apiextensions.k8s.io/v1beta1
    kind: CustomResourceDefinition
    metadata:
      annotations:
        "helm.sh/resource-policy": keep
      creationTimestamp: null
      labels:
        app: mixer
        chart: istio
        heritage: Tiller
        istio: core
        package: istio.io.mixer
        release: istio
      name: rules.config.istio.io
    spec:
      group: config.istio.io
      names:
        categories:
        - istio-io
        - policy-istio-io
        kind: rule
        plural: rules
        singular: rule
      scope: Namespaced
      subresources:
        status: {}
      version: "v1alpha2"
      versions:
      - name: v1alpha2
        served: true
        storage: true
    status:
      acceptedNames:
        kind: ""
        plural: ""
      conditions: []
      storedVersions: []

    ---
    apiVersion: apiextensions.k8s.io/v1beta1
    kind: CustomResourceDefinition
    metadata:
      annotations:
        "helm.sh/resource-policy": keep
      creationTimestamp: null
      labels:
        app: istio-pilot
        chart: istio
        heritage: Tiller
        release: istio
      name: serviceentries.networking.istio.io
    spec:
      additionalPrinterColumns:
      - JSONPath: .spec.hosts
        description: The hosts associated with the ServiceEntry
        name: Hosts
        type: string
      - JSONPath: .spec.location
        description: Whether the service is external to the mesh or part of the mesh (MESH_EXTERNAL
          or MESH_INTERNAL)
        name: Location
        type: string
      - JSONPath: .spec.resolution
        description: Service discovery mode for the hosts (NONE, STATIC, or DNS)
        name: Resolution
        type: string
      - JSONPath: .metadata.creationTimestamp
        description: |-
          CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.
          Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
        name: Age
        type: date
      group: networking.istio.io
      names:
        categories:
        - istio-io
        - networking-istio-io
        kind: ServiceEntry
        listKind: ServiceEntryList
        plural: serviceentries
        shortNames:
        - se
        singular: serviceentry
      scope: Namespaced
      subresources:
        status: {}
      version: "v1alpha3"
      versions:
      - name: v1alpha3
        served: true
        storage: true
    status:
      acceptedNames:
        kind: ""
        plural: ""
      conditions: []
      storedVersions: []

    ---
    apiVersion: apiextensions.k8s.io/v1beta1
    kind: CustomResourceDefinition
    metadata:
      annotations:
        "helm.sh/resource-policy": keep
      creationTimestamp: null
      labels:
        app: mixer
        chart: istio
        heritage: Tiller
        istio: rbac
        package: istio.io.mixer
        release: istio
      name: servicerolebindings.rbac.istio.io
    spec:
      additionalPrinterColumns:
      - JSONPath: .spec.roleRef.name
        description: The name of the ServiceRole object being referenced
        name: Reference
        type: string
      - JSONPath: .metadata.creationTimestamp
        description: |-
          CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.
          Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
        name: Age
        type: date
      group: rbac.istio.io
      names:
        categories:
        - istio-io
        - rbac-istio-io
        kind: ServiceRoleBinding
        plural: servicerolebindings
        singular: servicerolebinding
      scope: Namespaced
      subresources:
        status: {}
      version: "v1alpha1"
      versions:
      - name: v1alpha1
        served: true
        storage: true
    status:
      acceptedNames:
        kind: ""
        plural: ""
      conditions: []
      storedVersions: []

    ---
    apiVersion: apiextensions.k8s.io/v1beta1
    kind: CustomResourceDefinition
    metadata:
      annotations:
        "helm.sh/resource-policy": keep
      creationTimestamp: null
      labels:
        app: mixer
        chart: istio
        heritage: Tiller
        istio: rbac
        package: istio.io.mixer
        release: istio
      name: serviceroles.rbac.istio.io
    spec:
      group: rbac.istio.io
      names:
        categories:
        - istio-io
        - rbac-istio-io
        kind: ServiceRole
        plural: serviceroles
        singular: servicerole
      scope: Namespaced
      subresources:
        status: {}
      version: "v1alpha1"
      versions:
      - name: v1alpha1
        served: true
        storage: true
    status:
      acceptedNames:
        kind: ""
        plural: ""
      conditions: []
      storedVersions: []

    ---
    apiVersion: apiextensions.k8s.io/v1beta1
    kind: CustomResourceDefinition
    metadata:
      annotations:
        "helm.sh/resource-policy": keep
      creationTimestamp: null
      labels:
        app: istio-pilot
        chart: istio
        heritage: Tiller
        release: istio
      name: sidecars.networking.istio.io
    spec:
      group: networking.istio.io
      names:
        categories:
        - istio-io
        - networking-istio-io
        kind: Sidecar
        plural: sidecars
        singular: sidecar
      scope: Namespaced
      subresources:
        status: {}
      version: "v1alpha3"
      versions:
      - name: v1alpha3
        served: true
        storage: true
    status:
      acceptedNames:
        kind: ""
        plural: ""
      conditions: []
      storedVersions: []

    ---
    apiVersion: apiextensions.k8s.io/v1beta1
    kind: CustomResourceDefinition
    metadata:
      annotations:
        "helm.sh/resource-policy": keep
      creationTimestamp: null
      labels:
        app: istio-pilot
        chart: istio
        heritage: Tiller
        release: istio
      name: virtualservices.networking.istio.io
    spec:
      additionalPrinterColumns:
      - JSONPath: .spec.gateways
        description: The names of gateways and sidecars that should apply these routes
        name: Gateways
        type: string
      - JSONPath: .spec.hosts
        description: The destination hosts to which traffic is being sent
        name: Hosts
        type: string
      - JSONPath: .metadata.creationTimestamp
        description: |-
          CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.
          Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
        name: Age
        type: date
      group: networking.istio.io
      names:
        categories:
        - istio-io
        - networking-istio-io
        kind: VirtualService
        listKind: VirtualServiceList
        plural: virtualservices
        shortNames:
        - vs
        singular: virtualservice
      scope: Namespaced
      subresources:
        status: {}
      version: "v1alpha3"
      versions:
      - name: v1alpha3
        served: true
        storage: true
    status:
      acceptedNames:
        kind: ""
        plural: ""
      conditions: []
      storedVersions: []
    ---
kind: ConfigMap
metadata:
  name: istio-crd-all
  namespace: mesh-control-plane
---
apiVersion: v1
data:
  crd-mixer.yaml: |-
    kind: CustomResourceDefinition
    apiVersion: apiextensions.k8s.io/v1beta1
    metadata:
      name: adapters.config.istio.io
      labels:
        app: mixer
        package: adapter
        istio: mixer-adapter
        chart: istio
        heritage: Tiller
        release: istio
      annotations:
        "helm.sh/resource-policy": keep
    spec:
      group: config.istio.io
      names:
        kind: adapter
        plural: adapters
        singular: adapter
        categories:
        - istio-io
        - policy-istio-io
      scope: Namespaced
      subresources:
        status: {}
      version: "v1alpha2"
      versions:
        - name: v1alpha2
          served: true
          storage: true
    ---
    kind: CustomResourceDefinition
    apiVersion: apiextensions.k8s.io/v1beta1
    metadata:
      name: instances.config.istio.io
      labels:
        app: mixer
        package: instance
        istio: mixer-instance
        chart: istio
        heritage: Tiller
        release: istio
      annotations:
        "helm.sh/resource-policy": keep
    spec:
      group: config.istio.io
      names:
        kind: instance
        plural: instances
        singular: instance
        categories:
        - istio-io
        - policy-istio-io
      scope: Namespaced
      subresources:
        status: {}
      version: "v1alpha2"
      versions:
        - name: v1alpha2
          served: true
          storage: true
    ---
    kind: CustomResourceDefinition
    apiVersion: apiextensions.k8s.io/v1beta1
    metadata:
      name: templates.config.istio.io
      labels:
        app: mixer
        package: template
        istio: mixer-template
        chart: istio
        heritage: Tiller
        release: istio
      annotations:
        "helm.sh/resource-policy": keep
    spec:
      group: config.istio.io
      names:
        kind: template
        plural: templates
        singular: template
        categories:
        - istio-io
        - policy-istio-io
      scope: Namespaced
      subresources:
        status: {}
      version: "v1alpha2"
      versions:
        - name: v1alpha2
          served: true
          storage: true
    ---
    kind: CustomResourceDefinition
    apiVersion: apiextensions.k8s.io/v1beta1
    metadata:
      name: handlers.config.istio.io
      labels:
        app: mixer
        package: handler
        istio: mixer-handler
        chart: istio
        heritage: Tiller
        release: istio
      annotations:
        "helm.sh/resource-policy": keep
    spec:
      group: config.istio.io
      names:
        kind: handler
        plural: handlers
        singular: handler
        categories:
        - istio-io
        - policy-istio-io
      scope: Namespaced
      subresources:
        status: {}
      version: "v1alpha2"
      versions:
        - name: v1alpha2
          served: true
          storage: true
    ---
kind: ConfigMap
metadata:
  name: istio-crd-mixer
  namespace: mesh-control-plane
---
apiVersion: v1
data:
  config: "policy: disabled\nalwaysInjectSelector:\n  []\nneverInjectSelector:\n  []\ntemplate:
    |-\n  rewriteAppHTTPProbe: {{ valueOrDefault .Values.sidecarInjectorWebhook.rewriteAppHTTPProbe
    false }}\n  {{- if or (not .Values.istio_cni.enabled) .Values.global.proxy.enableCoreDump
    }}\n  initContainers:\n  {{ if ne (annotation .ObjectMeta `sidecar.istio.io/interceptionMode`
    .ProxyConfig.InterceptionMode) `NONE` }}\n  {{- if not .Values.istio_cni.enabled
    }}\n  - name: istio-init\n  {{- if contains \"/\" .Values.global.proxy_init.image
    }}\n    image: \"{{ .Values.global.proxy_init.image }}\"\n  {{- else }}\n    image:
    \"{{ .Values.global.hub }}/{{ .Values.global.proxy_init.image }}:{{ .Values.global.tag
    }}\"\n  {{- end }}\n    command:\n    - istio-iptables\n    - \"-p\"\n    - \"{{
    .Values.global.proxy.listenPort }}\"\n    - \"-z\"\n    - \"15006\"\n    - \"-u\"\n
    \   - \"1337\"\n    - \"-m\"\n    - \"{{ annotation .ObjectMeta `sidecar.istio.io/interceptionMode`
    .ProxyConfig.InterceptionMode }}\"\n    - \"-i\"\n    - \"{{ annotation .ObjectMeta
    `traffic.sidecar.istio.io/includeOutboundIPRanges` .Values.global.proxy.includeIPRanges
    }}\"\n    - \"-x\"\n    - \"{{ annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundIPRanges`
    .Values.global.proxy.excludeIPRanges }}\"\n    - \"-b\"\n    - \"{{ annotation
    .ObjectMeta `traffic.sidecar.istio.io/includeInboundPorts` `*` }}\"\n    - \"-d\"\n
    \   - \"{{ excludeInboundPort (annotation .ObjectMeta `status.sidecar.istio.io/port`
    .Values.global.proxy.statusPort) (annotation .ObjectMeta `traffic.sidecar.istio.io/excludeInboundPorts`
    .Values.global.proxy.excludeInboundPorts) }}\"\n    {{ if or (isset .ObjectMeta.Annotations
    `traffic.sidecar.istio.io/excludeOutboundPorts`) (ne .Values.global.proxy.excludeOutboundPorts
    \"\") -}}\n    - \"-o\"\n    - \"{{ annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundPorts`
    .Values.global.proxy.excludeOutboundPorts }}\"\n    {{ end -}}\n    {{ if (isset
    .ObjectMeta.Annotations `traffic.sidecar.istio.io/kubevirtInterfaces`) -}}\n    -
    \"-k\"\n    - \"{{ index .ObjectMeta.Annotations `traffic.sidecar.istio.io/kubevirtInterfaces`
    }}\"\n    {{ end -}}\n    env:\n    - name: DISABLE_REDIRECTION_ON_LOCAL_LOOPBACK\n
    \     value: \"1\"\n    imagePullPolicy: \"{{ .Values.global.imagePullPolicy }}\"\n
    \ {{- if .Values.global.proxy.init.resources }}\n    resources:\n      {{ toYaml
    .Values.global.proxy.init.resources | indent 4 }}\n  {{- else }}\n    resources:
    {}\n  {{- end }}\n    securityContext:\n      runAsUser: 0\n      runAsNonRoot:
    false\n      capabilities:\n        add:\n        - NET_ADMIN\n      {{- if .Values.global.proxy.privileged
    }}\n      privileged: true\n      {{- end }}\n    restartPolicy: Always\n  {{-
    end }}\n  {{  end -}}\n  {{- if eq .Values.global.proxy.enableCoreDump true }}\n
    \ - name: enable-core-dump\n    args:\n    - -c\n    - sysctl -w kernel.core_pattern=/var/lib/istio/core.proxy
    && ulimit -c unlimited\n    command:\n      - /bin/sh\n    image: {{ $.Values.global.proxy.enableCoreDumpImage
    }}\n    imagePullPolicy: IfNotPresent\n    resources: {}\n    securityContext:\n
    \     runAsUser: 0\n      runAsNonRoot: false\n      privileged: true\n  {{ end
    }}\n  {{- end }}\n  containers:\n  - name: istio-proxy\n  {{- if contains \"/\"
    (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image)
    }}\n    image: \"{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image
    }}\"\n  {{- else }}\n    image: \"{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage`
    .Values.global.hub }}/{{ .Values.global.proxy.image }}:{{ .Values.global.tag }}\"\n
    \ {{- end }}\n    ports:\n    - containerPort: 15090\n      protocol: TCP\n      name:
    http-envoy-prom\n    args:\n    - proxy\n    - sidecar\n    - --domain\n    -
    $(POD_NAMESPACE).svc.{{ .Values.global.proxy.clusterDomain }}\n    - --configPath\n
    \   - \"{{ .ProxyConfig.ConfigPath }}\"\n    - --binaryPath\n    - \"{{ .ProxyConfig.BinaryPath
    }}\"\n    - --serviceCluster\n    {{ if ne \"\" (index .ObjectMeta.Labels \"app\")
    -}}\n    - \"{{ index .ObjectMeta.Labels `app` }}.$(POD_NAMESPACE)\"\n    {{ else
    -}}\n    - \"{{ valueOrDefault .DeploymentMeta.Name `istio-proxy` }}.{{ valueOrDefault
    .DeploymentMeta.Namespace `default` }}\"\n    {{ end -}}\n    - --drainDuration\n
    \   - \"{{ formatDuration .ProxyConfig.DrainDuration }}\"\n    - --parentShutdownDuration\n
    \   - \"{{ formatDuration .ProxyConfig.ParentShutdownDuration }}\"\n    - --discoveryAddress\n
    \   - \"{{ annotation .ObjectMeta `sidecar.istio.io/discoveryAddress` .ProxyConfig.DiscoveryAddress
    }}\"\n  {{- if eq .Values.global.proxy.tracer \"lightstep\" }}\n    - --lightstepAddress\n
    \   - \"{{ .ProxyConfig.GetTracing.GetLightstep.GetAddress }}\"\n    - --lightstepAccessToken\n
    \   - \"{{ .ProxyConfig.GetTracing.GetLightstep.GetAccessToken }}\"\n    - --lightstepSecure={{
    .ProxyConfig.GetTracing.GetLightstep.GetSecure }}\n    - --lightstepCacertPath\n
    \   - \"{{ .ProxyConfig.GetTracing.GetLightstep.GetCacertPath }}\"\n  {{- else
    if eq .Values.global.proxy.tracer \"zipkin\" }}\n    - --zipkinAddress\n    -
    \"{{ .ProxyConfig.GetTracing.GetZipkin.GetAddress }}\"\n  {{- else if eq .Values.global.proxy.tracer
    \"datadog\" }}\n    - --datadogAgentAddress\n    - \"{{ .ProxyConfig.GetTracing.GetDatadog.GetAddress
    }}\"\n  {{- end }}\n  {{- if .Values.global.proxy.logLevel }}\n    - --proxyLogLevel={{
    .Values.global.proxy.logLevel }}\n  {{- end}}\n  {{- if .Values.global.proxy.componentLogLevel
    }}\n    - --proxyComponentLogLevel={{ .Values.global.proxy.componentLogLevel }}\n
    \ {{- end}}\n    - --dnsRefreshRate\n    - {{ .Values.global.proxy.dnsRefreshRate
    }}\n    - --connectTimeout\n    - \"{{ formatDuration .ProxyConfig.ConnectTimeout
    }}\"\n  {{- if .Values.global.proxy.envoyStatsd.enabled }}\n    - --statsdUdpAddress\n
    \   - \"{{ .ProxyConfig.StatsdUdpAddress }}\"\n  {{- end }}\n  {{- if .Values.global.proxy.envoyMetricsService.enabled
    }}\n    - --envoyMetricsService\n    - '{{ protoToJSON .ProxyConfig.EnvoyMetricsService
    }}'\n  {{- end }}\n  {{- if .Values.global.proxy.envoyAccessLogService.enabled
    }}\n    - --envoyAccessLogService\n    - '{{ protoToJSON .ProxyConfig.EnvoyAccessLogService
    }}'\n  {{- end }}\n    - --proxyAdminPort\n    - \"{{ .ProxyConfig.ProxyAdminPort
    }}\"\n    {{ if gt .ProxyConfig.Concurrency 0 -}}\n    - --concurrency\n    -
    \"{{ .ProxyConfig.Concurrency }}\"\n    {{ end -}}\n    - --controlPlaneAuthPolicy\n
    \   - \"{{ annotation .ObjectMeta `sidecar.istio.io/controlPlaneAuthPolicy` .ProxyConfig.ControlPlaneAuthPolicy
    }}\"\n  {{- if (ne (annotation .ObjectMeta \"status.sidecar.istio.io/port\" (valueOrDefault
    .Values.global.proxy.statusPort 0 )) `0`) }}\n    - --statusPort\n    - \"{{ annotation
    .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort }}\"\n
    \ {{- end }}\n  {{- if .Values.global.trustDomain }}\n    - --trust-domain={{
    .Values.global.trustDomain }}\n  {{- end }}\n    - --controlPlaneBootstrap=false\n
    \   env:\n    - name: POD_NAME\n      valueFrom:\n        fieldRef:\n          fieldPath:
    metadata.name\n    - name: ISTIO_META_POD_PORTS\n      value: |-\n        [\n
    \       {{- range $index1, $c := .Spec.Containers }}\n          {{- range $index2,
    $p := $c.Ports }}\n            {{if or (ne $index1 0) (ne $index2 0)}},{{end}}{{
    structToJSON $p }}\n          {{- end}}\n        {{- end}}\n        ]\n    - name:
    ISTIO_META_CLUSTER_ID\n      value: \"{{ valueOrDefault .Values.global.multiCluster.clusterName
    `Kubernetes` }}\"\n    - name: POD_NAMESPACE\n      valueFrom:\n        fieldRef:\n
    \         fieldPath: metadata.namespace\n    - name: INSTANCE_IP\n      valueFrom:\n
    \       fieldRef:\n          fieldPath: status.podIP\n    - name: SERVICE_ACCOUNT\n
    \     valueFrom:\n        fieldRef:\n          fieldPath: spec.serviceAccountName\n
    \   {{- if .Values.global.mtls.auto }}\n    - name: ISTIO_AUTO_MTLS_ENABLED\n
    \     value: \"true\"\n    {{- end }}\n  {{- if eq .Values.global.proxy.tracer
    \"datadog\" }}\n    - name: HOST_IP\n      valueFrom:\n        fieldRef:\n          fieldPath:
    status.hostIP\n  {{- if isset .ObjectMeta.Annotations `apm.datadoghq.com/env`
    }}\n  {{- range $key, $value := fromJSON (index .ObjectMeta.Annotations `apm.datadoghq.com/env`)
    }}\n    - name: {{ $key }}\n      value: \"{{ $value }}\"\n  {{- end }}\n  {{-
    end }}\n  {{- end }}\n    - name: ISTIO_META_POD_NAME\n      valueFrom:\n        fieldRef:\n
    \         fieldPath: metadata.name\n    - name: ISTIO_META_CONFIG_NAMESPACE\n
    \     valueFrom:\n        fieldRef:\n          fieldPath: metadata.namespace\n
    \   - name: SDS_ENABLED\n      value: {{ $.Values.global.sds.enabled }}\n    -
    name: ISTIO_META_INTERCEPTION_MODE\n      value: \"{{ or (index .ObjectMeta.Annotations
    `sidecar.istio.io/interceptionMode`) .ProxyConfig.InterceptionMode.String }}\"\n
    \   - name: ISTIO_META_INCLUDE_INBOUND_PORTS\n      value: \"{{ annotation .ObjectMeta
    `traffic.sidecar.istio.io/includeInboundPorts` (applicationPorts .Spec.Containers)
    }}\"\n    {{- if .Values.global.network }}\n    - name: ISTIO_META_NETWORK\n      value:
    \"{{ .Values.global.network }}\"\n    {{- end }}\n    {{ if .ObjectMeta.Annotations
    }}\n    - name: ISTIO_METAJSON_ANNOTATIONS\n      value: |\n             {{ toJSON
    .ObjectMeta.Annotations }}\n    {{ end }}\n    {{ if .ObjectMeta.Labels }}\n    -
    name: ISTIO_METAJSON_LABELS\n      value: |\n             {{ toJSON .ObjectMeta.Labels
    }}\n    {{ end }}\n    {{- if .DeploymentMeta.Name }}\n    - name: ISTIO_META_WORKLOAD_NAME\n
    \     value: {{ .DeploymentMeta.Name }}\n    {{ end }}\n    {{- if and .TypeMeta.APIVersion
    .DeploymentMeta.Name }}\n    - name: ISTIO_META_OWNER\n      value: kubernetes://apis/{{
    .TypeMeta.APIVersion }}/namespaces/{{ valueOrDefault .DeploymentMeta.Namespace
    `default` }}/{{ toLower .TypeMeta.Kind}}s/{{ .DeploymentMeta.Name }}\n     {{-
    end}}\n    {{- if (isset .ObjectMeta.Annotations `sidecar.istio.io/bootstrapOverride`)
    }}\n    - name: ISTIO_BOOTSTRAP_OVERRIDE\n      value: \"/etc/istio/custom-bootstrap/custom_bootstrap.json\"\n
    \   {{- end }}\n    {{- if .Values.global.sds.customTokenDirectory }}\n    - name:
    ISTIO_META_SDS_TOKEN_PATH\n      value: \"{{ .Values.global.sds.customTokenDirectory
    -}}/sdstoken\"\n    {{- end }}\n    {{- if .Values.global.meshID }}\n    - name:
    ISTIO_META_MESH_ID\n      value: \"{{ .Values.global.meshID }}\"\n    {{- else
    if .Values.global.trustDomain }}\n    - name: ISTIO_META_MESH_ID\n      value:
    \"{{ .Values.global.trustDomain }}\"\n    {{- end }}\n    {{- if eq .Values.global.proxy.tracer
    \"stackdriver\" }}\n    - name: STACKDRIVER_TRACING_ENABLED\n      value: \"true\"\n
    \   - name: STACKDRIVER_TRACING_DEBUG\n      value: \"{{ .ProxyConfig.GetTracing.GetStackdriver.GetDebug
    }}\"\n    {{- if .ProxyConfig.GetTracing.GetStackdriver.GetMaxNumberOfAnnotations
    }}\n    - name: STACKDRIVER_TRACING_MAX_NUMBER_OF_ANNOTATIONS\n      value: \"{{
    .ProxyConfig.GetTracing.GetStackdriver.GetMaxNumberOfAnnotations }}\"\n    {{-
    end }}\n    {{- if .ProxyConfig.GetTracing.GetStackdriver.GetMaxNumberOfAttributes
    }}\n    - name: STACKDRIVER_TRACING_MAX_NUMBER_OF_ATTRIBUTES\n      value: \"{{
    .ProxyConfig.GetTracing.GetStackdriver.GetMaxNumberOfAttributes }}\"\n    {{-
    end }}\n    {{- if .ProxyConfig.GetTracing.GetStackdriver.GetMaxNumberOfMessageEvents
    }}\n    - name: STACKDRIVER_TRACING_MAX_NUMBER_OF_MESSAGE_EVENTS\n      value:
    \"{{ .ProxyConfig.GetTracing.GetStackdriver.GetMaxNumberOfMessageEvents }}\"\n
    \   {{- end }}\n    {{- end }}\n  \n    {{- if .Values.global.proxy.env }}\n    {{-
    range $key, $val := .Values.global.proxy.env }}\n    - name: {{ $key }}\n      value:
    \"{{ $val }}\"\n    {{- end }}\n    {{- end }}\n    - name: ISTIO_META_hostname
    # Required by Metrics Service\n      valueFrom:\n        fieldRef:\n          fieldPath:
    metadata.name\n    - name: ISTIO_META_namespace # Required by Metrics Service\n
    \     valueFrom:\n        fieldRef:\n          fieldPath: metadata.namespace\n
    \   imagePullPolicy: {{ .Values.global.imagePullPolicy }}\n    {{ if ne (annotation
    .ObjectMeta `status.sidecar.istio.io/port` (valueOrDefault .Values.global.proxy.statusPort
    0 )) `0` }}\n    readinessProbe:\n      httpGet:\n        path: /healthz/ready\n
    \       port: {{ annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort
    }}\n      initialDelaySeconds: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/initialDelaySeconds`
    .Values.global.proxy.readinessInitialDelaySeconds }}\n      periodSeconds: {{
    annotation .ObjectMeta `readiness.status.sidecar.istio.io/periodSeconds` .Values.global.proxy.readinessPeriodSeconds
    }}\n      failureThreshold: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/failureThreshold`
    .Values.global.proxy.readinessFailureThreshold }}\n    {{ end -}}\n    securityContext:\n
    \     {{- if .Values.global.proxy.privileged }}\n      privileged: true\n      {{-
    end }}\n      {{- if ne .Values.global.proxy.enableCoreDump true }}\n      readOnlyRootFilesystem:
    true\n      {{- end }}\n      {{ if eq (annotation .ObjectMeta `sidecar.istio.io/interceptionMode`
    .ProxyConfig.InterceptionMode) `TPROXY` -}}\n      capabilities:\n        add:\n
    \       - NET_ADMIN\n      runAsGroup: {{ .Values.global.securityContext.fsGroup
    }}\n      {{ else -}}\n      {{ if .Values.global.sds.enabled }}\n      runAsGroup:
    {{ .Values.global.securityContext.fsGroup }}\n      {{- end }}\n      runAsUser:
    1337\n      {{- end }}\n    resources:\n      {{ if or (isset .ObjectMeta.Annotations
    `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`)
    -}}\n      requests:\n        {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`)
    -}}\n        cpu: \"{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`
    }}\"\n        {{ end}}\n        {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`)
    -}}\n        memory: \"{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`
    }}\"\n        {{ end }}\n    {{ else -}}\n  {{- if .Values.global.proxy.resources
    }}\n      {{ toYaml .Values.global.proxy.resources | indent 4 }}\n  {{- end }}\n
    \   {{  end -}}\n    volumeMounts:\n    {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/bootstrapOverride`)
    }}\n    - mountPath: /etc/istio/custom-bootstrap\n      name: custom-bootstrap-volume\n
    \   {{- end }}\n    - mountPath: /etc/istio/proxy\n      name: istio-envoy\n    {{-
    if .Values.global.sds.enabled }}\n    - mountPath: /var/run/sds\n      name: sds-uds-path\n
    \     readOnly: true\n    - mountPath: /var/run/secrets/tokens\n      name: istio-token\n
    \   {{- if .Values.global.sds.customTokenDirectory }}\n    - mountPath: \"{{ .Values.global.sds.customTokenDirectory
    -}}\"\n      name: custom-sds-token\n      readOnly: true\n    {{- end }}\n    {{-
    else }}\n    - mountPath: /etc/certs/\n      name: istio-certs\n      readOnly:
    true\n    {{- end }}\n    {{- if and (eq .Values.global.proxy.tracer \"lightstep\")
    .Values.global.tracer.lightstep.cacertPath }}\n    - mountPath: {{ directory .ProxyConfig.GetTracing.GetLightstep.GetCacertPath
    }}\n      name: lightstep-certs\n      readOnly: true\n    {{- end }}\n      {{-
    if isset .ObjectMeta.Annotations `sidecar.istio.io/userVolumeMount` }}\n      {{
    range $index, $value := fromJSON (index .ObjectMeta.Annotations `sidecar.istio.io/userVolumeMount`)
    }}\n    - name: \"{{  $index }}\"\n      {{ toYaml $value | indent 4 }}\n      {{
    end }}\n      {{- end }}\n  volumes:\n  {{- if (isset .ObjectMeta.Annotations
    `sidecar.istio.io/bootstrapOverride`) }}\n  - name: custom-bootstrap-volume\n
    \   configMap:\n      name: {{ annotation .ObjectMeta `sidecar.istio.io/bootstrapOverride`
    \"\" }}\n  {{- end }}\n  - emptyDir:\n      medium: Memory\n    name: istio-envoy\n
    \ {{- if .Values.global.sds.enabled }}\n  - name: sds-uds-path\n    hostPath:\n
    \     path: /var/run/sds\n  - name: istio-token\n    projected:\n      sources:\n
    \       - serviceAccountToken:\n            path: istio-token\n            expirationSeconds:
    43200\n            audience: {{ .Values.global.sds.token.aud }}\n  {{- if .Values.global.sds.customTokenDirectory
    }}\n  - name: custom-sds-token\n    secret:\n      secretName: sdstokensecret\n
    \ {{- end }}\n  {{- else }}\n  - name: istio-certs\n    secret:\n      optional:
    true\n      {{ if eq .Spec.ServiceAccountName \"\" }}\n      secretName: istio.default\n
    \     {{ else -}}\n      secretName: {{  printf \"istio.%s\" .Spec.ServiceAccountName
    }}\n      {{  end -}}\n    {{- if isset .ObjectMeta.Annotations `sidecar.istio.io/userVolume`
    }}\n    {{range $index, $value := fromJSON (index .ObjectMeta.Annotations `sidecar.istio.io/userVolume`)
    }}\n  - name: \"{{ $index }}\"\n    {{ toYaml $value | indent 2 }}\n    {{ end
    }}\n    {{ end }}\n  {{- end }}\n  {{- if and (eq .Values.global.proxy.tracer
    \"lightstep\") .Values.global.tracer.lightstep.cacertPath }}\n  - name: lightstep-certs\n
    \   secret:\n      optional: true\n      secretName: lightstep.cacert\n  {{- end
    }}\n  {{- if .Values.global.podDNSSearchNamespaces }}\n  dnsConfig:\n    searches:\n
    \     {{- range .Values.global.podDNSSearchNamespaces }}\n      - {{ render .
    }}\n      {{- end }}\n  {{- end }}\n  podRedirectAnnot:\n     sidecar.istio.io/interceptionMode:
    \"{{ annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode
    }}\"\n     traffic.sidecar.istio.io/includeOutboundIPRanges: \"{{ annotation .ObjectMeta
    `traffic.sidecar.istio.io/includeOutboundIPRanges` .Values.global.proxy.includeIPRanges
    }}\"\n     traffic.sidecar.istio.io/excludeOutboundIPRanges: \"{{ annotation .ObjectMeta
    `traffic.sidecar.istio.io/excludeOutboundIPRanges` .Values.global.proxy.excludeIPRanges
    }}\"\n     traffic.sidecar.istio.io/includeInboundPorts: \"{{ annotation .ObjectMeta
    `traffic.sidecar.istio.io/includeInboundPorts` (includeInboundPorts .Spec.Containers)
    }}\"\n     traffic.sidecar.istio.io/excludeInboundPorts: \"{{ excludeInboundPort
    (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort)
    (annotation .ObjectMeta `traffic.sidecar.istio.io/excludeInboundPorts` .Values.global.proxy.excludeInboundPorts)
    }}\"\n  {{ if or (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/excludeOutboundPorts`)
    (ne .Values.global.proxy.excludeOutboundPorts \"\") }}\n     traffic.sidecar.istio.io/excludeOutboundPorts:
    \"{{ annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundPorts` .Values.global.proxy.excludeOutboundPorts
    }}\"\n  {{- end }}\n     traffic.sidecar.istio.io/kubevirtInterfaces: \"{{ index
    .ObjectMeta.Annotations `traffic.sidecar.istio.io/kubevirtInterfaces` }}\"\ninjectedAnnotations:"
  values: '{"automountServiceAccountToken":true,"certmanager":{"enabled":false},"createServiceAccount":true,"galley":{"enabled":false},"gateways":{"enabled":true,"global":{"arch":{"amd64":2,"ppc64le":2,"s390x":2},"certificates":[],"configValidation":false,"controlPlaneSecurityEnabled":true,"customCertificates":{"ca":{"certPath":"cacerts.pem","mountPath":"/etc/identity/ca","volumeName":"ca"},"client":{"certPath":"certificates/client.pem","keyPath":"keys/client-key.pem","mountPath":"/etc/identity/client","volumeName":"clientcert"},"enabled":true,"server":{"certPath":"certificates/server.pem","keyPath":"keys/server-key.pem","mountPath":"/etc/identity/server","volumeName":"servercert"}},"defaultNodeSelector":{},"defaultPodDisruptionBudget":{"enabled":false},"defaultResources":{"requests":{"cpu":"10m"}},"defaultTolerations":[],"disablePolicyChecks":true,"enableHelmTest":false,"enableTracing":false,"hub":"791719295754.dkr.ecr.us-east-2.amazonaws.com/sfci/servicemesh/istio-packaging","imagePullPolicy":"IfNotPresent","imagePullSecrets":null,"istioNamespace":"mesh-control-plane","k8sIngress":{"enableHttps":false,"enabled":false,"gatewayName":"ingressgateway"},"localityLbSetting":{"enabled":true},"logging":{"level":"default:warn"},"meshExpansion":{"enabled":false,"useILB":false},"meshID":"","meshNetworks":{},"metricsScraper":{"enabled":true,"funnel":{"host":"ajnafunneldirecttls.funnel.svc.mesh.sfdc.net","port":7442},"hub":"791719295754.dkr.ecr.us-east-2.amazonaws.com/sfci/servicemesh/servicemesh/metrics-scraper","resources":{"limits":{"cpu":"2000m","memory":"2048Mi"},"requests":{"cpu":"100m","memory":"512Mi"}},"tag":"4749a2d1bcb74c2325daf80e4bb0ba80724316f9"},"monitoringPort":15014,"mtls":{"auto":true,"enabled":false},"multiCluster":{"clusterName":"","enabled":false},"network":"","oneNamespace":false,"operatorManageWebhooks":false,"outboundTrafficPolicy":{"mode":"ALLOW_ANY"},"policyCheckFailOpen":false,"priorityClassName":"","proxy":{"accessLogEncoding":"TEXT","accessLogFile":"/dev/stdout","accessLogFormat":"","adminPort":15373,"autoInject":"disabled","clusterDomain":"cluster.local","componentLogLevel":"","concurrency":0,"dnsRefreshRate":"300s","enableCoreDump":false,"enableCoreDumpImage":"ubuntu:xenial","env":{"ISTIO_META_TLS_CLIENT_CERT_CHAIN":"/etc/identity/client/certificates/client.pem","ISTIO_META_TLS_CLIENT_KEY":"/etc/identity/client/keys/client-key.pem","ISTIO_META_TLS_CLIENT_ROOT_CERT":"/etc/identity/ca/cacerts.pem","ISTIO_META_TLS_SERVER_CERT_CHAIN":"/etc/identity/server/certificates/server.pem","ISTIO_META_TLS_SERVER_KEY":"/etc/identity/server/keys/server-key.pem","ISTIO_META_TLS_SERVER_ROOT_CERT":"/etc/identity/ca/cacerts.pem"},"envoyAccessLogService":{"enabled":false,"host":null,"port":null,"tcpKeepalive":{"interval":"10s","probes":3,"time":"10s"},"tlsSettings":{"caCertificates":null,"clientCertificate":null,"mode":"DISABLE","privateKey":null,"sni":null,"subjectAltNames":[]}},"envoyMetricsService":{"enabled":true,"host":"metrics-service.service-mesh","port":15001,"tcpKeepalive":{"interval":"10s","probes":3,"time":"10s"},"tlsSettings":{"caCertificates":"/etc/identity/ca/cacerts.pem","clientCertificate":"/etc/identity/client/certificates/client.pem","mode":"MUTUAL","privateKey":"/etc/identity/client/keys/client-key.pem","sni":null,"subjectAltNames":[]}},"envoyStatsd":{"enabled":false,"host":null,"port":null},"excludeIPRanges":"","excludeInboundPorts":"","excludeOutboundPorts":"","image":"proxy","includeIPRanges":"127.1.2.3/32","includeInboundPorts":"*","init":{"resources":{"limits":{"cpu":"100m","memory":"50Mi"},"requests":{"cpu":"10m","memory":"10Mi"}}},"kubevirtInterfaces":"","listenPort":15002,"logLevel":"info","privileged":false,"protocolDetectionTimeout":"100ms","readinessFailureThreshold":30,"readinessInitialDelaySeconds":1,"readinessPeriodSeconds":2,"resources":{"limits":{"cpu":"2000m","memory":"1024Mi"},"requests":{"cpu":"100m","memory":"128Mi"}},"statusPort":15020,"tracer":"zipkin"},"proxy_init":{"image":"proxy"},"sds":{"enabled":false,"token":{"aud":"istio-ca"},"udsPath":"","useNormalJwt":false,"useTrustworthyJwt":false},"securityContext":{"fsGroup":7447,"runAsNonRoot":true,"runAsUser":7447},"tag":"4560429101a9e635e4fa9e5d5f14feae98c17d20","tracer":{"datadog":{"address":"$(HOST_IP):8126"},"lightstep":{"accessToken":"","address":"","cacertPath":"","secure":true},"stackdriver":{"debug":false,"maxNumberOfAnnotations":200,"maxNumberOfAttributes":200,"maxNumberOfMessageEvents":200},"zipkin":{"address":""}},"trustDomain":"","trustDomainAliases":[],"useMCP":false},"istio-egressgateway":{"autoscaleEnabled":true,"autoscaleMax":5,"autoscaleMin":1,"cpu":{"targetAverageUtilization":80},"enabled":false,"env":{"ISTIO_META_ROUTER_MODE":"standard"},"labels":{"app":"istio-egressgateway","istio":"egressgateway"},"nodeSelector":{},"podAnnotations":{},"podAntiAffinityLabelSelector":[],"podAntiAffinityTermLabelSelector":[],"ports":[{"name":"http2","port":80},{"name":"https","port":443},{"name":"tls","port":15443,"targetPort":15443}],"resources":{"limits":{"cpu":"2000m","memory":"1024Mi"},"requests":{"cpu":"100m","memory":"128Mi"}},"rollingMaxSurge":"100%","rollingMaxUnavailable":"25%","secretVolumes":[{"mountPath":"/etc/istio/egressgateway-certs","name":"egressgateway-certs","secretName":"istio-egressgateway-certs"},{"mountPath":"/etc/istio/egressgateway-ca-certs","name":"egressgateway-ca-certs","secretName":"istio-egressgateway-ca-certs"}],"serviceAnnotations":{},"tolerations":[],"type":"ClusterIP"},"istio-ilbgateway":{"autoscaleEnabled":true,"autoscaleMax":5,"autoscaleMin":1,"cpu":{"targetAverageUtilization":80},"enabled":false,"labels":{"app":"istio-ilbgateway","istio":"ilbgateway"},"loadBalancerIP":"","nodeSelector":{},"podAnnotations":{},"ports":[{"name":"grpc-pilot-mtls","port":15011},{"name":"grpc-pilot","port":15010},{"name":"tcp-citadel-grpc-tls","port":8060,"targetPort":8060},{"name":"tcp-dns","port":5353}],"resources":{"requests":{"cpu":"800m","memory":"512Mi"}},"rollingMaxSurge":"100%","rollingMaxUnavailable":"25%","secretVolumes":[{"mountPath":"/etc/istio/ilbgateway-certs","name":"ilbgateway-certs","secretName":"istio-ilbgateway-certs"},{"mountPath":"/etc/istio/ilbgateway-ca-certs","name":"ilbgateway-ca-certs","secretName":"istio-ilbgateway-ca-certs"}],"serviceAnnotations":{"cloud.google.com/load-balancer-type":"internal"},"tolerations":[],"type":"LoadBalancer"},"istio-ingressgateway":{"automountServiceAccountToken":true,"autoscaleEnabled":false,"autoscaleMax":5,"autoscaleMin":1,"cpu":{"targetAverageUtilization":80},"createServiceAccount":true,"enabled":true,"env":{"ESTATE":"updated_by_firebom","ISTIO_BOOTSTRAP":"/var/lib/istio/envoy/envoy_bootstrap_tmpl_sfdc_falcon.json","ISTIO_META_ROUTER_MODE":"standard","ISTIO_META_TLS_CLIENT_CERT_CHAIN":"/etc/identity/client/certificates/client.pem","ISTIO_META_TLS_CLIENT_KEY":"/etc/identity/client/keys/client-key.pem","ISTIO_META_TLS_CLIENT_ROOT_CERT":"/etc/identity/ca/cacerts.pem","ISTIO_META_TLS_SERVER_CERT_CHAIN":"/etc/identity/server/certificates/server.pem","ISTIO_META_TLS_SERVER_KEY":"/etc/identity/server/keys/server-key.pem","ISTIO_META_TLS_SERVER_ROOT_CERT":"/etc/identity/ca/cacerts.pem","SETTINGS_PATH":"updated_by_firebom","SETTINGS_SUPERPOD":"-"},"externalIPs":[],"labels":{"app":"istio-ingressgateway","istio":"ingressgateway"},"loadBalancerIP":"","loadBalancerSourceRanges":[],"meshExpansionPorts":[{"name":"tcp-pilot-grpc-tls","port":15011,"targetPort":15011},{"name":"tcp-mixer-grpc-tls","port":15004,"targetPort":15004},{"name":"tcp-citadel-grpc-tls","port":8060,"targetPort":8060},{"name":"tcp-dns-tls","port":853,"targetPort":853}],"nodeSelector":{},"podAnnotations":{},"podAntiAffinityLabelSelector":[],"podAntiAffinityTermLabelSelector":[],"ports":[{"name":"https-core-443","port":443},{"name":"https-core-8443","port":8443},{"name":"https-core-8085","port":8085},{"name":"tcp-core-2525","port":2525}],"replicaCount":1,"resources":{"limits":{"cpu":"2000m","memory":"1024Mi"},"requests":{"cpu":"100m","memory":"128Mi"}},"rollingMaxSurge":"100%","rollingMaxUnavailable":"25%","sds":{"enabled":false,"image":"node-agent-k8s","resources":{"limits":{"cpu":"2000m","memory":"1024Mi"},"requests":{"cpu":"100m","memory":"128Mi"}}},"secretVolumes":[],"serviceAccountName":"istio-ingressgateway-service-account","serviceAnnotations":{"service.beta.kubernetes.io/aws-load-balancer-type":"nlb"},"tolerations":[],"type":"LoadBalancer"}},"global":{"arch":{"amd64":2,"ppc64le":2,"s390x":2},"certificates":[],"configValidation":false,"controlPlaneSecurityEnabled":true,"customCertificates":{"ca":{"certPath":"cacerts.pem","mountPath":"/etc/identity/ca","volumeName":"ca"},"client":{"certPath":"certificates/client.pem","keyPath":"keys/client-key.pem","mountPath":"/etc/identity/client","volumeName":"clientcert"},"enabled":true,"server":{"certPath":"certificates/server.pem","keyPath":"keys/server-key.pem","mountPath":"/etc/identity/server","volumeName":"servercert"}},"defaultNodeSelector":{},"defaultPodDisruptionBudget":{"enabled":false},"defaultResources":{"requests":{"cpu":"10m"}},"defaultTolerations":[],"disablePolicyChecks":true,"enableHelmTest":false,"enableTracing":false,"hub":"791719295754.dkr.ecr.us-east-2.amazonaws.com/sfci/servicemesh/istio-packaging","imagePullPolicy":"IfNotPresent","imagePullSecrets":null,"istioNamespace":"mesh-control-plane","k8sIngress":{"enableHttps":false,"enabled":false,"gatewayName":"ingressgateway"},"localityLbSetting":{"enabled":true},"logging":{"level":"default:warn"},"meshExpansion":{"enabled":false,"useILB":false},"meshID":"","meshNetworks":{},"metricsScraper":{"enabled":true,"funnel":{"host":"ajnafunneldirecttls.funnel.svc.mesh.sfdc.net","port":7442},"hub":"791719295754.dkr.ecr.us-east-2.amazonaws.com/sfci/servicemesh/servicemesh/metrics-scraper","resources":{"limits":{"cpu":"2000m","memory":"2048Mi"},"requests":{"cpu":"100m","memory":"512Mi"}},"tag":"4749a2d1bcb74c2325daf80e4bb0ba80724316f9"},"monitoringPort":15014,"mtls":{"auto":true,"enabled":false},"multiCluster":{"clusterName":"","enabled":false},"network":"","oneNamespace":false,"operatorManageWebhooks":false,"outboundTrafficPolicy":{"mode":"ALLOW_ANY"},"policyCheckFailOpen":false,"priorityClassName":"","proxy":{"accessLogEncoding":"TEXT","accessLogFile":"/dev/stdout","accessLogFormat":"","adminPort":15373,"autoInject":"disabled","clusterDomain":"cluster.local","componentLogLevel":"","concurrency":0,"dnsRefreshRate":"300s","enableCoreDump":false,"enableCoreDumpImage":"ubuntu:xenial","env":{"ISTIO_META_TLS_CLIENT_CERT_CHAIN":"/etc/identity/client/certificates/client.pem","ISTIO_META_TLS_CLIENT_KEY":"/etc/identity/client/keys/client-key.pem","ISTIO_META_TLS_CLIENT_ROOT_CERT":"/etc/identity/ca/cacerts.pem","ISTIO_META_TLS_SERVER_CERT_CHAIN":"/etc/identity/server/certificates/server.pem","ISTIO_META_TLS_SERVER_KEY":"/etc/identity/server/keys/server-key.pem","ISTIO_META_TLS_SERVER_ROOT_CERT":"/etc/identity/ca/cacerts.pem"},"envoyAccessLogService":{"enabled":false,"host":null,"port":null,"tcpKeepalive":{"interval":"10s","probes":3,"time":"10s"},"tlsSettings":{"caCertificates":null,"clientCertificate":null,"mode":"DISABLE","privateKey":null,"sni":null,"subjectAltNames":[]}},"envoyMetricsService":{"enabled":true,"host":"metrics-service.service-mesh","port":15001,"tcpKeepalive":{"interval":"10s","probes":3,"time":"10s"},"tlsSettings":{"caCertificates":"/etc/identity/ca/cacerts.pem","clientCertificate":"/etc/identity/client/certificates/client.pem","mode":"MUTUAL","privateKey":"/etc/identity/client/keys/client-key.pem","sni":null,"subjectAltNames":[]}},"envoyStatsd":{"enabled":false,"host":null,"port":null},"excludeIPRanges":"","excludeInboundPorts":"","excludeOutboundPorts":"","image":"proxy","includeIPRanges":"127.1.2.3/32","includeInboundPorts":"*","init":{"resources":{"limits":{"cpu":"100m","memory":"50Mi"},"requests":{"cpu":"10m","memory":"10Mi"}}},"kubevirtInterfaces":"","listenPort":15002,"logLevel":"info","privileged":false,"protocolDetectionTimeout":"100ms","readinessFailureThreshold":30,"readinessInitialDelaySeconds":1,"readinessPeriodSeconds":2,"resources":{"limits":{"cpu":"2000m","memory":"1024Mi"},"requests":{"cpu":"100m","memory":"128Mi"}},"statusPort":15020,"tracer":"zipkin"},"proxy_init":{"image":"proxy"},"sds":{"enabled":false,"token":{"aud":"istio-ca"},"udsPath":"","useNormalJwt":false,"useTrustworthyJwt":false},"securityContext":{"fsGroup":7447,"runAsNonRoot":true,"runAsUser":7447},"tag":"4560429101a9e635e4fa9e5d5f14feae98c17d20","tracer":{"datadog":{"address":"$(HOST_IP):8126"},"lightstep":{"accessToken":"","address":"","cacertPath":"","secure":true},"stackdriver":{"debug":false,"maxNumberOfAnnotations":200,"maxNumberOfAttributes":200,"maxNumberOfMessageEvents":200},"zipkin":{"address":""}},"trustDomain":"","trustDomainAliases":[],"useMCP":false},"grafana":{"enabled":false},"istio_cni":{"enabled":false},"istiocoredns":{"enabled":false},"kiali":{"enabled":false},"mixer":{"adapters":{"kubernetesenv":{"enabled":true},"prometheus":{"enabled":true,"metricsExpiryDuration":"10m"},"stdio":{"enabled":false,"outputAsJson":true},"useAdapterCRDs":false},"enabled":false,"env":{"GOMAXPROCS":"6"},"global":{"arch":{"amd64":2,"ppc64le":2,"s390x":2},"certificates":[],"configValidation":false,"controlPlaneSecurityEnabled":true,"customCertificates":{"ca":{"certPath":"cacerts.pem","mountPath":"/etc/identity/ca","volumeName":"ca"},"client":{"certPath":"certificates/client.pem","keyPath":"keys/client-key.pem","mountPath":"/etc/identity/client","volumeName":"clientcert"},"enabled":true,"server":{"certPath":"certificates/server.pem","keyPath":"keys/server-key.pem","mountPath":"/etc/identity/server","volumeName":"servercert"}},"defaultNodeSelector":{},"defaultPodDisruptionBudget":{"enabled":false},"defaultResources":{"requests":{"cpu":"10m"}},"defaultTolerations":[],"disablePolicyChecks":true,"enableHelmTest":false,"enableTracing":false,"hub":"791719295754.dkr.ecr.us-east-2.amazonaws.com/sfci/servicemesh/istio-packaging","imagePullPolicy":"IfNotPresent","imagePullSecrets":null,"istioNamespace":"mesh-control-plane","k8sIngress":{"enableHttps":false,"enabled":false,"gatewayName":"ingressgateway"},"localityLbSetting":{"enabled":true},"logging":{"level":"default:warn"},"meshExpansion":{"enabled":false,"useILB":false},"meshID":"","meshNetworks":{},"metricsScraper":{"enabled":true,"funnel":{"host":"ajnafunneldirecttls.funnel.svc.mesh.sfdc.net","port":7442},"hub":"791719295754.dkr.ecr.us-east-2.amazonaws.com/sfci/servicemesh/servicemesh/metrics-scraper","resources":{"limits":{"cpu":"2000m","memory":"2048Mi"},"requests":{"cpu":"100m","memory":"512Mi"}},"tag":"4749a2d1bcb74c2325daf80e4bb0ba80724316f9"},"monitoringPort":15014,"mtls":{"auto":true,"enabled":false},"multiCluster":{"clusterName":"","enabled":false},"network":"","oneNamespace":false,"operatorManageWebhooks":false,"outboundTrafficPolicy":{"mode":"ALLOW_ANY"},"policyCheckFailOpen":false,"priorityClassName":"","proxy":{"accessLogEncoding":"TEXT","accessLogFile":"/dev/stdout","accessLogFormat":"","adminPort":15373,"autoInject":"disabled","clusterDomain":"cluster.local","componentLogLevel":"","concurrency":0,"dnsRefreshRate":"300s","enableCoreDump":false,"enableCoreDumpImage":"ubuntu:xenial","env":{"ISTIO_META_TLS_CLIENT_CERT_CHAIN":"/etc/identity/client/certificates/client.pem","ISTIO_META_TLS_CLIENT_KEY":"/etc/identity/client/keys/client-key.pem","ISTIO_META_TLS_CLIENT_ROOT_CERT":"/etc/identity/ca/cacerts.pem","ISTIO_META_TLS_SERVER_CERT_CHAIN":"/etc/identity/server/certificates/server.pem","ISTIO_META_TLS_SERVER_KEY":"/etc/identity/server/keys/server-key.pem","ISTIO_META_TLS_SERVER_ROOT_CERT":"/etc/identity/ca/cacerts.pem"},"envoyAccessLogService":{"enabled":false,"host":null,"port":null,"tcpKeepalive":{"interval":"10s","probes":3,"time":"10s"},"tlsSettings":{"caCertificates":null,"clientCertificate":null,"mode":"DISABLE","privateKey":null,"sni":null,"subjectAltNames":[]}},"envoyMetricsService":{"enabled":true,"host":"metrics-service.service-mesh","port":15001,"tcpKeepalive":{"interval":"10s","probes":3,"time":"10s"},"tlsSettings":{"caCertificates":"/etc/identity/ca/cacerts.pem","clientCertificate":"/etc/identity/client/certificates/client.pem","mode":"MUTUAL","privateKey":"/etc/identity/client/keys/client-key.pem","sni":null,"subjectAltNames":[]}},"envoyStatsd":{"enabled":false,"host":null,"port":null},"excludeIPRanges":"","excludeInboundPorts":"","excludeOutboundPorts":"","image":"proxy","includeIPRanges":"127.1.2.3/32","includeInboundPorts":"*","init":{"resources":{"limits":{"cpu":"100m","memory":"50Mi"},"requests":{"cpu":"10m","memory":"10Mi"}}},"kubevirtInterfaces":"","listenPort":15002,"logLevel":"info","privileged":false,"protocolDetectionTimeout":"100ms","readinessFailureThreshold":30,"readinessInitialDelaySeconds":1,"readinessPeriodSeconds":2,"resources":{"limits":{"cpu":"2000m","memory":"1024Mi"},"requests":{"cpu":"100m","memory":"128Mi"}},"statusPort":15020,"tracer":"zipkin"},"proxy_init":{"image":"proxy"},"sds":{"enabled":false,"token":{"aud":"istio-ca"},"udsPath":"","useNormalJwt":false,"useTrustworthyJwt":false},"securityContext":{"fsGroup":7447,"runAsNonRoot":true,"runAsUser":7447},"tag":"4560429101a9e635e4fa9e5d5f14feae98c17d20","tracer":{"datadog":{"address":"$(HOST_IP):8126"},"lightstep":{"accessToken":"","address":"","cacertPath":"","secure":true},"stackdriver":{"debug":false,"maxNumberOfAnnotations":200,"maxNumberOfAttributes":200,"maxNumberOfMessageEvents":200},"zipkin":{"address":""}},"trustDomain":"","trustDomainAliases":[],"useMCP":false},"image":"mixer","nodeSelector":{},"podAnnotations":{},"podAntiAffinityLabelSelector":[],"podAntiAffinityTermLabelSelector":[],"policy":{"autoscaleEnabled":true,"autoscaleMax":5,"autoscaleMin":1,"cpu":{"targetAverageUtilization":80},"enabled":false,"replicaCount":1,"rollingMaxSurge":"100%","rollingMaxUnavailable":"25%"},"telemetry":{"autoscaleEnabled":true,"autoscaleMax":5,"autoscaleMin":1,"cpu":{"targetAverageUtilization":80},"enabled":false,"loadshedding":{"latencyThreshold":"100ms","mode":"enforce"},"replicaCount":1,"reportBatchMaxEntries":100,"reportBatchMaxTime":"1s","resources":{"limits":{"cpu":"4800m","memory":"4G"},"requests":{"cpu":"1000m","memory":"1G"}},"rollingMaxSurge":"100%","rollingMaxUnavailable":"25%","sessionAffinityEnabled":false},"templates":{"useTemplateCRDs":false},"tolerations":[]},"nodeagent":{"enabled":false},"pilot":{"automountServiceAccountToken":true,"autoscaleEnabled":false,"autoscaleMax":5,"autoscaleMin":1,"configSource":{"subscribedResources":null},"cpu":{"targetAverageUtilization":80},"createServiceAccount":true,"enableProtocolSniffingForInbound":true,"enableProtocolSniffingForOutbound":true,"enabled":true,"env":{"ESTATE":"updated_by_firebom","PILOT_ENABLE_REDIS_FILTER":"true","PILOT_PUSH_THROTTLE":100,"PILOT_SIDECAR_USE_REMOTE_ADDRESS":"true","SETTINGS_PATH":"updated_by_firebom","SETTINGS_SUPERPOD":"-"},"global":{"arch":{"amd64":2,"ppc64le":2,"s390x":2},"certificates":[],"configValidation":false,"controlPlaneSecurityEnabled":true,"customCertificates":{"ca":{"certPath":"cacerts.pem","mountPath":"/etc/identity/ca","volumeName":"ca"},"client":{"certPath":"certificates/client.pem","keyPath":"keys/client-key.pem","mountPath":"/etc/identity/client","volumeName":"clientcert"},"enabled":true,"server":{"certPath":"certificates/server.pem","keyPath":"keys/server-key.pem","mountPath":"/etc/identity/server","volumeName":"servercert"}},"defaultNodeSelector":{},"defaultPodDisruptionBudget":{"enabled":false},"defaultResources":{"requests":{"cpu":"10m"}},"defaultTolerations":[],"disablePolicyChecks":true,"enableHelmTest":false,"enableTracing":false,"hub":"791719295754.dkr.ecr.us-east-2.amazonaws.com/sfci/servicemesh/istio-packaging","imagePullPolicy":"IfNotPresent","imagePullSecrets":null,"istioNamespace":"mesh-control-plane","k8sIngress":{"enableHttps":false,"enabled":false,"gatewayName":"ingressgateway"},"localityLbSetting":{"enabled":true},"logging":{"level":"default:warn"},"meshExpansion":{"enabled":false,"useILB":false},"meshID":"","meshNetworks":{},"metricsScraper":{"enabled":true,"funnel":{"host":"ajnafunneldirecttls.funnel.svc.mesh.sfdc.net","port":7442},"hub":"791719295754.dkr.ecr.us-east-2.amazonaws.com/sfci/servicemesh/servicemesh/metrics-scraper","resources":{"limits":{"cpu":"2000m","memory":"2048Mi"},"requests":{"cpu":"100m","memory":"512Mi"}},"tag":"4749a2d1bcb74c2325daf80e4bb0ba80724316f9"},"monitoringPort":15014,"mtls":{"auto":true,"enabled":false},"multiCluster":{"clusterName":"","enabled":false},"network":"","oneNamespace":false,"operatorManageWebhooks":false,"outboundTrafficPolicy":{"mode":"ALLOW_ANY"},"policyCheckFailOpen":false,"priorityClassName":"","proxy":{"accessLogEncoding":"TEXT","accessLogFile":"/dev/stdout","accessLogFormat":"","adminPort":15373,"autoInject":"disabled","clusterDomain":"cluster.local","componentLogLevel":"","concurrency":0,"dnsRefreshRate":"300s","enableCoreDump":false,"enableCoreDumpImage":"ubuntu:xenial","env":{"ISTIO_META_TLS_CLIENT_CERT_CHAIN":"/etc/identity/client/certificates/client.pem","ISTIO_META_TLS_CLIENT_KEY":"/etc/identity/client/keys/client-key.pem","ISTIO_META_TLS_CLIENT_ROOT_CERT":"/etc/identity/ca/cacerts.pem","ISTIO_META_TLS_SERVER_CERT_CHAIN":"/etc/identity/server/certificates/server.pem","ISTIO_META_TLS_SERVER_KEY":"/etc/identity/server/keys/server-key.pem","ISTIO_META_TLS_SERVER_ROOT_CERT":"/etc/identity/ca/cacerts.pem"},"envoyAccessLogService":{"enabled":false,"host":null,"port":null,"tcpKeepalive":{"interval":"10s","probes":3,"time":"10s"},"tlsSettings":{"caCertificates":null,"clientCertificate":null,"mode":"DISABLE","privateKey":null,"sni":null,"subjectAltNames":[]}},"envoyMetricsService":{"enabled":true,"host":"metrics-service.service-mesh","port":15001,"tcpKeepalive":{"interval":"10s","probes":3,"time":"10s"},"tlsSettings":{"caCertificates":"/etc/identity/ca/cacerts.pem","clientCertificate":"/etc/identity/client/certificates/client.pem","mode":"MUTUAL","privateKey":"/etc/identity/client/keys/client-key.pem","sni":null,"subjectAltNames":[]}},"envoyStatsd":{"enabled":false,"host":null,"port":null},"excludeIPRanges":"","excludeInboundPorts":"","excludeOutboundPorts":"","image":"proxy","includeIPRanges":"127.1.2.3/32","includeInboundPorts":"*","init":{"resources":{"limits":{"cpu":"100m","memory":"50Mi"},"requests":{"cpu":"10m","memory":"10Mi"}}},"kubevirtInterfaces":"","listenPort":15002,"logLevel":"info","privileged":false,"protocolDetectionTimeout":"100ms","readinessFailureThreshold":30,"readinessInitialDelaySeconds":1,"readinessPeriodSeconds":2,"resources":{"limits":{"cpu":"2000m","memory":"1024Mi"},"requests":{"cpu":"100m","memory":"128Mi"}},"statusPort":15020,"tracer":"zipkin"},"proxy_init":{"image":"proxy"},"sds":{"enabled":false,"token":{"aud":"istio-ca"},"udsPath":"","useNormalJwt":false,"useTrustworthyJwt":false},"securityContext":{"fsGroup":7447,"runAsNonRoot":true,"runAsUser":7447},"tag":"4560429101a9e635e4fa9e5d5f14feae98c17d20","tracer":{"datadog":{"address":"$(HOST_IP):8126"},"lightstep":{"accessToken":"","address":"","cacertPath":"","secure":true},"stackdriver":{"debug":false,"maxNumberOfAnnotations":200,"maxNumberOfAttributes":200,"maxNumberOfMessageEvents":200},"zipkin":{"address":""}},"trustDomain":"","trustDomainAliases":[],"useMCP":false},"image":"pilot","keepaliveMaxServerConnectionAge":"30m","nodeSelector":{},"podAnnotations":{},"podAntiAffinityLabelSelector":[],"podAntiAffinityTermLabelSelector":[],"replicaCount":1,"resources":{"limits":{"cpu":"2000m","memory":"4096Mi"},"requests":{"cpu":"500m","memory":"2048Mi"}},"rollingMaxSurge":"100%","rollingMaxUnavailable":"25%","serviceAccountName":"istio-pilot-service-account","sidecar":true,"tolerations":[],"traceSampling":1},"prometheus":{"enabled":false},"security":{"enabled":false},"serviceAccountName":"istio-multi","sidecarInjectorWebhook":{"alwaysInjectSelector":[],"automountServiceAccountToken":true,"createServiceAccount":true,"enableNamespacesByDefault":false,"enabled":true,"env":{"ESTATE":"updated_by_firebom","SETTINGS_PATH":"updated_by_firebom","SETTINGS_SUPERPOD":"-"},"global":{"arch":{"amd64":2,"ppc64le":2,"s390x":2},"certificates":[],"configValidation":false,"controlPlaneSecurityEnabled":true,"customCertificates":{"ca":{"certPath":"cacerts.pem","mountPath":"/etc/identity/ca","volumeName":"ca"},"client":{"certPath":"certificates/client.pem","keyPath":"keys/client-key.pem","mountPath":"/etc/identity/client","volumeName":"clientcert"},"enabled":true,"server":{"certPath":"certificates/server.pem","keyPath":"keys/server-key.pem","mountPath":"/etc/identity/server","volumeName":"servercert"}},"defaultNodeSelector":{},"defaultPodDisruptionBudget":{"enabled":false},"defaultResources":{"requests":{"cpu":"10m"}},"defaultTolerations":[],"disablePolicyChecks":true,"enableHelmTest":false,"enableTracing":false,"hub":"791719295754.dkr.ecr.us-east-2.amazonaws.com/sfci/servicemesh/istio-packaging","imagePullPolicy":"IfNotPresent","imagePullSecrets":null,"istioNamespace":"mesh-control-plane","k8sIngress":{"enableHttps":false,"enabled":false,"gatewayName":"ingressgateway"},"localityLbSetting":{"enabled":true},"logging":{"level":"default:warn"},"meshExpansion":{"enabled":false,"useILB":false},"meshID":"","meshNetworks":{},"metricsScraper":{"enabled":true,"funnel":{"host":"ajnafunneldirecttls.funnel.svc.mesh.sfdc.net","port":7442},"hub":"791719295754.dkr.ecr.us-east-2.amazonaws.com/sfci/servicemesh/servicemesh/metrics-scraper","resources":{"limits":{"cpu":"2000m","memory":"2048Mi"},"requests":{"cpu":"100m","memory":"512Mi"}},"tag":"4749a2d1bcb74c2325daf80e4bb0ba80724316f9"},"monitoringPort":15014,"mtls":{"auto":true,"enabled":false},"multiCluster":{"clusterName":"","enabled":false},"network":"","oneNamespace":false,"operatorManageWebhooks":false,"outboundTrafficPolicy":{"mode":"ALLOW_ANY"},"policyCheckFailOpen":false,"priorityClassName":"","proxy":{"accessLogEncoding":"TEXT","accessLogFile":"/dev/stdout","accessLogFormat":"","adminPort":15373,"autoInject":"disabled","clusterDomain":"cluster.local","componentLogLevel":"","concurrency":0,"dnsRefreshRate":"300s","enableCoreDump":false,"enableCoreDumpImage":"ubuntu:xenial","env":{"ISTIO_META_TLS_CLIENT_CERT_CHAIN":"/etc/identity/client/certificates/client.pem","ISTIO_META_TLS_CLIENT_KEY":"/etc/identity/client/keys/client-key.pem","ISTIO_META_TLS_CLIENT_ROOT_CERT":"/etc/identity/ca/cacerts.pem","ISTIO_META_TLS_SERVER_CERT_CHAIN":"/etc/identity/server/certificates/server.pem","ISTIO_META_TLS_SERVER_KEY":"/etc/identity/server/keys/server-key.pem","ISTIO_META_TLS_SERVER_ROOT_CERT":"/etc/identity/ca/cacerts.pem"},"envoyAccessLogService":{"enabled":false,"host":null,"port":null,"tcpKeepalive":{"interval":"10s","probes":3,"time":"10s"},"tlsSettings":{"caCertificates":null,"clientCertificate":null,"mode":"DISABLE","privateKey":null,"sni":null,"subjectAltNames":[]}},"envoyMetricsService":{"enabled":true,"host":"metrics-service.service-mesh","port":15001,"tcpKeepalive":{"interval":"10s","probes":3,"time":"10s"},"tlsSettings":{"caCertificates":"/etc/identity/ca/cacerts.pem","clientCertificate":"/etc/identity/client/certificates/client.pem","mode":"MUTUAL","privateKey":"/etc/identity/client/keys/client-key.pem","sni":null,"subjectAltNames":[]}},"envoyStatsd":{"enabled":false,"host":null,"port":null},"excludeIPRanges":"","excludeInboundPorts":"","excludeOutboundPorts":"","image":"proxy","includeIPRanges":"127.1.2.3/32","includeInboundPorts":"*","init":{"resources":{"limits":{"cpu":"100m","memory":"50Mi"},"requests":{"cpu":"10m","memory":"10Mi"}}},"kubevirtInterfaces":"","listenPort":15002,"logLevel":"info","privileged":false,"protocolDetectionTimeout":"100ms","readinessFailureThreshold":30,"readinessInitialDelaySeconds":1,"readinessPeriodSeconds":2,"resources":{"limits":{"cpu":"2000m","memory":"1024Mi"},"requests":{"cpu":"100m","memory":"128Mi"}},"statusPort":15020,"tracer":"zipkin"},"proxy_init":{"image":"proxy"},"sds":{"enabled":false,"token":{"aud":"istio-ca"},"udsPath":"","useNormalJwt":false,"useTrustworthyJwt":false},"securityContext":{"fsGroup":7447,"runAsNonRoot":true,"runAsUser":7447},"tag":"4560429101a9e635e4fa9e5d5f14feae98c17d20","tracer":{"datadog":{"address":"$(HOST_IP):8126"},"lightstep":{"accessToken":"","address":"","cacertPath":"","secure":true},"stackdriver":{"debug":false,"maxNumberOfAnnotations":200,"maxNumberOfAttributes":200,"maxNumberOfMessageEvents":200},"zipkin":{"address":""}},"trustDomain":"","trustDomainAliases":[],"useMCP":false},"image":"sidecar_injector","injectedAnnotations":{},"neverInjectSelector":[],"nodeSelector":{},"podAnnotations":{},"podAntiAffinityLabelSelector":[],"podAntiAffinityTermLabelSelector":[],"replicaCount":1,"rewriteAppHTTPProbe":false,"rollingMaxSurge":"100%","rollingMaxUnavailable":"25%","serviceAccountName":"istio-sidecar-injector-service-account","tolerations":[]},"tracing":{"enabled":false}}'
kind: ConfigMap
metadata:
  annotations:
    strategy.spinnaker.io/versioned: "false"
  labels:
    app: istio
    chart: istio
    heritage: Tiller
    istio: sidecar-injector
    release: RELEASE-NAME
  name: istio-sidecar-injector
  namespace: mesh-control-plane
---
apiVersion: v1
data:
  mesh: |-
    # Set the following variable to true to disable policy checks by Mixer.
    # Note that metrics will still be reported to Mixer.
    disablePolicyChecks: true

    disableMixerHttpReports: true
    # reportBatchMaxEntries is the number of requests that are batched before telemetry data is sent to the mixer server
    reportBatchMaxEntries: 100
    # reportBatchMaxTime is the max waiting time before the telemetry data of a request is sent to the mixer server
    reportBatchMaxTime: 1s

    # Set enableTracing to false to disable request tracing.
    enableTracing: false

    # Set accessLogFile to empty string to disable access log.
    accessLogFile: "/dev/stdout"

    # If accessLogEncoding is TEXT, value will be used directly as the log format
    # example: "[%START_TIME%] %REQ(:METHOD)% %REQ(X-ENVOY-ORIGINAL-PATH?:PATH)% %PROTOCOL%\n"
    # If AccessLogEncoding is JSON, value will be parsed as map[string]string
    # example: '{"start_time": "%START_TIME%", "req_method": "%REQ(:METHOD)%"}'
    # Leave empty to use default log format
    accessLogFormat: ""

    # Set accessLogEncoding to JSON or TEXT to configure sidecar access log
    accessLogEncoding: 'TEXT'

    enableEnvoyAccessLogService: false
    # Let Pilot give ingresses the public IP of the Istio ingressgateway
    ingressService: istio-ingressgateway

    # Default connect timeout for dynamic clusters generated by Pilot and returned via XDS
    connectTimeout: 10s

    # Automatic protocol detection uses a set of heuristics to
    # determine whether the connection is using TLS or not (on the
    # server side), as well as the application protocol being used
    # (e.g., http vs tcp). These heuristics rely on the client sending
    # the first bits of data. For server first protocols like MySQL,
    # MongoDB, etc., Envoy will timeout on the protocol detection after
    # the specified period, defaulting to non mTLS plain TCP
    # traffic. Set this field to tweak the period that Envoy will wait
    # for the client to send the first bits of data. (MUST BE >=1ms)
    protocolDetectionTimeout: 100ms

    # DNS refresh rate for Envoy clusters of type STRICT_DNS
    dnsRefreshRate: 300s

    # Unix Domain Socket through which envoy communicates with NodeAgent SDS to get
    # key/cert for mTLS. Use secret-mount files instead of SDS if set to empty.
    sdsUdsPath: ""

    # The trust domain corresponds to the trust root of a system.
    # Refer to https://github.com/spiffe/spiffe/blob/master/standards/SPIFFE-ID.md#21-trust-domain
    trustDomain: ""

    #  The trust domain aliases represent the aliases of trust_domain.
    #  For example, if we have
    #  trustDomain: td1
    #  trustDomainAliases: [“td2”, "td3"]
    #  Any service with the identity "td1/ns/foo/sa/a-service-account", "td2/ns/foo/sa/a-service-account",
    #  or "td3/ns/foo/sa/a-service-account" will be treated the same in the Istio mesh.
    trustDomainAliases:

    # If true, automatically configure client side mTLS settings to match the corresponding service's
    # server side mTLS authentication policy, when destination rule for that service does not specify
    # TLS settings.
    enableAutoMtls: true

    # Set the default behavior of the sidecar for handling outbound traffic from the application:
    # ALLOW_ANY - outbound traffic to unknown destinations will be allowed, in case there are no
    #   services or ServiceEntries for the destination port
    # REGISTRY_ONLY - restrict outbound traffic to services defined in the service registry as well
    #   as those defined through ServiceEntries
    outboundTrafficPolicy:
      mode: ALLOW_ANY
    localityLbSetting:
      enabled: true
    # The namespace to treat as the administrative root namespace for istio
    # configuration.
    rootNamespace: mesh-control-plane

    # Configures DNS certificates provisioned through Chiron linked into Pilot.
    certificates:
      []

    # The port proxy listens on for iptables redirected packets.
    proxyListenPort: 15002

    defaultConfig:
      #
      # TCP connection timeout between Envoy & the application, and between Envoys.  Used for static clusters
      # defined in Envoy's configuration file
      connectTimeout: 10s
      #
      ### ADVANCED SETTINGS #############
      # Where should envoy's configuration be stored in the istio-proxy container
      configPath: "/etc/istio/proxy"
      binaryPath: "/usr/local/bin/envoy"
      # The pseudo service name used for Envoy.
      serviceCluster: istio-proxy
      # These settings that determine how long an old Envoy
      # process should be kept alive after an occasional reload.
      drainDuration: 45s
      parentShutdownDuration: 1m0s
      #
      # The mode used to redirect inbound connections to Envoy. This setting
      # has no effect on outbound traffic: iptables REDIRECT is always used for
      # outbound connections.
      # If "REDIRECT", use iptables REDIRECT to NAT and redirect to Envoy.
      # The "REDIRECT" mode loses source addresses during redirection.
      # If "TPROXY", use iptables TPROXY to redirect to Envoy.
      # The "TPROXY" mode preserves both the source and destination IP
      # addresses and ports, so that they can be used for advanced filtering
      # and manipulation.
      # The "TPROXY" mode also configures the sidecar to run with the
      # CAP_NET_ADMIN capability, which is required to use TPROXY.
      interceptionMode: REDIRECT
      #
      # Port where Envoy listens (on local host) for admin commands
      # You can exec into the istio-proxy container in a pod and
      # curl the admin port (curl http://localhost:15000/) to obtain
      # diagnostic information from Envoy. See
      # https://lyft.github.io/envoy/docs/operations/admin.html
      # for more details
      proxyAdminPort: 15373
      #
      # Set concurrency to a specific number to control the number of Proxy worker threads.
      # If set to 0 (default), then start worker thread for each CPU thread/core.
      concurrency: 0
      #
      tracing:
        zipkin:
          # Address of the Zipkin collector
          address: zipkin.mesh-control-plane:9411
      #
      # Envoy's Metrics Service stats sink pushes Envoy metrics to a remote collector via the Metrics Service gRPC API.
      envoyMetricsService:
        address: metrics-service.service-mesh:15001
        tlsSettings:
          caCertificates: /etc/identity/ca/cacerts.pem
          clientCertificate: /etc/identity/client/certificates/client.pem
          mode: MUTUAL
          privateKey: /etc/identity/client/keys/client-key.pem
          sni: null
          subjectAltNames: []
        tcpKeepalive:
          interval: 10s
          probes: 3
          time: 10s
      #
      # Mutual TLS authentication between sidecars and istio control plane.
      controlPlaneAuthPolicy: MUTUAL_TLS
      #
      # Address where istio Pilot service is running
      discoveryAddress: istio-pilot.mesh-control-plane:15011
  meshNetworks: 'networks: {}'
kind: ConfigMap
metadata:
  annotations:
    strategy.spinnaker.io/versioned: "false"
  labels:
    app: istio
    chart: istio
    heritage: Tiller
    release: RELEASE-NAME
  name: istio
  namespace: mesh-control-plane
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: nlb
  labels:
    app: istio-ingressgateway
    chart: gateways
    heritage: Tiller
    istio: ingressgateway
    release: RELEASE-NAME
  name: istio-ingressgateway
  namespace: mesh-control-plane
spec:
  ports:
  - name: https-core-443
    port: 443
  - name: https-core-8443
    port: 8443
  - name: https-core-8085
    port: 8085
  - name: tcp-core-2525
    port: 2525
  selector:
    app: istio-ingressgateway
    istio: ingressgateway
    release: RELEASE-NAME
  type: LoadBalancer
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: pilot
    chart: pilot
    heritage: Tiller
    istio: pilot
    release: RELEASE-NAME
  name: istio-pilot
  namespace: mesh-control-plane
spec:
  ports:
  - name: grpc-xds
    port: 15010
  - name: https-xds
    port: 15011
  - name: http-legacy-discovery
    port: 8080
  - name: http-monitoring
    port: 15014
  selector:
    istio: pilot
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: sidecarInjectorWebhook
    chart: sidecarInjectorWebhook
    heritage: Tiller
    istio: sidecar-injector
    release: RELEASE-NAME
  name: istio-sidecar-injector
  namespace: mesh-control-plane
spec:
  ports:
  - name: https-inject
    port: 443
    targetPort: 15009
  - name: http-monitoring
    port: 15014
  selector:
    istio: sidecar-injector
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: istio-ingressgateway
    chart: gateways
    heritage: Tiller
    istio: ingressgateway
    release: RELEASE-NAME
  name: istio-ingressgateway
  namespace: mesh-control-plane
spec:
  replicas: 1
  selector:
    matchLabels:
      app: istio-ingressgateway
      istio: ingressgateway
  strategy:
    rollingUpdate:
      maxSurge: 100%
      maxUnavailable: 25%
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
      labels:
        app: istio-ingressgateway
        chart: gateways
        heritage: Tiller
        istio: ingressgateway
        release: RELEASE-NAME
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - amd64
            weight: 2
          - preference:
              matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - ppc64le
            weight: 2
          - preference:
              matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - s390x
            weight: 2
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - amd64
                - ppc64le
                - s390x
      automountServiceAccountToken: true
      containers:
      - args:
        - proxy
        - router
        - --domain
        - $(POD_NAMESPACE).svc.cluster.local
        - --proxyLogLevel=info
        - --log_output_level=default:warn
        - --drainDuration
        - 45s
        - --parentShutdownDuration
        - 1m0s
        - --connectTimeout
        - 10s
        - --serviceCluster
        - istio-ingressgateway
        - --zipkinAddress
        - zipkin.mesh-control-plane:9411
        - --envoyMetricsService
        - '{"address":"metrics-service.service-mesh:15001","tlsSettings":{"caCertificates":"/etc/identity/ca/cacerts.pem","clientCertificate":"/etc/identity/client/certificates/client.pem","mode":"MUTUAL","privateKey":"/etc/identity/client/keys/client-key.pem","sni":null,"subjectAltNames":[]},"tcpKeepalive":{"interval":"10s","probes":3,"time":"10s"}}'
        - --proxyAdminPort
        - "15373"
        - --statusPort
        - "15020"
        - --controlPlaneAuthPolicy
        - MUTUAL_TLS
        - --discoveryAddress
        - istio-pilot.mesh-control-plane:15011
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: INSTANCE_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.podIP
        - name: HOST_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        - name: SERVICE_ACCOUNT
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: ISTIO_AUTO_MTLS_ENABLED
          value: "true"
        - name: ISTIO_META_POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: ISTIO_META_CONFIG_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: ISTIO_METAJSON_LABELS
          value: |
            {"app":"istio-ingressgateway","chart":"gateways","heritage":"Tiller","istio":"ingressgateway","release":"RELEASE-NAME"}
        - name: ISTIO_META_CLUSTER_ID
          value: Kubernetes
        - name: SDS_ENABLED
          value: "false"
        - name: ISTIO_META_WORKLOAD_NAME
          value: istio-ingressgateway
        - name: ISTIO_META_OWNER
          value: kubernetes://api/apps/v1/namespaces/mesh-control-plane/deployments/istio-ingressgateway
        - name: ESTATE
          value: updated_by_firebom
        - name: ISTIO_BOOTSTRAP
          value: /var/lib/istio/envoy/envoy_bootstrap_tmpl_sfdc_falcon.json
        - name: ISTIO_META_ROUTER_MODE
          value: standard
        - name: ISTIO_META_TLS_CLIENT_CERT_CHAIN
          value: /etc/identity/client/certificates/client.pem
        - name: ISTIO_META_TLS_CLIENT_KEY
          value: /etc/identity/client/keys/client-key.pem
        - name: ISTIO_META_TLS_CLIENT_ROOT_CERT
          value: /etc/identity/ca/cacerts.pem
        - name: ISTIO_META_TLS_SERVER_CERT_CHAIN
          value: /etc/identity/server/certificates/server.pem
        - name: ISTIO_META_TLS_SERVER_KEY
          value: /etc/identity/server/keys/server-key.pem
        - name: ISTIO_META_TLS_SERVER_ROOT_CERT
          value: /etc/identity/ca/cacerts.pem
        - name: SETTINGS_PATH
          value: updated_by_firebom
        - name: SETTINGS_SUPERPOD
          value: '-'
        image: 791719295754.dkr.ecr.us-east-2.amazonaws.com/sfci/servicemesh/istio-packaging/proxy:4560429101a9e635e4fa9e5d5f14feae98c17d20
        imagePullPolicy: IfNotPresent
        name: istio-proxy
        ports:
        - containerPort: 443
        - containerPort: 8443
        - containerPort: 8085
        - containerPort: 2525
        - containerPort: 15090
          name: http-envoy-prom
          protocol: TCP
        readinessProbe:
          failureThreshold: 30
          httpGet:
            path: /healthz/ready
            port: 15020
            scheme: HTTP
          initialDelaySeconds: 1
          periodSeconds: 2
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            cpu: 2000m
            memory: 1024Mi
          requests:
            cpu: 100m
            memory: 128Mi
        securityContext:
          runAsNonRoot: false
          runAsUser: 0
        volumeMounts:
        - mountPath: /etc/certs
          name: istio-certs
          readOnly: true
      securityContext:
        fsGroup: 7447
        runAsNonRoot: true
        runAsUser: 7447
      serviceAccountName: istio-ingressgateway-service-account
      volumes:
      - name: istio-certs
        secret:
          optional: true
          secretName: istio.istio-ingressgateway-service-account
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: pilot
    chart: pilot
    heritage: Tiller
    istio: pilot
    release: RELEASE-NAME
  name: istio-pilot
  namespace: mesh-control-plane
spec:
  replicas: 1
  selector:
    matchLabels:
      istio: pilot
  strategy:
    rollingUpdate:
      maxSurge: 100%
      maxUnavailable: 25%
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
      labels:
        app: pilot
        chart: pilot
        heritage: Tiller
        istio: pilot
        release: RELEASE-NAME
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - amd64
            weight: 2
          - preference:
              matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - ppc64le
            weight: 2
          - preference:
              matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - s390x
            weight: 2
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - amd64
                - ppc64le
                - s390x
      automountServiceAccountToken: true
      containers:
      - args:
        - discovery
        - --registries=Kubernetes
        - --monitoringAddr=:15014
        - --log_output_level=default:warn
        - --domain
        - cluster.local
        - --secureGrpcAddr
        - ""
        - --keepaliveMaxServerConnectionAge
        - 30m
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: ESTATE
          value: updated_by_firebom
        - name: PILOT_ENABLE_REDIS_FILTER
          value: "true"
        - name: PILOT_PUSH_THROTTLE
          value: "100"
        - name: PILOT_SIDECAR_USE_REMOTE_ADDRESS
          value: "true"
        - name: SETTINGS_PATH
          value: updated_by_firebom
        - name: SETTINGS_SUPERPOD
          value: '-'
        - name: PILOT_TRACE_SAMPLING
          value: "1"
        - name: PILOT_ENABLE_PROTOCOL_SNIFFING_FOR_OUTBOUND
          value: "true"
        - name: PILOT_ENABLE_PROTOCOL_SNIFFING_FOR_INBOUND
          value: "true"
        image: 791719295754.dkr.ecr.us-east-2.amazonaws.com/sfci/servicemesh/istio-packaging/pilot:4560429101a9e635e4fa9e5d5f14feae98c17d20
        imagePullPolicy: IfNotPresent
        name: discovery
        ports:
        - containerPort: 8080
        - containerPort: 15010
        readinessProbe:
          httpGet:
            path: /ready
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 5
        resources:
          limits:
            cpu: 2000m
            memory: 4096Mi
          requests:
            cpu: 500m
            memory: 2048Mi
        volumeMounts:
        - mountPath: /etc/istio/config
          name: config-volume
      - args:
        - proxy
        - --domain
        - $(POD_NAMESPACE).svc.cluster.local
        - --serviceCluster
        - istio-pilot
        - --templateFile
        - /etc/istio/proxy/envoy_pilot.yaml.tmpl
        - --controlPlaneAuthPolicy
        - MUTUAL_TLS
        - --proxyLogLevel=info
        - --log_output_level=default:warn
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: INSTANCE_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.podIP
        - name: ISTIO_META_TLS_CLIENT_CERT_CHAIN
          value: /etc/identity/client/certificates/client.pem
        - name: ISTIO_META_TLS_CLIENT_KEY
          value: /etc/identity/client/keys/client-key.pem
        - name: ISTIO_META_TLS_CLIENT_ROOT_CERT
          value: /etc/identity/ca/cacerts.pem
        - name: ISTIO_META_TLS_SERVER_CERT_CHAIN
          value: /etc/identity/server/certificates/server.pem
        - name: ISTIO_META_TLS_SERVER_KEY
          value: /etc/identity/server/keys/server-key.pem
        - name: ISTIO_META_TLS_SERVER_ROOT_CERT
          value: /etc/identity/ca/cacerts.pem
        - name: SDS_ENABLED
          value: "false"
        image: 791719295754.dkr.ecr.us-east-2.amazonaws.com/sfci/servicemesh/istio-packaging/proxy:4560429101a9e635e4fa9e5d5f14feae98c17d20
        imagePullPolicy: IfNotPresent
        name: istio-proxy
        ports:
        - containerPort: 15003
        - containerPort: 15005
        - containerPort: 15007
        - containerPort: 15011
        resources:
          limits:
            cpu: 2000m
            memory: 1024Mi
          requests:
            cpu: 100m
            memory: 128Mi
        securityContext:
          runAsUser: 1337
        volumeMounts: null
      - args:
        - --debug-mode
        - "true"
        - --funnel-address
        - ajnafunneldirecttls.funnel.svc.mesh.sfdc.net:7442
        - --alt-tags
        - cluster=svccluster
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: ESTATE
          value: updated_by_firebom
        - name: PILOT_ENABLE_REDIS_FILTER
          value: "true"
        - name: PILOT_PUSH_THROTTLE
          value: "100"
        - name: PILOT_SIDECAR_USE_REMOTE_ADDRESS
          value: "true"
        - name: SETTINGS_PATH
          value: updated_by_firebom
        - name: SETTINGS_SUPERPOD
          value: '-'
        image: 791719295754.dkr.ecr.us-east-2.amazonaws.com/sfci/servicemesh/servicemesh/metrics-scraper:4749a2d1bcb74c2325daf80e4bb0ba80724316f9
        imagePullPolicy: IfNotPresent
        name: metrics-scraper
        readinessProbe:
          exec:
            command:
            - /bin/true
          initialDelaySeconds: 5
          periodSeconds: 30
          timeoutSeconds: 5
        resources:
          limits:
            cpu: 2000m
            memory: 2048Mi
          requests:
            cpu: 100m
            memory: 512Mi
      initContainers:
      - args:
        - -p
        - "15002"
        - -z
        - "15006"
        - -u
        - "1337"
        - -m
        - REDIRECT
        - -i
        - 127.1.2.3/32
        - -x
        - ""
        - -b
        - ""
        - -d
        - 15010,15011
        env:
        - name: DISABLE_REDIRECTION_ON_LOCAL_LOOPBACK
          value: "1"
        image: 791719295754.dkr.ecr.us-east-2.amazonaws.com/sfci/servicemesh/istio-packaging/proxy:4560429101a9e635e4fa9e5d5f14feae98c17d20
        imagePullPolicy: IfNotPresent
        name: istio-init
        resources:
          limits:
            cpu: 100m
            memory: 50Mi
          requests:
            cpu: 10m
            memory: 10Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
          runAsNonRoot: false
          runAsUser: 0
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      securityContext:
        fsGroup: 7447
        runAsNonRoot: true
        runAsUser: 7447
      serviceAccountName: istio-pilot-service-account
      volumes:
      - configMap:
          name: istio
        name: config-volume
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: sidecarInjectorWebhook
    chart: sidecarInjectorWebhook
    heritage: Tiller
    istio: sidecar-injector
    release: RELEASE-NAME
  name: istio-sidecar-injector
  namespace: mesh-control-plane
spec:
  replicas: 1
  selector:
    matchLabels:
      istio: sidecar-injector
  strategy:
    rollingUpdate:
      maxSurge: 100%
      maxUnavailable: 25%
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
      labels:
        app: sidecarInjectorWebhook
        chart: sidecarInjectorWebhook
        heritage: Tiller
        istio: sidecar-injector
        release: RELEASE-NAME
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - amd64
            weight: 2
          - preference:
              matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - ppc64le
            weight: 2
          - preference:
              matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - s390x
            weight: 2
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - amd64
                - ppc64le
                - s390x
      automountServiceAccountToken: true
      containers:
      - args:
        - --caCertFile=/etc/identity/ca/cacerts.pem
        - --tlsCertFile=/etc/identity/server/certificates/server.pem
        - --tlsKeyFile=/etc/identity/server/keys/server-key.pem
        - --injectConfig=/etc/istio/inject/config
        - --meshConfig=/etc/istio/config/mesh
        - --healthCheckInterval=2s
        - --port=15009
        - --healthCheckFile=/tmp/health
        - --reconcileWebhookConfig=true
        image: 791719295754.dkr.ecr.us-east-2.amazonaws.com/sfci/servicemesh/istio-packaging/sidecar_injector:4560429101a9e635e4fa9e5d5f14feae98c17d20
        imagePullPolicy: IfNotPresent
        livenessProbe:
          exec:
            command:
            - /usr/local/bin/sidecar-injector
            - probe
            - --probe-path=/tmp/health
            - --interval=4s
          initialDelaySeconds: 4
          periodSeconds: 4
        name: sidecar-injector-webhook
        readinessProbe:
          exec:
            command:
            - /usr/local/bin/sidecar-injector
            - probe
            - --probe-path=/tmp/health
            - --interval=4s
          initialDelaySeconds: 4
          periodSeconds: 4
        resources:
          requests:
            cpu: 10m
        volumeMounts:
        - mountPath: /etc/istio/config
          name: config-volume
          readOnly: true
        - mountPath: /etc/istio/inject
          name: inject-config
          readOnly: true
      - args:
        - --debug-mode
        - "true"
        - --funnel-address
        - ajnafunneldirecttls.funnel.svc.mesh.sfdc.net:7442
        - --alt-tags
        - cluster=svccluster
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: ESTATE
          value: updated_by_firebom
        - name: SETTINGS_PATH
          value: updated_by_firebom
        - name: SETTINGS_SUPERPOD
          value: '-'
        image: 791719295754.dkr.ecr.us-east-2.amazonaws.com/sfci/servicemesh/servicemesh/metrics-scraper:4749a2d1bcb74c2325daf80e4bb0ba80724316f9
        imagePullPolicy: IfNotPresent
        name: metrics-scraper
        readinessProbe:
          exec:
            command:
            - /bin/true
          initialDelaySeconds: 5
          periodSeconds: 30
          timeoutSeconds: 5
        resources:
          limits:
            cpu: 2000m
            memory: 2048Mi
          requests:
            cpu: 100m
            memory: 512Mi
      - args:
        - proxy
        - sidecar
        - --domain
        - $(POD_NAMESPACE).svc.cluster.local
        - --configPath
        - /etc/istio/proxy
        - --binaryPath
        - /usr/local/bin/envoy
        - --serviceCluster
        - istio-sidecar-injector.$(POD_NAMESPACE)
        - --drainDuration
        - 45s
        - --parentShutdownDuration
        - 1m0s
        - --connectTimeout
        - 10s
        - --zipkinAddress
        - zipkin.mesh-control-plane:9411
        - --envoyMetricsService
        - '{"address":"metrics-service.service-mesh:15001","tlsSettings":{"caCertificates":"/etc/identity/ca/cacerts.pem","clientCertificate":"/etc/identity/client/certificates/client.pem","mode":"MUTUAL","privateKey":"/etc/identity/client/keys/client-key.pem","sni":null,"subjectAltNames":[]},"tcpKeepalive":{"interval":"10s","probes":3,"time":"10s"}}'
        - --proxyAdminPort
        - "15373"
        - --statusPort
        - "15020"
        - --proxyLogLevel=info
        - --dnsRefreshRate
        - 300s
        - --controlPlaneAuthPolicy
        - MUTUAL_TLS
        - --discoveryAddress
        - istio-pilot.mesh-control-plane:15011
        - --controlPlaneBootstrap=false
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: ISTIO_META_CLUSTER_ID
          value: updated_by_firebom
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: INSTANCE_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: SERVICE_ACCOUNT
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: ISTIO_AUTO_MTLS_ENABLED
          value: "true"
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: ISTIO_META_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: ISTIO_META_CONFIG_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: SDS_ENABLED
          value: "false"
        - name: ISTIO_META_INTERCEPTION_MODE
          value: REDIRECT
        - name: ISTIO_METAJSON_LABELS
          value: '{"settings_path": "updated_by_firebom", "superpod":"-"}'
        - name: ISTIO_META_TLS_CLIENT_CERT_CHAIN
          value: /etc/identity/client/certificates/client.pem
        - name: ISTIO_META_TLS_CLIENT_KEY
          value: /etc/identity/client/keys/client-key.pem
        - name: ISTIO_META_TLS_CLIENT_ROOT_CERT
          value: /etc/identity/ca/cacerts.pem
        - name: ISTIO_META_TLS_SERVER_CERT_CHAIN
          value: /etc/identity/server/certificates/server.pem
        - name: ISTIO_META_TLS_SERVER_KEY
          value: /etc/identity/server/keys/server-key.pem
        - name: ISTIO_META_TLS_SERVER_ROOT_CERT
          value: /etc/identity/ca/cacerts.pem
        - name: ISTIO_META_hostname
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: ISTIO_META_namespace
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: 791719295754.dkr.ecr.us-east-2.amazonaws.com/sfci/servicemesh/istio-packaging/proxy:4560429101a9e635e4fa9e5d5f14feae98c17d20
        imagePullPolicy: IfNotPresent
        name: istio-proxy
        resources:
          limits:
            cpu: 2000m
            memory: 1024Mi
          requests:
            cpu: 100m
            memory: 128Mi
        securityContext:
          runAsUser: 1337
        volumeMounts: null
      initContainers:
      - args:
        - -p
        - "15002"
        - -z
        - "15006"
        - -u
        - "1337"
        - -m
        - REDIRECT
        - -i
        - 127.1.2.3/32
        - -x
        - ""
        - -b
        - ""
        - -d
        - ""
        env:
        - name: DISABLE_REDIRECTION_ON_LOCAL_LOOPBACK
          value: "1"
        image: 791719295754.dkr.ecr.us-east-2.amazonaws.com/sfci/servicemesh/istio-packaging/proxy:4560429101a9e635e4fa9e5d5f14feae98c17d20
        imagePullPolicy: IfNotPresent
        name: istio-init
        resources:
          limits:
            cpu: 100m
            memory: 50Mi
          requests:
            cpu: 10m
            memory: 10Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
          runAsNonRoot: false
          runAsUser: 0
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      securityContext:
        fsGroup: 7447
        runAsNonRoot: true
        runAsUser: 7447
      serviceAccountName: istio-sidecar-injector-service-account
      volumes:
      - configMap:
          name: istio
        name: config-volume
      - configMap:
          items:
          - key: config
            path: config
          - key: values
            path: values
          name: istio-sidecar-injector
        name: inject-config
---
apiVersion: batch/v1
kind: Job
metadata:
  name: istio-init-crd-all-93992746ef0add6bb415af63b83d8284
  namespace: mesh-control-plane
spec:
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
      labels: null
    spec:
      automountServiceAccountToken: true
      containers:
      - command:
        - kubectl
        - apply
        - -f
        - /etc/istio/crd-all/crd-all.gen.yaml
        image: 791719295754.dkr.ecr.us-east-2.amazonaws.com/sfci/servicemesh/istio-packaging/kubectl:93992746ef0add6bb415af63b83d8284d9f38247
        imagePullPolicy: IfNotPresent
        name: istio-init-crd-all
        resources:
          limits:
            cpu: 100m
            memory: 200Mi
          requests:
            cpu: 10m
            memory: 50Mi
        volumeMounts:
        - mountPath: /etc/istio/crd-all
          name: crd-all
          readOnly: true
      nodeSelector:
        pool: mcpIstioConfig.istioEstate
      restartPolicy: OnFailure
      securityContext:
        fsGroup: 7447
        runAsNonRoot: true
        runAsUser: 7447
      serviceAccountName: istio-init-service-account
      volumes:
      - configMap:
          name: istio-crd-all
        name: crd-all
---
apiVersion: batch/v1
kind: Job
metadata:
  name: istio-init-crd-mixer-93992746ef0add6bb415af63b83d8284
  namespace: mesh-control-plane
spec:
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
      labels: null
    spec:
      automountServiceAccountToken: true
      containers:
      - command:
        - kubectl
        - apply
        - -f
        - /etc/istio/crd-mixer/crd-mixer.yaml
        image: 791719295754.dkr.ecr.us-east-2.amazonaws.com/sfci/servicemesh/istio-packaging/kubectl:93992746ef0add6bb415af63b83d8284d9f38247
        imagePullPolicy: IfNotPresent
        name: istio-init-crd-mixer
        resources:
          limits:
            cpu: 100m
            memory: 200Mi
          requests:
            cpu: 10m
            memory: 50Mi
        volumeMounts:
        - mountPath: /etc/istio/crd-mixer
          name: crd-mixer
          readOnly: true
      nodeSelector:
        pool: mcpIstioConfig.istioEstate
      restartPolicy: OnFailure
      securityContext:
        fsGroup: 7447
        runAsNonRoot: true
        runAsUser: 7447
      serviceAccountName: istio-init-service-account
      volumes:
      - configMap:
          name: istio-crd-mixer
        name: crd-mixer
