receivers:
  prometheus:
    config:
      global:
        scrape_interval: 60s
        scrape_timeout: 8s
      scrape_configs:
        - job_name: kube-apiserver
          scrape_interval: 60s
          metrics_path: /metrics
          scheme: https
          static_configs:
<%- if ENV.key?('KUBERNETES_SERVICE_HOST') and ENV.key?('KUBERNETES_SERVICE_PORT') -%>
            - targets: ["<%= ENV['KUBERNETES_SERVICE_HOST'] %>:<%= ENV['KUBERNETES_SERVICE_PORT'] %>"]
<%- else
STDERR.puts('warning! cannot find KUBERNETES_SERVICE_HOST or KUBERNETES_SERVICE_PORT environment variables using defaults')
-%>
            - targets: ["kubernetes.default.svc:443"]
<%- end -%>
              labels:
                _service: kube-apiserver
          bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
          tls_config:
            ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          metric_relabel_configs: []

exporters:
  funnel:
    host: "<%= ENV['SFDC_METRICS_SERVICE_HOST'] %>"
    port: "<%= ENV['SFDC_METRICS_SERVICE_PORT'] %>"
    enable_mtls: false
    gzip: true
    labels:
      k8s_cluster: "<%= ENV['ESTATE'] %>"
      device: "<%= ENV['FUNCTION_INSTANCE_NAME'] %>"
      datacenter: "<%= ENV['KINGDOM'] %>"
      superpod: "<%= ENV['SUPERPOD'] %>"
      pod: "<%= ENV['POD'] %>"

zpages:
  port: 55679
