{
   "$id": "manifestConfigs",
   "Requirements_container": {
      "Required": {
         "required": [
            "name",
            "image"
         ]
      },
      "Unsupported": {
         "not": {
            "anyOf": [
               {
                  "required": [
                     "securitycontext"
                  ]
               },
               {
                  "required": [
                     "lifecycle"
                  ]
               }
            ]
         }
      }
   },
   "Requirements_env": {
      "Required": {
         "required": [
            "name",
            "value"
         ]
      }
   },
   "Requirements_functions": {
      "Required": {
         "required": [
            "name",
            "count",
            "containers"
         ]
      }
   },
   "Requirements_httpGet": {
      "Required": {
         "required": [
            "port"
         ]
      }
   },
   "Requirements_manifest": {
      "Required": {
         "required": [
            "apiVersion",
            "system"
         ]
      }
   },
   "Requirements_system": {
      "Required": {
         "required": [
            "functions"
         ]
      }
   },
   "Requirements_volumeMount": {
      "Required": {
         "required": [
            "name",
            "mountPath"
         ]
      },
      "Unsupported": {
         "not": {
            "anyOf": [
               {
                  "required": [
                     "subPath"
                  ]
               }
            ]
         }
      }
   },
   "Rule_envVariableName": {
      "EnvNamePatterns": {
         "allOf": [
            {
               "anyOf": [
                  {
                     "pattern": "^[A-Za-z_][A-Za-z0-9_]*$"
                  }
               ]
            },
            { }
         ]
      },
      "ReservedEnvName": {
         "not": {
            "enum": [
               "HOST_TYPE",
               "SFDC_METRICS_SERVICE_HOST",
               "SFDC_METRICS_SERVICE_PORT",
               "FUNCTION_NAMESPACE",
               "FUNCTION_INSTANCE_NAME",
               "FUNCTION_INSTANCE_IP",
               "SFDC_SETTINGS_PATH",
               "SFDC_SETTINGS_SUPERPOD",
               "KINGDOM",
               "ESTATE",
               "SUPERPOD",
               "FUNCTION"
            ]
         }
      }
   },
   "Rule_hostPathList": {
      "allOf": [
         {
            "anyOf": [
               {
                  "pattern": "^/data/([a-zA-Z-_]+/?)+$"
               },
               {
                  "pattern": "^/fastdata/([a-zA-Z-_]+/?)+$"
               },
               {
                  "pattern": "^/cowdata/([a-zA-Z-_]+/?)+$"
               },
               {
                  "pattern": "^/var/log/([a-zA-Z-_]+/?)+$"
               },
               {
                  "pattern": "^/home/caas/([a-zA-Z-_]+/?)+$"
               },
               {
                  "pattern": "^/home/sfdc-([a-zA-Z-_]+)([a-zA-Z-_]+/?)+$"
               }
            ]
         },
         {
            "not": {
               "anyOf": [
                  {
                     "pattern": "^(/data/certs).*$"
                  }
               ]
            }
         }
      ]
   },
   "Rule_imageForm": {
      "allOf": [
         {
            "anyOf": [
               {
                  "pattern": "^ops0-artifactrepo1-0-prd.data.sfdc.net/docker-sam/.+/.+:.+$"
               }
            ]
         },
         {
            "not": {
               "anyOf": [
                  {
                     "pattern": "^.*(latest)$"
                  },
                  {
                     "pattern": "^ops0-artifactrepo2-0-prd.data.sfdc.net/(docker-p2p|docker-sam).+:.+$"
                  }
               ]
            }
         }
      ]
   },
   "Rule_isDNSValidation": {
      "maxLength": 63,
      "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
   },
   "Rule_maddogValidation": {
      "dependencies": {
         "lbnames": {
            "properties": {
               "type": {
                  "enum": [
                     "server"
                  ]
               }
            }
         }
      },
      "properties": {
         "lbnames": {
            "type": "array"
         },
         "type": {
            "enum": [
               "server",
               "client"
            ]
         }
      },
      "required": [
         "type"
      ]
   },
   "Rule_reservedPorts": {
      "not": {
         "anyOf": [
            {
               "enum": [
                  2379,
                  2380,
                  4194,
                  8000,
                  8002,
                  8080,
                  9099,
                  9100,
                  10250,
                  10251,
                  10252,
                  10255,
                  64121
               ]
            },
            {
               "maximum": 1024,
               "minimum": 0
            },
            {
               "maximum": 40000,
               "minimum": 32000
            }
         ]
      }
   },
   "Rule_volumeMountValidation": {
      "MountPathPattern": {
         "allOf": [
            {
               "anyOf": [
                  {
                     "pattern": "^[^:]+$"
                  }
               ]
            },
            { }
         ]
      },
      "SecretVolume": {
         "if": {
            "anyOf": [
               {
                  "properties": {
                     "name": {
                        "enum": [
                           "secretvol"
                        ]
                     }
                  }
               },
               {
                  "properties": {
                     "mountPath": {
                        "enum": [
                           "/secrets/"
                        ]
                     }
                  }
               }
            ]
         },
         "then": {
            "allOf": [
               {
                  "required": [
                     "readOnly"
                  ]
               },
               {
                  "properties": {
                     "readOnly": {
                        "enum": [
                           true
                        ]
                     }
                  }
               }
            ]
         }
      }
   },
   "Rule_volumesFormat": {
      "anyOf": [
         {
            "additionalProperties": false,
            "properties": {
               "maddogCert": {
                  "allOf": [
                     {
                        "$ref": "#/Rule_maddogValidation"
                     }
                  ]
               },
               "name": {
                  "$ref": "#/Rule_isDNSValidation",
                  "type": "string"
               }
            }
         },
         {
            "additionalProperties": false,
            "patternProperties": {
               "^(k4aSecret)$|(secret)$": {
                  "properties": {
                     "secretName": {
                        "type": "string"
                     }
                  },
                  "required": [
                     "secretName"
                  ],
                  "type": "object"
               }
            },
            "properties": {
               "name": {
                  "$ref": "#/Rule_isDNSValidation",
                  "type": "string"
               }
            }
         },
         {
            "additionalProperties": false,
            "properties": {
               "hostPath": {
                  "properties": {
                     "path": {
                        "$ref": "#/Rule_hostPathList",
                        "type": "string"
                     }
                  },
                  "type": "object"
               },
               "name": {
                  "$ref": "#/Rule_isDNSValidation",
                  "type": "string"
               }
            }
         },
         {
            "additionalProperties": false,
            "properties": {
               "emptyDir": {
                  "additionalProperties": false,
                  "properties": { },
                  "type": "object"
               },
               "name": {
                  "$ref": "#/Rule_isDNSValidation",
                  "type": "string"
               }
            }
         }
      ]
   }
}
