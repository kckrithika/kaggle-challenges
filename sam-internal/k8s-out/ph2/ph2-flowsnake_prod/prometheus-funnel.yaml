apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    service: prometheus-scraper
  name: prometheus-scraper
  namespace: flowsnake
spec:
  minReadySeconds: 15
  replicas: 2
  selector:
    matchLabels:
      service: prometheus-scraper
  template:
    metadata:
      annotations:
        madkub.sam.sfdc.net/allcerts: '{"certreqs": [{"cert-type": "client", "kingdom":
          "ph2", "name": "prometheusscrapercerts", "role": "flowsnake_metrics"}]}'
      labels:
        apptype: monitoring
        flowsnakeOwner: dva-transform
        flowsnakeRole: PrometheusScraper
        name: prometheus-scraper
        service: prometheus-scraper
    spec:
      containers:
      - args:
        - --config.file=/etc/config/prometheus.json
        - --storage.tsdb.path=/prometheus-storage
        - --web.external-url=http://localhost/
        - --web.enable-lifecycle
        image: ops0-artifactrepo1-0-ph2.data.sfdc.net/dva/prome_for_k8s:36
        livenessProbe:
          httpGet:
            path: /metrics
            port: 9090
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
        name: prometheus
        ports:
        - containerPort: 9090
        volumeMounts:
        - mountPath: /prometheus-storage
          name: prometheus-storage-volume
        - mountPath: /etc/config
          name: prometheus-server-conf
        - mountPath: /etc/pki_service
          name: certs-volume
        - mountPath: /certs
          name: datacerts
      - args:
        - --serviceName=flowsnake
        - --subserviceName=NONE
        - --tagDefault=superpod:NONE
        - --tagDefault=datacenter:ph2
        - --tagDefault=estate:ph2-flowsnake_prod
        - --batchSize=512
        - --funnelUrl=http://ajna0-funnel1-0-ph2.data.sfdc.net:80
        image: ops0-artifactrepo1-0-ph2.data.sfdc.net/dva/funnel_writer:36
        livenessProbe:
          httpGet:
            path: /
            port: 8000
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
        name: funnel-writer
        ports:
        - containerPort: 8000
        volumeMounts:
        - mountPath: /prometheus-storage
          name: prometheus-storage-volume
        - mountPath: /certs
          name: datacerts
      - args:
        - /sam/madkub-client
        - --madkub-endpoint
        - https://10.254.208.254:32007
        - --maddog-endpoint
        - https://all.pkicontroller.pki.blank.ph2.prod.non-estates.sfdcsd.net:8443
        - --maddog-server-ca
        - /etc/pki_service/ca/security-ca.pem
        - --madkub-server-ca
        - /etc/pki_service/ca/cacerts.pem
        - --token-folder
        - /tokens
        - --kingdom
        - ph2
        - --superpod
        - None
        - --estate
        - ph2-flowsnake_prod
        - --refresher
        - --run-init-for-refresher-mode
        - --cert-folders
        - prometheusscrapercerts:/certs
        - --ca-folder
        - /etc/pki_service/ca
        - --funnel-endpoint
        - http://ajna0-funnel1-0-ph2.data.sfdc.net:80
        env:
        - name: MADKUB_NODENAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: MADKUB_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: MADKUB_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        image: ops0-artifactrepo1-0-ph2.data.sfdc.net/tnrp/sam/madkub:1.0.0-0000084-9f4a6ca6
        name: sam-madkub-integration-refresher
        resources: {}
        volumeMounts:
        - mountPath: /certs
          name: datacerts
        - mountPath: /tokens
          name: tokens
        - mountPath: /etc/pki_service/ca
          name: certificate-authority
          readOnly: true
        - mountPath: /etc/pki_service/platform/platform-client/certificates
          name: client-certificate
          readOnly: true
        - mountPath: /etc/pki_service/platform/platform-client/keys
          name: client-key
          readOnly: true
      initContainers:
      - args:
        - /sam/madkub-client
        - --madkub-endpoint
        - https://10.254.208.254:32007
        - --maddog-endpoint
        - https://all.pkicontroller.pki.blank.ph2.prod.non-estates.sfdcsd.net:8443
        - --maddog-server-ca
        - /etc/pki_service/ca/security-ca.pem
        - --madkub-server-ca
        - /etc/pki_service/ca/cacerts.pem
        - --token-folder
        - /tokens
        - --kingdom
        - ph2
        - --superpod
        - None
        - --estate
        - ph2-flowsnake_prod
        - --cert-folders
        - prometheusscrapercerts:/certs
        - --ca-folder
        - /etc/pki_service/ca
        - --funnel-endpoint
        - http://ajna0-funnel1-0-ph2.data.sfdc.net:80
        env:
        - name: MADKUB_NODENAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: MADKUB_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: MADKUB_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        image: ops0-artifactrepo1-0-ph2.data.sfdc.net/tnrp/sam/madkub:1.0.0-0000084-9f4a6ca6
        name: sam-madkub-integration-init
        resources: {}
        volumeMounts:
        - mountPath: /certs
          name: datacerts
        - mountPath: /tokens
          name: tokens
        - mountPath: /etc/pki_service/ca
          name: certificate-authority
          readOnly: true
        - mountPath: /etc/pki_service/platform/platform-client/certificates
          name: client-certificate
          readOnly: true
        - mountPath: /etc/pki_service/platform/platform-client/keys
          name: client-key
          readOnly: true
      restartPolicy: Always
      serviceAccountName: prometheus-scraper
      volumes:
      - configMap:
          name: prometheus-server-conf
        name: prometheus-server-conf
      - emptyDir:
          medium: Memory
        name: prometheus-storage-volume
      - hostPath:
          path: /etc/pki_service
        name: certs-volume
      - emptyDir:
          medium: Memory
        name: datacerts
      - emptyDir:
          medium: Memory
        name: tokens
      - hostPath:
          path: /etc/pki_service/ca
        name: certificate-authority
      - hostPath:
          path: /etc/pki_service/platform/platform-client/certificates
        name: client-certificate
      - hostPath:
          path: /etc/pki_service/platform/platform-client/keys
        name: client-key
