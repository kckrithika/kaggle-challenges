apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: spark-operator
    app.kubernetes.io/version: v2.4.0-v1beta1
  name: spark-operator
  namespace: flowsnake
spec:
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: spark-operator
      app.kubernetes.io/version: v2.4.0-v1beta1
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        madkub.sam.sfdc.net/allcerts: '{"certreqs": [{"cert-type": "server", "kingdom":
          "cdu", "name": "spark-webhook", "role": "flowsnake.spark-operator", "san":
          ["spark-webhook.flowsnake", "spark-webhook.flowsnake.svc", "spark-webhook.flowsnake.svc.cluster.local"]}]}'
      labels:
        app.kubernetes.io/name: spark-operator
        app.kubernetes.io/version: v2.4.0-v1beta1
    spec:
      containers:
      - args:
        - -logtostderr
        - -v=3
        - -enable-metrics=true
        - -metrics-endpoint=/metrics
        - -metrics-port=10254
        - -enable-webhook=true
        - -enable-resource-quota-enforcement=true
        - -webhook-svc-namespace=flowsnake
        - -webhook-port=8443
        - -webhook-fail-on-error=true
        - -webhook-server-cert=/certs/server/certificates/server.pem
        - -webhook-server-cert-key=/certs/server/keys/server-key.pem
        - -webhook-ca-cert=/certs/ca/cabundle.pem
        - -leader-election
        - -leader-election-lock-namespace=spark-operator-lock
        - -webhook-namespace-selector=spark-operator-webhook=enabled
        command:
        - /usr/bin/spark-operator
        image: ops0-artifactrepo1-0-cdu.data.sfdc.net/dva/kubernetes-spark-operator-2.4.0-sfdc-0.0.1:jenkins-dva-transformation-spark-on-k8s-operator-development-sfdc-9-itest
        imagePullPolicy: Always
        name: spark-operator
        ports:
        - containerPort: 10254
          name: metrics
          protocol: TCP
        - containerPort: 8443
          name: webhook
          protocol: TCP
        volumeMounts:
        - mountPath: /certs
          name: datacerts
      - args:
        - /sam/madkub-client
        - --madkub-endpoint
        - https://10.254.208.254:32007
        - --maddog-endpoint
        - https://all.pkicontroller.pki.blank.cdu.prod.non-estates.sfdcsd.net:8443
        - --maddog-server-ca
        - /etc/pki_service/ca/security-ca.pem
        - --madkub-server-ca
        - /etc/pki_service/ca/cacerts.pem
        - --token-folder
        - /tokens
        - --kingdom
        - cdu
        - --superpod
        - None
        - --estate
        - cdu-flowsnake_prod
        - --refresher
        - --run-init-for-refresher-mode
        - --cert-folders
        - spark-webhook:/certs
        - --ca-folder
        - /etc/pki_service/ca
        - --funnel-endpoint
        - http://ajna0-funnel1-0-cdu.data.sfdc.net:80
        env:
        - name: MADKUB_NODENAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: MADKUB_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: MADKUB_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        image: ops0-artifactrepo1-0-cdu.data.sfdc.net/tnrp/sam/madkub:1.0.0-0000084-9f4a6ca6
        name: sam-madkub-integration-refresher
        resources: {}
        volumeMounts:
        - mountPath: /certs
          name: datacerts
        - mountPath: /tokens
          name: tokens
        - mountPath: /etc/pki_service/ca
          name: certificate-authority
          readOnly: true
        - mountPath: /etc/pki_service/platform/platform-client/certificates
          name: client-certificate
          readOnly: true
        - mountPath: /etc/pki_service/platform/platform-client/keys
          name: client-key
          readOnly: true
      initContainers:
      - args:
        - /sam/madkub-client
        - --madkub-endpoint
        - https://10.254.208.254:32007
        - --maddog-endpoint
        - https://all.pkicontroller.pki.blank.cdu.prod.non-estates.sfdcsd.net:8443
        - --maddog-server-ca
        - /etc/pki_service/ca/security-ca.pem
        - --madkub-server-ca
        - /etc/pki_service/ca/cacerts.pem
        - --token-folder
        - /tokens
        - --kingdom
        - cdu
        - --superpod
        - None
        - --estate
        - cdu-flowsnake_prod
        - --cert-folders
        - spark-webhook:/certs
        - --ca-folder
        - /etc/pki_service/ca
        - --funnel-endpoint
        - http://ajna0-funnel1-0-cdu.data.sfdc.net:80
        env:
        - name: MADKUB_NODENAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: MADKUB_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: MADKUB_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        image: ops0-artifactrepo1-0-cdu.data.sfdc.net/tnrp/sam/madkub:1.0.0-0000084-9f4a6ca6
        name: sam-madkub-integration-init
        resources: {}
        volumeMounts:
        - mountPath: /certs
          name: datacerts
        - mountPath: /tokens
          name: tokens
        - mountPath: /etc/pki_service/ca
          name: certificate-authority
          readOnly: true
        - mountPath: /etc/pki_service/platform/platform-client/certificates
          name: client-certificate
          readOnly: true
        - mountPath: /etc/pki_service/platform/platform-client/keys
          name: client-key
          readOnly: true
      serviceAccountName: spark-operator-serviceaccount
      volumes:
      - emptyDir:
          medium: Memory
        name: datacerts
      - emptyDir:
          medium: Memory
        name: tokens
      - hostPath:
          path: /etc/pki_service/ca
        name: certificate-authority
      - hostPath:
          path: /etc/pki_service/platform/platform-client/certificates
        name: client-certificate
      - hostPath:
          path: /etc/pki_service/platform/platform-client/keys
        name: client-key
