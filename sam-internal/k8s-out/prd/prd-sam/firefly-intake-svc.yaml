apiVersion: v1
items:
- apiVersion: v1
  data:
    application.yml: |-
      {
          "firefly": {
              "ghe": {
                  "commit-signing": false,
                  "context-prefix": "",
                  "health-check-repo": "tnrpfirefly",
                  "webhook-secret-token-validation": false
              },
              "intake": {
                  "repo-config-map": {
                      "manifests": {
                          "handle-only-latest-commit": true,
                          "webhook-secret-token": "feature_not_enabled"
                      },
                      "sam-test-firefly-manifests": {
                          "handle-only-latest-commit": true,
                          "webhook-secret-token": "feature_not_enabled"
                      },
                      "sam-test-manifests": {
                          "handle-only-latest-commit": true,
                          "webhook-secret-token": "feature_not_enabled"
                      },
                      "test-manifests": {
                          "handle-only-latest-commit": true,
                          "webhook-secret-token": "feature_not_enabled"
                      },
                      "tnrpfirefly-test_manifest_driven_promotions": {
                          "handle-only-latest-commit": true,
                          "webhook-secret-token": "feature_not_enabled"
                      },
                      "tnrpfirefly-test_sam_manifests": {
                          "handle-only-latest-commit": true,
                          "webhook-secret-token": "feature_not_enabled"
                      }
                  }
              },
              "monitoring": {
                  "enable-funnel-publisher": true,
                  "enable-metrics-logging": false,
                  "funnel": {
                      "avro-schema-fingerprint": "AVG7NnlcHNdk4t_zn2JBnQ",
                      "backoff-time": 1,
                      "base-path": "funnel",
                      "endpoint": "ajna0-funnel1-0-prd.data.sfdc.net",
                      "funnel-api-version": "v1",
                      "http-port": 80,
                      "https-port": 443,
                      "max-publish-tries": 3,
                      "publish-api": "publishBatch",
                      "ssl-enabled": true
                  },
                  "metric-fields": {
                      "common-tags": {
                          "k8.namespace": "${MY_POD_NAMESPACE}",
                          "k8.node.name": "${MY_NODE_NAME}"
                      },
                      "datacenter": "prd",
                      "pod": "firefly-intake",
                      "service": "firefly",
                      "subservice": "${MY_APP_NAME}",
                      "superpod": "prd-sam"
                  },
                  "report-frequency": 60,
                  "system-exception-threshold": 5
              },
              "rabbitmq": {
                  "exchange-name": "firefly.delivery",
                  "prr-routing-key-format": "%s.pr",
                  "push-routing-key-format": "%s.package"
              }
          },
          "logging": {
              "level": {
                  "com.salesforce": "INFO",
                  "com.salesforce.firefly.intakeservice": "DEBUG",
                  "org": "INFO"
              },
              "pattern": {
                  "console": "%d{yyyy-MM-dd HH:mm:ss} - %C:%L[%thread gua=%X{userAgent} ghd=%X{gitHubDelivery}] %-5level - e=%X{eventType} sha=%X{sha} repo=%X{repo} pr=%X{pr} c=%X{committer} - details=[%msg]  %n"
              }
          },
          "management": {
              "endpoint": {
                  "health": {
                      "show-details": "always"
                  }
              },
              "endpoints": {
                  "web": {
                      "exposure": {
                          "include": "*"
                      }
                  }
              },
              "server": {
                  "port": 8081
              }
          },
          "scm": {
              "ghe": {
                  "api-url": "https://git.soma.salesforce.com/api/v3/",
                  "clone-timeout": "60s",
                  "connect-timeout": "5s",
                  "dark-launch": "${DARKLAUNCH}",
                  "keep-alive-duration": "60000ms",
                  "max-attempts": 3,
                  "max-idle-connections": 10,
                  "oauth-token": "${gitRWPassword#FromSecretService}",
                  "read-timeout": "5s",
                  "url": "https://git.soma.salesforce.com",
                  "user": "svc-tnrp-git-rw",
                  "write-timeout": "5s"
              }
          },
          "server": {
              "port": 8080
          },
          "spring": {
              "rabbitmq": {
                  "connection-timeout": "10000ms",
                  "host": "firefly-rabbitmq.firefly.prd-sam.prd.slb.sfdc.net",
                  "listener": {
                      "simple": {
                          "retry": {
                              "enabled": true,
                              "initial-interval": "1000ms",
                              "max-attempts": 3,
                              "max-interval": "10000ms",
                              "multiplier": 2,
                              "stateless": true
                          }
                      }
                  },
                  "password": "${rabbitMqDefaultPass#FromSecretService}",
                  "port": "5672",
                  "publisher-confirms": true,
                  "publisher-returns": true,
                  "template": {
                      "mandatory": true,
                      "reply-timeout": "60000ms",
                      "retry": {
                          "enabled": true,
                          "initial-interval": "1000ms",
                          "max-attempts": 10,
                          "max-interval": "10000ms",
                          "multiplier": 2
                      }
                  },
                  "username": "sfdc-rabbitmq"
              }
          }
      }
  kind: ConfigMap
  metadata:
    labels:
      sam.data.sfdc.net/owner: tnrp
    name: firefly-intake-configmap
    namespace: firefly
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      slb.sfdc.net/name: firefly-intake
      slb.sfdc.net/portconfigurations: '[{"lbtype": "http", "port": 8081, "reencrypt":
        false, "sticky": 0, "targetPort": 8081, "tls": false}, {"lbtype": "http",
        "port": 8080, "reencrypt": false, "sticky": 0, "targetPort": 8080, "tls":
        false}, {"lbtype": "http", "port": 8443, "reencrypt": false, "sticky": 0,
        "targetPort": 8080, "tls": true}]'
    labels:
      app: firefly-intake
      sam.data.sfdc.net/owner: tnrp
    name: firefly-intake-service
    namespace: firefly
  spec:
    ports:
    - name: intake-http
      port: 8080
      protocol: TCP
      targetPort: 8080
    - name: intake-https
      port: 8443
      protocol: TCP
      targetPort: 8080
    - name: admin-port
      port: 8081
      protocol: TCP
      targetPort: 8081
    selector:
      name: firefly-intake
    type: NodePort
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    labels:
      name: firefly-intake
      sam.data.sfdc.net/owner: tnrp
    name: firefly-intake-deployment
    namespace: firefly
  spec:
    replicas: 1
    selector:
      matchLabels:
        name: firefly-intake
        sam.data.sfdc.net/owner: tnrp
    strategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        annotations:
          madkub.sam.sfdc.net/allcerts: '{"certreqs":[{"name": "certs","san":["firefly"],"cert-type":"client",
            "kingdom":"prd", "role": "firefly"}]}'
        labels:
          name: firefly-intake
          sam.data.sfdc.net/owner: tnrp
        name: firefly-intake-deployment
        namespace: firefly
      spec:
        containers:
        - args:
          - /sam/madkub-client
          - --madkub-endpoint
          - https://10.254.208.254:32007
          - --maddog-endpoint
          - https://all.pkicontroller.pki.blank.prd.prod.non-estates.sfdcsd.net:8443
          - --maddog-server-ca
          - /maddog-certs/ca/security-ca.pem
          - --madkub-server-ca
          - /maddog-certs/ca/cacerts.pem
          - --cert-folders
          - certs:/certs/
          - --token-folder
          - /tokens/
          - --requested-cert-type
          - client
          - --refresher
          - --run-init-for-refresher-mode
          - --ca-folder
          - /maddog-certs/ca
          env:
          - name: MADKUB_NODENAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: MADKUB_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: MADKUB_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          image: ops0-artifactrepo2-0-prd.data.sfdc.net/docker-release-candidate/tnrp/sam/madkub:1.0.0-0000077-b1d3a629
          name: madkub-refresher
          resources: {}
          volumeMounts:
          - mountPath: /certs
            name: certs
          - mountPath: /tokens
            name: tokens
          - mountPath: /maddog-certs/
            name: maddog-certs
        - command:
          - java
          - -jar
          - /intake-svc.jar
          - --spring.profiles.active=prd-sam
          - --spring.config.location=/etc/firefly/config/
          env:
          - name: MY_NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: MY_POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: MY_POD_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.podIP
          - name: MY_POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: MY_APP_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.labels['name']
          - name: CONFIG_VERSION
            value: "7"
          - name: DARKLAUNCH
            value: "false"
          image: ops0-artifactrepo2-0-prd.data.sfdc.net/dva/firefly-intake:201
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 10
            httpGet:
              path: /actuator
              port: admin-port
            initialDelaySeconds: 30
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 30
          name: firefly-intake
          ports:
          - containerPort: 8081
            name: admin-port
            protocol: TCP
          - containerPort: 8080
            name: intake-http
            protocol: TCP
          readinessProbe:
            failureThreshold: 10
            httpGet:
              path: /actuator/health
              port: admin-port
            initialDelaySeconds: 30
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 30
          resources:
            limits:
              sam.sfdc.net/ip-address: "1"
            requests:
              sam.sfdc.net/ip-address: "1"
          volumeMounts:
          - mountPath: /certs
            name: certs
          - mountPath: /root/.ssh/
            name: git-ssh-keys
          - mountPath: /etc/firefly/config
            name: app-config-volume
        initContainers:
        - args:
          - /sam/madkub-client
          - --madkub-endpoint
          - https://10.254.208.254:32007
          - --maddog-endpoint
          - https://all.pkicontroller.pki.blank.prd.prod.non-estates.sfdcsd.net:8443
          - --maddog-server-ca
          - /maddog-certs/ca/security-ca.pem
          - --madkub-server-ca
          - /maddog-certs/ca/cacerts.pem
          - --cert-folders
          - certs:/certs/
          - --token-folder
          - /tokens/
          - --requested-cert-type
          - client
          - --ca-folder
          - /maddog-certs/ca
          env:
          - name: MADKUB_NODENAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: MADKUB_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: MADKUB_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: ops0-artifactrepo2-0-prd.data.sfdc.net/docker-release-candidate/tnrp/sam/madkub:1.0.0-0000077-b1d3a629
          imagePullPolicy: IfNotPresent
          name: madkub-init
          volumeMounts:
          - mountPath: /certs
            name: certs
          - mountPath: /maddog-certs/
            name: maddog-certs
          - mountPath: /tokens
            name: tokens
        nodeSelector:
          pool: prd-sam
        terminationGracePeriodSeconds: 10
        volumes:
        - name: app-config-volume
          projected:
            sources:
            - configMap:
                items:
                - key: application.yml
                  path: application.yml
                name: firefly-intake-configmap
        - emptyDir: {}
          name: docker-graph-storage
        - emptyDir: {}
          name: docker-build-dir
        - emptyDir:
            medium: Memory
          name: tokens
        - emptyDir:
            medium: Memory
          name: certs
        - emptyDir:
            medium: Memory
          name: git-ssh-keys
        - hostPath:
            path: /etc/pki_service
          name: maddog-certs
kind: List
