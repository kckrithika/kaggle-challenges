apiVersion: v1
data:
  watchdog-samsql-profiles.jsonnet: '{"alertProfiles": [{"email": "sam-test-alerts@salesforce.com",
    "name": "sam", "pagerDuty": "csc-sam-sam-email.mbaphr21@salesforce.pagerduty.com"}]}'
  watchdog-samsql-queries.jsonnet: '{"sql_alerts": [{"alertAction": "email", "alertFrequency":
    "24h", "alertProfile": "sam", "alertThreshold": "10m", "instructions": "The following
    deployments are reported as bad customer deployments in Production. Debug Instructions:
    https://git.soma.salesforce.com/sam/sam/wiki/Debug-Failed-Deployment", "name":
    "Customer-Production-Deployment-SLA", "sql": "SELECT * FROM\n            (\n              SELECT\n                ControlEstate,\n                Namespace,\n                Name,\n                JSON_EXTRACT(Payload,
    ''$.metadata.annotations.\"smb.sam.data.sfdc.net/emailTo\"'') AS email,\n                CASE
    WHEN JSON_EXTRACT(Payload, ''$.metadata.labels.sam_app'') is NULL then False\n                     ELSE
    True END AS IsSamApp,\n                JSON_EXTRACT(Payload, ''$.spec.replicas'')
    AS desiredReplicas,\n                JSON_EXTRACT(Payload, ''$.status.availableReplicas'')
    AS availableReplicas,\n                JSON_EXTRACT(Payload, ''$.status.updatedReplicas'')
    AS updatedReplicas,\n                (JSON_EXTRACT(Payload, ''$.spec.replicas'')
    - JSON_EXTRACT(Payload, ''$.status.availableReplicas'')) AS kpodsDown,\n                COALESCE(JSON_EXTRACT(Payload,
    ''$.status.availableReplicas'') /nullif(JSON_EXTRACT(Payload, ''$.spec.replicas''),
    0), 0) AS availability,\n                0.6 as minAvailability,\n                CONCAT(''http://dashboard-'',SUBSTR(ControlEstate,
    1, 3),''-sam.csc-sam.prd-sam.prd.slb.sfdc.net/#!/deployment/'',Namespace,''/'',Name,''?namespace='',Namespace)
    AS Url\n                FROM k8s_resource\n                WHERE ApiKind = ''Deployment''\n            )
    AS ss\n            WHERE\n               isSamApp AND\n               ( Namespace
    != ''sam-watchdog'' AND Namespace != ''sam-system'' AND Namespace != ''csc-sam''
    AND Namespace NOT LIKE ''%slb%'') AND\n               (availableReplicas != desiredReplicas
    OR availableReplicas IS NULL) AND\n               (availability IS NULL OR availability
    < 0.6) AND\n               (kpodsDown IS NULL OR kpodsDown >1) AND\n               NOT
    ControlEstate LIKE ''prd-%'' AND\n               desiredReplicas > 1", "watchdogFrequency":
    "10m"}, {"alertAction": "email", "alertFrequency": "24h", "alertProfile": "sam",
    "alertThreshold": "10m", "instructions": "The following minion pools have multiple
    nodes down in Production requiring immediate attention according to our SLA. Debug
    Instructions: https://git.soma.salesforce.com/sam/sam/wiki/Repair-Failed-SAM-Host",
    "name": "Customer-Node-SLA", "sql": "SELECT\n              \tminionpool,\n              \tTotalCount,\n              \tNotReadyCount,\n              \tNotReadyPerc\n              FROM\n              (\n              SELECT\n                      minionpool,\n                      TotalCount
    ,\n                      NotReadyCount,\n                      (NotReadyCount/TotalCount)
    as ''NotReadyPerc''\n\n              FROM\n              (\n                  SELECT\n                        COUNT(*)
    as TotalCount,\n                        SUM(CASE WHEN READY = ''True'' THEN 0
    ELSE 1 END) as NotReadyCount,\n                        minionpool\n                  FROM\n                        nodeDetailView\n                  WHERE\n                        KINGDOM
    != ''PRD''\n                        AND minionpool NOT LIKE ''%ceph%''\n                  GROUP
    BY minionpool\n              ) ss\n              ) ss2\n              WHERE (TotalCount
    < 10 AND NotReadyCount >=2) OR (TotalCount >= 10 AND NotReadyPerc >=0.2)", "watchdogFrequency":
    "10m"}, {"alertAction": "email", "alertFrequency": "24h", "alertProfile": "sam",
    "alertThreshold": "10m", "instructions": "The following SAM control stack components
    dont have even 1 healhty pod", "name": "Critical-Sam_System-Components", "sql":
    "SELECT * FROM\n                  (\n                    SELECT\n                      ControlEstate,\n                      Namespace,\n                      Name,\n                      JSON_EXTRACT(Payload,
    ''$.spec.replicas'') AS desiredReplicas,\n                      JSON_EXTRACT(Payload,
    ''$.status.availableReplicas'') AS availableReplicas,\n                      JSON_EXTRACT(Payload,
    ''$.status.updatedReplicas'') AS updatedReplicas,\n                      (JSON_EXTRACT(Payload,
    ''$.spec.replicas'') - JSON_EXTRACT(Payload, ''$.status.availableReplicas''))
    AS kpodsDown,\n                      COALESCE(JSON_EXTRACT(Payload, ''$.status.availableReplicas'')
    /nullif(JSON_EXTRACT(Payload, ''$.spec.replicas''), 0), 0) AS availability,\n                      CONCAT(''http://dashboard-'',SUBSTR(ControlEstate,
    1, 3),''-sam.csc-sam.prd-sam.prd.slb.sfdc.net/#!/deployment/'',Namespace,''/'',Name,''?namespace='',Namespace)
    AS Url\n                      FROM k8s_resource\n                      WHERE ApiKind
    = ''Deployment''\n                  ) AS ss\n                  WHERE\n                     Namespace
    = ''sam-system'' AND\n                     (availableReplicas < 1 OR availableReplicas
    IS NULL) AND\n                     ControlEstate NOT LIKE ''%sdc%'' AND\n                     ControlEstate
    NOT LIKE ''%storage%'' AND\n                     ControlEstate NOT LIKE ''%sdn%''
    AND\n                     ControlEstate NOT LIKE ''%slb%'' AND\n                     desiredReplicas
    != 0", "watchdogFrequency": "10m"}]}'
kind: ConfigMap
metadata:
  creationTimestamp: null
  name: watchdogsamsqlqueries
  namespace: sam-system
