apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  labels:
    name: rabbitmq
    sam.data.sfdc.net/owner: tnrp
  name: rabbitmq
  namespace: firefly
spec:
  replicas: 3
  selector:
    matchLabels:
      app: rabbitmq
  serviceName: rabbitmq-set
  template:
    metadata:
      annotations:
        madkub.sam.sfdc.net/allcerts: '{"certreqs":[{"name": "certs","san":["firefly"],"cert-type":"client",
          "kingdom":"prd", "role": "firefly"}]}'
      labels:
        app: rabbitmq
        name: rabbitmq
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: pool
                operator: In
                values:
                - prd-sam
              - key: kubernetes.io/hostname
                operator: NotIn
                values:
                - shared0-samcompute2-1-prd.eng.sfdc.net
      containers:
      - env:
        - name: RABBITMQ_DEFAULT_USER
          value: rabbitmq-admin
        - name: MY_POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: MY_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: MY_POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: KINGDOM
          value: PRD
        - name: ESTATE
          value: prd-sam
        - name: SFDC_METRICS_SERVICE_HOST
          value: ajna0-funnel1-0-prd.data.sfdc.net
        - name: SFDC_METRICS_SERVICE_PORT
          value: "80"
        - name: SUPERPOD
          value: NONE
        - name: RABBITMQ_USE_LONGNAME
          value: "true"
        - name: RABBITMQ_NODENAME
          value: rabbit@$(MY_POD_NAME).rabbitmq-set.$(MY_POD_NAMESPACE).svc.prd-sam.prd.sam.sfdc.net.
        - name: K8S_SERVICE_NAME
          value: rabbitmq-set
        - name: RABBITMQ_CONFIG_VERSION
          value: "3"
        - name: REDEPLOY_COUNT
          value: "3"
        - name: RABBITMQ_MNESIA_BASE
          value: /var/lib/rabbitmq/$(MY_POD_NAME)/mnesia
        - name: RABBITMQ_SCHEMA_DIR
          value: /var/lib/rabbitmq/$(MY_POD_NAME)/schema
        - name: RABBITMQ_GENERATED_CONFIG_DIR
          value: /var/lib/rabbitmq/$(MY_POD_NAME)/config
        image: ops0-artifactrepo2-0-prd.data.sfdc.net/dva/firefly-rabbitmq:140
        imagePullPolicy: Always
        lifecycle:
          postStart:
            exec:
              command:
              - /bin/sh
              - -c
              - /usr/local/bin/post-start.sh
        livenessProbe:
          exec:
            command:
            - rabbitmqctl
            - node_health_check
          failureThreshold: 10
          initialDelaySeconds: 60
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 60
        name: rabbitmq
        ports:
        - containerPort: 15672
          name: http
          protocol: TCP
        - containerPort: 15671
          name: https
          protocol: TCP
        - containerPort: 5672
          name: amqp
          protocol: TCP
        - containerPort: 5671
          name: amqp-tls
          protocol: TCP
        - containerPort: 8081
          name: admin-port
          protocol: TCP
        readinessProbe:
          failureThreshold: 10
          httpGet:
            path: /actuator
            port: admin-port
          initialDelaySeconds: 60
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 60
        resources:
          limits:
            sam.sfdc.net/ip-address: "1"
          requests:
            sam.sfdc.net/ip-address: "1"
        volumeMounts:
        - mountPath: /var/lib/rabbitmq
          name: data-volume
        - mountPath: /etc/rabbitmq
          name: config-volume
        - mountPath: /certs
          name: certs
      - args:
        - /sam/madkub-client
        - --madkub-endpoint
        - https://10.254.208.254:32007
        - --maddog-endpoint
        - https://all.pkicontroller.pki.blank.prd.prod.non-estates.sfdcsd.net:8443
        - --maddog-server-ca
        - /maddog-certs/ca/security-ca.pem
        - --madkub-server-ca
        - /maddog-certs/ca/cacerts.pem
        - --cert-folders
        - certs:/certs/
        - --token-folder
        - /tokens/
        - --requested-cert-type
        - client
        - --refresher
        - --run-init-for-refresher-mode
        - --ca-folder
        - /maddog-certs/ca
        env:
        - name: MADKUB_NODENAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: MADKUB_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: MADKUB_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: ops0-artifactrepo2-0-prd.data.sfdc.net/docker-release-candidate/tnrp/sam/madkub:1.0.0-0000080-8a8659dd
        name: madkub-refresher
        resources: {}
        volumeMounts:
        - mountPath: /certs
          name: certs
        - mountPath: /tokens
          name: tokens
        - mountPath: /maddog-certs/
          name: maddog-certs
      - command:
        - java
        - -jar
        - /home/rabbitmq/rabbitmq-monitor-svc.jar
        - --spring.profiles.active=prd-sam
        - --spring.config.location=/home/rabbitmq/config/
        env:
        - name: MY_POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: MY_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: MY_POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: ESTATE
          value: prd-sam
        - name: SFDC_METRICS_SERVICE_HOST
          value: ajna0-funnel1-0-prd.data.sfdc.net
        - name: SFDC_METRICS_SERVICE_PORT
          value: "80"
        - name: CONFIG_VERSION
          value: "5"
        - name: RABBITMQ_NODENAME
          value: rabbit@$(MY_POD_NAME).rabbitmq-set.$(MY_POD_NAMESPACE).svc.prd-sam.prd.sam.sfdc.net.
        image: ops0-artifactrepo2-0-prd.data.sfdc.net/dva/firefly-rabbitmq-monitord:296
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 10
          httpGet:
            path: /actuator
            port: admin-port
          initialDelaySeconds: 60
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 60
        name: rabbitmq-monitord
        ports:
        - containerPort: 8081
          name: admin-port
          protocol: TCP
        readinessProbe:
          failureThreshold: 10
          httpGet:
            path: /actuator
            port: admin-port
          initialDelaySeconds: 60
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 60
        resources:
          limits:
            sam.sfdc.net/ip-address: "1"
          requests:
            sam.sfdc.net/ip-address: "1"
        securityContext:
          runAsNonRoot: false
          runAsUser: 0
        volumeMounts:
        - mountPath: /root/.ssh/
          name: git-ssh-keys
        - mountPath: /certs
          name: certs
        - mountPath: /tokens
          name: tokens
        - mountPath: /maddog-certs/
          name: maddog-certs
        - mountPath: /home/rabbitmq/config
          name: monitord-config-volume
      initContainers:
      - args:
        - /sam/madkub-client
        - --madkub-endpoint
        - https://10.254.208.254:32007
        - --maddog-endpoint
        - https://all.pkicontroller.pki.blank.prd.prod.non-estates.sfdcsd.net:8443
        - --maddog-server-ca
        - /maddog-certs/ca/security-ca.pem
        - --madkub-server-ca
        - /maddog-certs/ca/cacerts.pem
        - --cert-folders
        - certs:/certs/
        - --token-folder
        - /tokens/
        - --requested-cert-type
        - client
        - --ca-folder
        - /maddog-certs/ca
        env:
        - name: MADKUB_NODENAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: MADKUB_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: MADKUB_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        image: ops0-artifactrepo2-0-prd.data.sfdc.net/docker-release-candidate/tnrp/sam/madkub:1.0.0-0000080-8a8659dd
        imagePullPolicy: IfNotPresent
        name: madkub-init
        volumeMounts:
        - mountPath: /certs
          name: certs
        - mountPath: /maddog-certs/
          name: maddog-certs
        - mountPath: /tokens
          name: tokens
      - args:
        - chmod -R 775 /vols/maddog-certs && chown -R 7447:7447 /vols/maddog-certs
          && chmod -R 775 /vols/data-volume && chown -R 7447:7447 /vols/data-volume
        command:
        - /bin/sh
        - -c
        image: ops0-artifactrepo2-0-prd.data.sfdc.net/docker-release-candidate/tnrp/sam/hypersam:sam-c07d4afb-673
        imagePullPolicy: Always
        name: permissionsetterinitcontainer
        securityContext:
          runAsNonRoot: false
          runAsUser: 0
        volumeMounts:
        - mountPath: /vols/maddog-certs
          name: maddog-certs
        - mountPath: /vols/data-volume
          name: data-volume
      securityContext:
        fsGroup: 7447
        runAsNonRoot: true
        runAsUser: 7447
      terminationGracePeriodSeconds: 10
      volumes:
      - name: data-volume
        persistentVolumeClaim:
          claimName: firefly-rabbitmq-pv-claim
      - name: config-volume
        projected:
          sources:
          - configMap:
              items:
              - key: rabbitmq.conf
                path: rabbitmq.conf
              - key: rabbitmq-env.conf
                path: rabbitmq-env.conf
              - key: enabled_plugins
                path: enabled_plugins
              - key: definitions.json
                path: definitions.json
              name: rabbitmq-configmap
      - name: monitord-config-volume
        projected:
          sources:
          - configMap:
              items:
              - key: application.yml
                path: application.yml
              name: rabbitmq-configmap
      - emptyDir:
          medium: Memory
        name: certs
      - emptyDir:
          medium: Memory
        name: tokens
      - emptyDir:
          medium: Memory
        name: git-ssh-keys
      - hostPath:
          path: /etc/pki_service
        name: maddog-certs
  updateStrategy:
    type: RollingUpdate
