apiVersion: v1
data:
  electron-opa-container.yaml.template: |-
    containers:
      - name: electron-opa
        image: {{ .Image }}
        args:
          - run
          - --server
          - --log-level=debug
          - --set "services.electron.url=http://demo-authz-http.service-mesh.localhost.mesh.force.com:5442"
          - --set "services.electron.allow_insecure_tls=true"
          - --set "bundle.name=authz"
          - --set "bundle.prefix=v1"
          - --set "bundle.service=electron"
          - --set "bundle.polling.min_delay_seconds=300"
          - --set "bundle.polling.max_delay_seconds=360"
        {{- if .EnvironmentVars}}
        env:
        {{- range $key, $val := .EnvironmentVars}}
        - name: {{$key}}
          {{- if $val.FieldRefFieldPath}}
          valueFrom:
            fieldRef:
              apiVersion: {{$val.FieldRefApiVersion}}
              fieldPath: {{$val.FieldRefFieldPath}}
          {{- else}}
          value: "{{$val.Value}}"
          {{- end}}
        {{- end}}
        {{- end}}
        ports:
        - name: http
          containerPort: 8181
        livenessProbe:
          httpGet:
            scheme: HTTP
            port: 8181
          initialDelaySeconds: 5
          periodSeconds: 5
        readinessProbe:
          httpGet:
            path: /health?bundle=false
            scheme: HTTP
            port: 8181
          initialDelaySeconds: 5
          periodSeconds: 5
        terminationMessagePolicy: FallbackToLogsOnError
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app: electron-opa-injector
  name: electron-opa-injector-configs-opa-container
  namespace: authz-injector
