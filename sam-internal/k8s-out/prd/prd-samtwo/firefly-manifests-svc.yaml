apiVersion: v1
items:
- apiVersion: v1
  data:
    application.yml: |-
      {
          "appconfig": {
              "artifactory": {
                  "artifactory-content-repo-password": "${artifactoryContentRepoPassword#FromSecretService}",
                  "artifactory-content-repo-password-prod": "${artifactoryContentRepoPasswordProd#FromSecretService}",
                  "artifactory-content-repo-user-name": "svc_tnrp_ci",
                  "artifactory-content-repo-user-name-prod": "svc_tnrp_cd",
                  "artifactory-dev-endpoint": "https://${appconfig.artifactory.artifactory-dev-host}/",
                  "artifactory-dev-host": "ops0-artifactrepo1-0-prd.data.sfdc.net",
                  "artifactory-p2p-api-endpoint": "https://${appconfig.artifactory.artifactory-p2p-host}/artifactory/",
                  "artifactory-p2p-endpoint": "https://${appconfig.artifactory.artifactory-p2p-host}/",
                  "artifactory-p2p-host": "ops0-artifactrepo2-0-prd.data.sfdc.net",
                  "artifactory-password": "${artifactoryPassword#FromSecretService}",
                  "artifactory-user-name": "svc_tnrp_artifactory",
                  "backoff-time": "1000ms",
                  "connection-timeout": "20000ms",
                  "max-retry": 3,
                  "socket-timeout": "30000ms"
              },
              "back-off-period": "2000ms",
              "context-prefix": "",
              "docker": {
                  "connect-timeout": "480000ms",
                  "docker-cert-path": "/etc/docker/certs.d",
                  "read-timeout": "480000ms",
                  "remote-docker-host": "http://localhost:2375"
              },
              "health-check-repo": "tnrpfirefly",
              "instance-type": "${INSTANCE_TYPE}",
              "max-attempts": 4,
              "repo-config": {
                  "manifest_driven_promotions": {
                      "type": "artifacts"
                  },
                  "manifests": {
                      "type": "content_and_artifacts"
                  }
              },
              "root-dir": "/tmp",
              "security": {
                  "secret-service-url": "secretservice.dmz.salesforce.com"
              },
              "service-mode": "${SERVICE_MODE}"
          },
          "firefly": {
              "monitoring": {
                  "datacenter": "prd",
                  "pod": "firefly-package",
                  "report-frequency": 1,
                  "superpod": "NONE",
                  "system-exception-threshold": 5
              }
          },
          "logging": {
              "level": {
                  "com.salesforce": "DEBUG",
                  "org": "INFO"
              },
              "pattern": {
                  "console": "%d{yyyy-MM-dd HH:mm:ss} - %C:%L[%thread] %-5level - instanceType=${INSTANCE_TYPE} e=%X{eventType} sha=%X{sha} repo=%X{repo} pr=%X{pr} c=%X{committer} - details=[%msg]  %n"
              }
          },
          "management": {
              "endpoint": {
                  "health": {
                      "show-details": "always"
                  }
              },
              "endpoints": {
                  "web": {
                      "exposure": {
                          "include": "*"
                      }
                  }
              },
              "server": {
                  "port": 8081
              }
          },
          "rabbitmq": {
              "exchange-name": "firefly.delivery",
              "latestfile-q": "${LATEST_FILE_QUEUE}",
              "package-q": "${PACKAGE_QUEUE}",
              "promotion-q": "${PROMOTION_QUEUE}",
              "service-mode": "${SERVICE_MODE}"
          },
          "scm": {
              "ghe": {
                  "api-url": "https://git.soma.salesforce.com/api/v3/",
                  "clone-timeout": "60s",
                  "connect-timeout": "5s",
                  "dark-launch": "${DARKLAUNCH}",
                  "keep-alive-duration": "60000ms",
                  "max-attempts": 3,
                  "max-idle-connections": 10,
                  "oauth-token": "${gitRWPassword#FromSecretService}",
                  "read-timeout": "5s",
                  "url": "https://git.soma.salesforce.com",
                  "user": "svc-tnrp-git-rw",
                  "write-timeout": "5s"
              }
          },
          "server": {
              "port": -1
          },
          "spring": {
              "rabbitmq": {
                  "connection-timeout": "10000ms",
                  "host": "shared0-samtwokubeapi1-1-prd.eng.sfdc.net",
                  "listener": {
                      "simple": {
                          "retry": {
                              "enabled": true,
                              "initial-interval": "1000ms",
                              "max-attempts": 3,
                              "max-interval": "10000ms",
                              "multiplier": 2,
                              "stateless": true
                          }
                      }
                  },
                  "password": "${rabbitMqDefaultPass#FromSecretService}",
                  "port": "33672",
                  "publisher-confirms": true,
                  "publisher-returns": true,
                  "template": {
                      "mandatory": true,
                      "reply-timeout": "60000ms",
                      "retry": {
                          "enabled": true,
                          "initial-interval": "1000ms",
                          "max-attempts": 10,
                          "max-interval": "10000ms",
                          "multiplier": 2
                      }
                  },
                  "username": "sfdc-rabbitmq"
              }
          }
      }
  kind: ConfigMap
  metadata:
    labels:
      sam.data.sfdc.net/owner: tnrp
    name: firefly-package-manifests-configmap
    namespace: firefly
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: firefly-package
      sam.data.sfdc.net/owner: tnrp
    name: firefly-package-manifests-service
    namespace: firefly
  spec:
    ports:
    - name: admin-port
      port: 8081
      protocol: TCP
      targetPort: 8081
    selector:
      name: firefly-package
    type: LoadBalancer
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    labels:
      name: firefly-package
      sam.data.sfdc.net/owner: tnrp
    name: firefly-package-manifests-deployment
    namespace: firefly
  spec:
    replicas: 2
    selector:
      matchLabels:
        name: firefly-package
        sam.data.sfdc.net/owner: tnrp
    strategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        annotations:
          madkub.sam.sfdc.net/allcerts: '{"certreqs":[{"name": "certs","san":["firefly"],"cert-type":"client",
            "kingdom":"prd", "role": "firefly"}]}'
        labels:
          name: firefly-package
          sam.data.sfdc.net/owner: tnrp
        name: firefly-package-manifests-deployment
        namespace: firefly
      spec:
        containers:
        - args:
          - /sam/madkub-client
          - --madkub-endpoint
          - https://10.254.208.254:32007
          - --maddog-endpoint
          - https://all.pkicontroller.pki.blank.prd.prod.non-estates.sfdcsd.net:8443
          - --maddog-server-ca
          - /maddog-certs/ca/security-ca.pem
          - --madkub-server-ca
          - /maddog-certs/ca/cacerts.pem
          - --cert-folders
          - certs:/certs/
          - --token-folder
          - /tokens/
          - --requested-cert-type
          - client
          - --refresher
          - --run-init-for-refresher-mode
          - --ca-folder
          - /maddog-certs/ca
          env:
          - name: MADKUB_NODENAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: MADKUB_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: MADKUB_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          image: ops0-artifactrepo2-0-prd.data.sfdc.net/docker-release-candidate/tnrp/sam/madkub:1.0.0-0000077-b1d3a629
          name: madkub-refresher
          resources: {}
          volumeMounts:
          - mountPath: /certs
            name: certs
          - mountPath: /tokens
            name: tokens
          - mountPath: /maddog-certs/
            name: maddog-certs
        - command:
          - java
          - -jar
          - /package-svc.jar
          - --spring.profiles.active=prd-samtwo
          - --spring.config.location=/etc/firefly/config/
          env:
          - name: MY_NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: MY_POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: MY_POD_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.podIP
          - name: SERVICE_MODE
            value: multi
          - name: CONFIG_VERSION
            value: "7"
          - name: DARKLAUNCH
            value: "true"
          - name: INSTANCE_TYPE
            value: manifests
          - name: PACKAGE_QUEUE
            value: manifests.package
          - name: PROMOTION_QUEUE
            value: manifests.promotion
          - name: LATEST_FILE_QUEUE
            value: manifests.latestfile
          image: ops0-artifactrepo2-0-prd.data.sfdc.net/dva/firefly-package:176
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 10
            httpGet:
              path: /actuator
              port: admin-port
            initialDelaySeconds: 30
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 30
          name: firefly-package
          ports:
          - containerPort: 8081
            name: admin-port
            protocol: TCP
          volumeMounts:
          - mountPath: /certs
            name: certs
          - mountPath: /root/.ssh/
            name: git-ssh-keys
          - mountPath: /etc/firefly/config
            name: app-config-volume
          - mountPath: /tmp
            name: docker-build-dir
        - image: ops0-artifactrepo2-0-prd.data.sfdc.net/dva/firefly-dind:86
          name: dind-daemon
          securityContext:
            privileged: true
          volumeMounts:
          - mountPath: /var/lib/docker
            name: docker-graph-storage
          - mountPath: /tmp
            name: docker-build-dir
          - mountPath: /root/.ssh/
            name: git-ssh-keys
        initContainers:
        - args:
          - /sam/madkub-client
          - --madkub-endpoint
          - https://10.254.208.254:32007
          - --maddog-endpoint
          - https://all.pkicontroller.pki.blank.prd.prod.non-estates.sfdcsd.net:8443
          - --maddog-server-ca
          - /maddog-certs/ca/security-ca.pem
          - --madkub-server-ca
          - /maddog-certs/ca/cacerts.pem
          - --cert-folders
          - certs:/certs/
          - --token-folder
          - /tokens/
          - --requested-cert-type
          - client
          - --ca-folder
          - /maddog-certs/ca
          env:
          - name: MADKUB_NODENAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: MADKUB_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: MADKUB_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: ops0-artifactrepo2-0-prd.data.sfdc.net/docker-release-candidate/tnrp/sam/madkub:1.0.0-0000077-b1d3a629
          imagePullPolicy: IfNotPresent
          name: madkub-init
          volumeMounts:
          - mountPath: /certs
            name: certs
          - mountPath: /maddog-certs/
            name: maddog-certs
          - mountPath: /tokens
            name: tokens
        nodeSelector:
          pool: prd-sam_tnrp_merger
        terminationGracePeriodSeconds: 10
        volumes:
        - name: app-config-volume
          projected:
            sources:
            - configMap:
                items:
                - key: application.yml
                  path: application.yml
                name: firefly-package-manifests-configmap
        - emptyDir: {}
          name: docker-graph-storage
        - emptyDir: {}
          name: docker-build-dir
        - emptyDir:
            medium: Memory
          name: tokens
        - emptyDir:
            medium: Memory
          name: certs
        - emptyDir:
            medium: Memory
          name: git-ssh-keys
        - hostPath:
            path: /etc/pki_service
          name: maddog-certs
- apiVersion: v1
  data:
    application.yml: |-
      {
          "appconfig": {
              "artifactory": {
                  "artifactory-content-repo-password": "${artifactoryContentRepoPassword#FromSecretService}",
                  "artifactory-content-repo-password-prod": "${artifactoryContentRepoPasswordProd#FromSecretService}",
                  "artifactory-content-repo-user-name": "svc_tnrp_ci",
                  "artifactory-content-repo-user-name-prod": "svc_tnrp_cd",
                  "artifactory-dev-endpoint": "https://${appconfig.artifactory.artifactory-dev-host}/",
                  "artifactory-dev-host": "ops0-artifactrepo1-0-prd.data.sfdc.net",
                  "artifactory-p2p-api-endpoint": "https://${appconfig.artifactory.artifactory-p2p-host}/artifactory/",
                  "artifactory-p2p-endpoint": "https://${appconfig.artifactory.artifactory-p2p-host}/",
                  "artifactory-p2p-host": "ops0-artifactrepo2-0-prd.data.sfdc.net",
                  "artifactory-password": "${artifactoryPassword#FromSecretService}",
                  "artifactory-user-name": "svc_tnrp_artifactory",
                  "backoff-time": "1000ms",
                  "connection-timeout": "20000ms",
                  "max-retry": 3,
                  "socket-timeout": "30000ms"
              },
              "back-off-period": "2000ms",
              "context-prefix": "",
              "docker": {
                  "connect-timeout": "480000ms",
                  "docker-cert-path": "/etc/docker/certs.d",
                  "read-timeout": "480000ms",
                  "remote-docker-host": "http://localhost:2375"
              },
              "health-check-repo": "tnrpfirefly",
              "instance-type": "${INSTANCE_TYPE}",
              "max-attempts": 4,
              "repo-config": {
                  "manifest_driven_promotions": {
                      "type": "artifacts"
                  },
                  "manifests": {
                      "type": "content_and_artifacts"
                  }
              },
              "root-dir": "/tmp",
              "security": {
                  "secret-service-url": "secretservice.dmz.salesforce.com"
              },
              "service-mode": "${SERVICE_MODE}"
          },
          "firefly": {
              "monitoring": {
                  "datacenter": "prd",
                  "pod": "firefly-package",
                  "report-frequency": 1,
                  "superpod": "NONE",
                  "system-exception-threshold": 5
              }
          },
          "logging": {
              "level": {
                  "com.salesforce": "DEBUG",
                  "org": "INFO"
              },
              "pattern": {
                  "console": "%d{yyyy-MM-dd HH:mm:ss} - %C:%L[%thread] %-5level - instanceType=${INSTANCE_TYPE} e=%X{eventType} sha=%X{sha} repo=%X{repo} pr=%X{pr} c=%X{committer} - details=[%msg]  %n"
              }
          },
          "management": {
              "endpoint": {
                  "health": {
                      "show-details": "always"
                  }
              },
              "endpoints": {
                  "web": {
                      "exposure": {
                          "include": "*"
                      }
                  }
              },
              "server": {
                  "port": 8081
              }
          },
          "rabbitmq": {
              "exchange-name": "firefly.delivery",
              "latestfile-q": "${LATEST_FILE_QUEUE}",
              "package-q": "${PACKAGE_QUEUE}",
              "promotion-q": "${PROMOTION_QUEUE}",
              "service-mode": "${SERVICE_MODE}"
          },
          "scm": {
              "ghe": {
                  "api-url": "https://git.soma.salesforce.com/api/v3/",
                  "clone-timeout": "60s",
                  "connect-timeout": "5s",
                  "dark-launch": "${DARKLAUNCH}",
                  "keep-alive-duration": "60000ms",
                  "max-attempts": 3,
                  "max-idle-connections": 10,
                  "oauth-token": "${gitRWPassword#FromSecretService}",
                  "read-timeout": "5s",
                  "url": "https://git.soma.salesforce.com",
                  "user": "svc-tnrp-git-rw",
                  "write-timeout": "5s"
              }
          },
          "server": {
              "port": -1
          },
          "spring": {
              "rabbitmq": {
                  "connection-timeout": "10000ms",
                  "host": "shared0-samtwokubeapi1-1-prd.eng.sfdc.net",
                  "listener": {
                      "simple": {
                          "retry": {
                              "enabled": true,
                              "initial-interval": "1000ms",
                              "max-attempts": 3,
                              "max-interval": "10000ms",
                              "multiplier": 2,
                              "stateless": true
                          }
                      }
                  },
                  "password": "${rabbitMqDefaultPass#FromSecretService}",
                  "port": "33672",
                  "publisher-confirms": true,
                  "publisher-returns": true,
                  "template": {
                      "mandatory": true,
                      "reply-timeout": "60000ms",
                      "retry": {
                          "enabled": true,
                          "initial-interval": "1000ms",
                          "max-attempts": 10,
                          "max-interval": "10000ms",
                          "multiplier": 2
                      }
                  },
                  "username": "sfdc-rabbitmq"
              }
          }
      }
  kind: ConfigMap
  metadata:
    labels:
      sam.data.sfdc.net/owner: tnrp
    name: firefly-package-singleton-manifests-configmap
    namespace: firefly
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: firefly-package-singleton
      sam.data.sfdc.net/owner: tnrp
    name: firefly-package-singleton-manifests-service
    namespace: firefly
  spec:
    ports:
    - name: admin-port
      port: 8081
      protocol: TCP
      targetPort: 8081
    selector:
      name: firefly-package-singleton
    type: LoadBalancer
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    labels:
      name: firefly-package-singleton
      sam.data.sfdc.net/owner: tnrp
    name: firefly-package-singleton-manifests-deployment
    namespace: firefly
  spec:
    replicas: 2
    selector:
      matchLabels:
        name: firefly-package-singleton
        sam.data.sfdc.net/owner: tnrp
    strategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        annotations:
          madkub.sam.sfdc.net/allcerts: '{"certreqs":[{"name": "certs","san":["firefly"],"cert-type":"client",
            "kingdom":"prd", "role": "firefly"}]}'
        labels:
          name: firefly-package-singleton
          sam.data.sfdc.net/owner: tnrp
        name: firefly-package-singleton-manifests-deployment
        namespace: firefly
      spec:
        containers:
        - args:
          - /sam/madkub-client
          - --madkub-endpoint
          - https://10.254.208.254:32007
          - --maddog-endpoint
          - https://all.pkicontroller.pki.blank.prd.prod.non-estates.sfdcsd.net:8443
          - --maddog-server-ca
          - /maddog-certs/ca/security-ca.pem
          - --madkub-server-ca
          - /maddog-certs/ca/cacerts.pem
          - --cert-folders
          - certs:/certs/
          - --token-folder
          - /tokens/
          - --requested-cert-type
          - client
          - --refresher
          - --run-init-for-refresher-mode
          - --ca-folder
          - /maddog-certs/ca
          env:
          - name: MADKUB_NODENAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: MADKUB_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: MADKUB_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          image: ops0-artifactrepo2-0-prd.data.sfdc.net/docker-release-candidate/tnrp/sam/madkub:1.0.0-0000077-b1d3a629
          name: madkub-refresher
          resources: {}
          volumeMounts:
          - mountPath: /certs
            name: certs
          - mountPath: /tokens
            name: tokens
          - mountPath: /maddog-certs/
            name: maddog-certs
        - command:
          - java
          - -jar
          - /package-svc.jar
          - --spring.profiles.active=prd-samtwo
          - --spring.config.location=/etc/firefly/config/
          env:
          - name: MY_NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: MY_POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: MY_POD_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.podIP
          - name: SERVICE_MODE
            value: singleton
          - name: CONFIG_VERSION
            value: "5"
          - name: DARKLAUNCH
            value: "true"
          - name: INSTANCE_TYPE
            value: manifests
          - name: PACKAGE_QUEUE
            value: manifests.package
          - name: PROMOTION_QUEUE
            value: manifests.promotion
          - name: LATEST_FILE_QUEUE
            value: manifests.latestfile
          image: ops0-artifactrepo2-0-prd.data.sfdc.net/dva/firefly-package:176
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 10
            httpGet:
              path: /actuator
              port: admin-port
            initialDelaySeconds: 30
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 30
          name: firefly-package-singleton
          ports:
          - containerPort: 8081
            name: admin-port
            protocol: TCP
          volumeMounts:
          - mountPath: /certs
            name: certs
          - mountPath: /root/.ssh/
            name: git-ssh-keys
          - mountPath: /etc/firefly/config
            name: app-config-volume
        initContainers:
        - args:
          - /sam/madkub-client
          - --madkub-endpoint
          - https://10.254.208.254:32007
          - --maddog-endpoint
          - https://all.pkicontroller.pki.blank.prd.prod.non-estates.sfdcsd.net:8443
          - --maddog-server-ca
          - /maddog-certs/ca/security-ca.pem
          - --madkub-server-ca
          - /maddog-certs/ca/cacerts.pem
          - --cert-folders
          - certs:/certs/
          - --token-folder
          - /tokens/
          - --requested-cert-type
          - client
          - --ca-folder
          - /maddog-certs/ca
          env:
          - name: MADKUB_NODENAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: MADKUB_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: MADKUB_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: ops0-artifactrepo2-0-prd.data.sfdc.net/docker-release-candidate/tnrp/sam/madkub:1.0.0-0000077-b1d3a629
          imagePullPolicy: IfNotPresent
          name: madkub-init
          volumeMounts:
          - mountPath: /certs
            name: certs
          - mountPath: /maddog-certs/
            name: maddog-certs
          - mountPath: /tokens
            name: tokens
        nodeSelector:
          pool: prd-sam_tnrp_merger
        terminationGracePeriodSeconds: 10
        volumes:
        - name: app-config-volume
          projected:
            sources:
            - configMap:
                items:
                - key: application.yml
                  path: application.yml
                name: firefly-package-singleton-manifests-configmap
        - emptyDir: {}
          name: docker-graph-storage
        - emptyDir: {}
          name: docker-build-dir
        - emptyDir:
            medium: Memory
          name: tokens
        - emptyDir:
            medium: Memory
          name: certs
        - emptyDir:
            medium: Memory
          name: git-ssh-keys
        - hostPath:
            path: /etc/pki_service
          name: maddog-certs
- apiVersion: v1
  data:
    application.yml: |-
      {
          "appconfig": {
              "artifactory": {
                  "artifactory-dev-host": "ops0-artifactrepo1-0-prd.data.sfdc.net",
                  "artifactory-p2p-host": "ops0-artifactrepo2-0-prd.data.sfdc.net",
                  "artifactory-password": "${artifactoryPassword#FromSecretService}",
                  "artifactory-user-name": "svc_tnrp_artifactory"
              },
              "back-off-period": "2000ms",
              "context-prefix": "",
              "docker": {
                  "connect-timeout": "480000ms",
                  "docker-cert-path": "/etc/docker/certs.d",
                  "read-timeout": "480000ms",
                  "remote-docker-host": "http://localhost:2375"
              },
              "evaluation-config": {
                  "pipeline-manifest-json": "/tnrp/pipeline_manifest.json"
              },
              "health-check-repo": "tnrpfirefly",
              "instance-type": "${INSTANCE_TYPE}",
              "workspace-config": {
                  "root-dir": "/tmp"
              }
          },
          "firefly": {
              "monitoring": {
                  "datacenter": "prd",
                  "pod": "firefly-pullrequest",
                  "report-frequency": 1,
                  "superpod": "NONE",
                  "system-exception-threshold": 5
              }
          },
          "logging": {
              "level": {
                  "com.salesforce": "DEBUG",
                  "org": "INFO"
              },
              "pattern": {
                  "console": "%d{yyyy-MM-dd HH:mm:ss} - %C:%L[%thread] %-5level - instanceType=${instanceType} e=%X{eventType} sha=%X{sha} repo=%X{repo} pr=%X{pr} c=%X{committer} - details=[%msg]  %n"
              }
          },
          "management": {
              "endpoint": {
                  "health": {
                      "show-details": "always"
                  }
              },
              "endpoints": {
                  "web": {
                      "exposure": {
                          "include": "*"
                      }
                  }
              },
              "server": {
                  "port": 8081
              }
          },
          "rabbitmq": {
              "exchange-name": "firefly.delivery",
              "queue-name": "${RABBIT_MQ_QUEUE_NAME}"
          },
          "scm": {
              "ghe": {
                  "api-url": "https://git.soma.salesforce.com/api/v3/",
                  "clone-timeout": "60s",
                  "connect-timeout": "5s",
                  "dark-launch": "${DARKLAUNCH}",
                  "keep-alive-duration": "60000ms",
                  "max-attempts": 3,
                  "max-idle-connections": 10,
                  "oauth-token": "${gitRWPassword#FromSecretService}",
                  "read-timeout": "5s",
                  "url": "https://git.soma.salesforce.com",
                  "user": "svc-tnrp-git-rw",
                  "write-timeout": "5s"
              }
          },
          "server": {
              "port": -1
          },
          "spring": {
              "rabbitmq": {
                  "connection-timeout": "10000ms",
                  "host": "shared0-samtwokubeapi1-1-prd.eng.sfdc.net",
                  "listener": {
                      "simple": {
                          "retry": {
                              "enabled": true,
                              "initial-interval": "1000ms",
                              "max-attempts": 3,
                              "max-interval": "10000ms",
                              "multiplier": 2,
                              "stateless": true
                          }
                      }
                  },
                  "password": "${rabbitMqDefaultPass#FromSecretService}",
                  "port": "33672",
                  "publisher-confirms": true,
                  "publisher-returns": true,
                  "template": {
                      "mandatory": true,
                      "reply-timeout": "60000ms",
                      "retry": {
                          "enabled": true,
                          "initial-interval": "1000ms",
                          "max-attempts": 10,
                          "max-interval": "10000ms",
                          "multiplier": 2
                      }
                  },
                  "username": "sfdc-rabbitmq"
              }
          }
      }
  kind: ConfigMap
  metadata:
    labels:
      sam.data.sfdc.net/owner: tnrp
    name: firefly-pullrequest-manifests-configmap
    namespace: firefly
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: firefly-pullrequest
      sam.data.sfdc.net/owner: tnrp
    name: firefly-pullrequest-manifests-service
    namespace: firefly
  spec:
    ports:
    - name: admin-port
      port: 8081
      protocol: TCP
      targetPort: 8081
    selector:
      name: firefly-pullrequest
    type: LoadBalancer
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    labels:
      name: firefly-pullrequest
      sam.data.sfdc.net/owner: tnrp
    name: firefly-pullrequest-manifests-deployment
    namespace: firefly
  spec:
    replicas: 2
    selector:
      matchLabels:
        name: firefly-pullrequest
        sam.data.sfdc.net/owner: tnrp
    strategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        annotations:
          madkub.sam.sfdc.net/allcerts: '{"certreqs":[{"name": "certs","san":["firefly"],"cert-type":"client",
            "kingdom":"prd", "role": "firefly"}]}'
        labels:
          name: firefly-pullrequest
          sam.data.sfdc.net/owner: tnrp
        name: firefly-pullrequest-manifests-deployment
        namespace: firefly
      spec:
        containers:
        - args:
          - /sam/madkub-client
          - --madkub-endpoint
          - https://10.254.208.254:32007
          - --maddog-endpoint
          - https://all.pkicontroller.pki.blank.prd.prod.non-estates.sfdcsd.net:8443
          - --maddog-server-ca
          - /maddog-certs/ca/security-ca.pem
          - --madkub-server-ca
          - /maddog-certs/ca/cacerts.pem
          - --cert-folders
          - certs:/certs/
          - --token-folder
          - /tokens/
          - --requested-cert-type
          - client
          - --refresher
          - --run-init-for-refresher-mode
          - --ca-folder
          - /maddog-certs/ca
          env:
          - name: MADKUB_NODENAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: MADKUB_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: MADKUB_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          image: ops0-artifactrepo2-0-prd.data.sfdc.net/docker-release-candidate/tnrp/sam/madkub:1.0.0-0000077-b1d3a629
          name: madkub-refresher
          resources: {}
          volumeMounts:
          - mountPath: /certs
            name: certs
          - mountPath: /tokens
            name: tokens
          - mountPath: /maddog-certs/
            name: maddog-certs
        - command:
          - java
          - -jar
          - /pullrequest-svc.jar
          - --spring.profiles.active=prd-samtwo
          - --spring.config.location=/etc/firefly/config/
          env:
          - name: MY_NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: MY_POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: MY_POD_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.podIP
          - name: CONFIG_VERSION
            value: "8"
          - name: DARKLAUNCH
            value: "true"
          - name: INSTANCE_TYPE
            value: manifests
          - name: RABBIT_MQ_QUEUE_NAME
            value: manifests.pr
          image: ops0-artifactrepo2-0-prd.data.sfdc.net/dva/firefly-pullrequest:176
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 10
            httpGet:
              path: /actuator
              port: admin-port
            initialDelaySeconds: 30
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 30
          name: firefly-pullrequest
          ports:
          - containerPort: 8081
            name: admin-port
            protocol: TCP
          volumeMounts:
          - mountPath: /certs
            name: certs
          - mountPath: /root/.ssh/
            name: git-ssh-keys
          - mountPath: /etc/firefly/config
            name: app-config-volume
          - mountPath: /tmp
            name: docker-build-dir
        - image: ops0-artifactrepo2-0-prd.data.sfdc.net/dva/firefly-dind:86
          name: dind-daemon
          securityContext:
            privileged: true
          volumeMounts:
          - mountPath: /var/lib/docker
            name: docker-graph-storage
          - mountPath: /tmp
            name: docker-build-dir
          - mountPath: /root/.ssh/
            name: git-ssh-keys
        initContainers:
        - args:
          - /sam/madkub-client
          - --madkub-endpoint
          - https://10.254.208.254:32007
          - --maddog-endpoint
          - https://all.pkicontroller.pki.blank.prd.prod.non-estates.sfdcsd.net:8443
          - --maddog-server-ca
          - /maddog-certs/ca/security-ca.pem
          - --madkub-server-ca
          - /maddog-certs/ca/cacerts.pem
          - --cert-folders
          - certs:/certs/
          - --token-folder
          - /tokens/
          - --requested-cert-type
          - client
          - --ca-folder
          - /maddog-certs/ca
          env:
          - name: MADKUB_NODENAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: MADKUB_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: MADKUB_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: ops0-artifactrepo2-0-prd.data.sfdc.net/docker-release-candidate/tnrp/sam/madkub:1.0.0-0000077-b1d3a629
          imagePullPolicy: IfNotPresent
          name: madkub-init
          volumeMounts:
          - mountPath: /certs
            name: certs
          - mountPath: /maddog-certs/
            name: maddog-certs
          - mountPath: /tokens
            name: tokens
        nodeSelector:
          pool: prd-sam_tnrp_merger
        terminationGracePeriodSeconds: 10
        volumes:
        - name: app-config-volume
          projected:
            sources:
            - configMap:
                items:
                - key: application.yml
                  path: application.yml
                name: firefly-pullrequest-manifests-configmap
        - emptyDir: {}
          name: docker-graph-storage
        - emptyDir: {}
          name: docker-build-dir
        - emptyDir:
            medium: Memory
          name: tokens
        - emptyDir:
            medium: Memory
          name: certs
        - emptyDir:
            medium: Memory
          name: git-ssh-keys
        - hostPath:
            path: /etc/pki_service
          name: maddog-certs
- apiVersion: v1
  data:
    application.yml: |-
      {
          "appconfig": {
              "artifactory": {
                  "artifactory-content-repo-password": "${artifactoryContentRepoPassword#FromSecretService}",
                  "artifactory-content-repo-password-prod": "${artifactoryContentRepoPasswordProd#FromSecretService}",
                  "artifactory-content-repo-user-name": "svc_tnrp_ci",
                  "artifactory-content-repo-user-name-prod": "svc_tnrp_cd",
                  "artifactory-dev-endpoint": "https://${appconfig.artifactory.artifactory-dev-host}/",
                  "artifactory-dev-host": "ops0-artifactrepo1-0-prd.data.sfdc.net",
                  "artifactory-p2p-api-endpoint": "https://${appconfig.artifactory.artifactory-p2p-host}/artifactory/",
                  "artifactory-p2p-endpoint": "https://${appconfig.artifactory.artifactory-p2p-host}/",
                  "artifactory-p2p-host": "ops0-artifactrepo2-0-prd.data.sfdc.net",
                  "artifactory-password": "${artifactoryPassword#FromSecretService}",
                  "artifactory-user-name": "svc_tnrp_artifactory",
                  "backoff-time": "1000ms",
                  "connection-timeout": "20000ms",
                  "max-retry": 3,
                  "socket-timeout": "30000ms"
              },
              "back-off-period": "2000ms",
              "context-prefix": "",
              "health-check-repo": "tnrpfirefly",
              "instance-type": "${INSTANCE_TYPE}",
              "repo-config": {
                  "manifest_driven_promotions": {
                      "type": "artifacts"
                  },
                  "manifests": {
                      "type": "content_and_artifacts"
                  }
              }
          },
          "firefly": {
              "monitoring": {
                  "datacenter": "prd",
                  "pod": "firefly-promotion",
                  "report-frequency": 1,
                  "superpod": "NONE",
                  "system-exception-threshold": 5
              }
          },
          "logging": {
              "level": {
                  "com.salesforce": "DEBUG",
                  "org": "INFO"
              },
              "pattern": {
                  "console": "%d{yyyy-MM-dd HH:mm:ss} - %C:%L[%thread] %-5level - instanceType=${instanceType} - details=[%msg]  %n"
              }
          },
          "management": {
              "endpoint": {
                  "health": {
                      "show-details": "always"
                  }
              },
              "endpoints": {
                  "web": {
                      "exposure": {
                          "include": "*"
                      }
                  }
              },
              "server": {
                  "port": 8081
              }
          },
          "rabbitmq": {
              "exchange-name": "firefly.delivery",
              "instance-type": "${INSTANCE_TYPE}",
              "queue-name": "${RABBIT_MQ_QUEUE_NAME}"
          },
          "scm": {
              "ghe": {
                  "api-url": "https://git.soma.salesforce.com/api/v3/",
                  "clone-timeout": "60s",
                  "connect-timeout": "5s",
                  "dark-launch": "${DARKLAUNCH}",
                  "keep-alive-duration": "60000ms",
                  "max-attempts": 3,
                  "max-idle-connections": 10,
                  "oauth-token": "${gitRWPassword#FromSecretService}",
                  "read-timeout": "5s",
                  "url": "https://git.soma.salesforce.com",
                  "user": "svc-tnrp-git-rw",
                  "write-timeout": "5s"
              }
          },
          "server": {
              "port": -1
          },
          "spring": {
              "rabbitmq": {
                  "connection-timeout": "10000ms",
                  "host": "shared0-samtwokubeapi1-1-prd.eng.sfdc.net",
                  "listener": {
                      "simple": {
                          "retry": {
                              "enabled": true,
                              "initial-interval": "1000ms",
                              "max-attempts": 3,
                              "max-interval": "10000ms",
                              "multiplier": 2,
                              "stateless": true
                          }
                      }
                  },
                  "password": "${rabbitMqDefaultPass#FromSecretService}",
                  "port": "33672",
                  "publisher-confirms": true,
                  "publisher-returns": true,
                  "template": {
                      "mandatory": true,
                      "reply-timeout": "60000ms",
                      "retry": {
                          "enabled": true,
                          "initial-interval": "1000ms",
                          "max-attempts": 10,
                          "max-interval": "10000ms",
                          "multiplier": 2
                      }
                  },
                  "username": "sfdc-rabbitmq"
              }
          }
      }
  kind: ConfigMap
  metadata:
    labels:
      sam.data.sfdc.net/owner: tnrp
    name: firefly-promotion-manifests-configmap
    namespace: firefly
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: firefly-promotion
      sam.data.sfdc.net/owner: tnrp
    name: firefly-promotion-manifests-service
    namespace: firefly
  spec:
    ports:
    - name: admin-port
      port: 8081
      protocol: TCP
      targetPort: 8081
    selector:
      name: firefly-promotion
    type: LoadBalancer
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    labels:
      name: firefly-promotion
      sam.data.sfdc.net/owner: tnrp
    name: firefly-promotion-manifests-deployment
    namespace: firefly
  spec:
    replicas: 2
    selector:
      matchLabels:
        name: firefly-promotion
        sam.data.sfdc.net/owner: tnrp
    strategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        annotations:
          madkub.sam.sfdc.net/allcerts: '{"certreqs":[{"name": "certs","san":["firefly"],"cert-type":"client",
            "kingdom":"prd", "role": "firefly"}]}'
        labels:
          name: firefly-promotion
          sam.data.sfdc.net/owner: tnrp
        name: firefly-promotion-manifests-deployment
        namespace: firefly
      spec:
        containers:
        - args:
          - /sam/madkub-client
          - --madkub-endpoint
          - https://10.254.208.254:32007
          - --maddog-endpoint
          - https://all.pkicontroller.pki.blank.prd.prod.non-estates.sfdcsd.net:8443
          - --maddog-server-ca
          - /maddog-certs/ca/security-ca.pem
          - --madkub-server-ca
          - /maddog-certs/ca/cacerts.pem
          - --cert-folders
          - certs:/certs/
          - --token-folder
          - /tokens/
          - --requested-cert-type
          - client
          - --refresher
          - --run-init-for-refresher-mode
          - --ca-folder
          - /maddog-certs/ca
          env:
          - name: MADKUB_NODENAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: MADKUB_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: MADKUB_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          image: ops0-artifactrepo2-0-prd.data.sfdc.net/docker-release-candidate/tnrp/sam/madkub:1.0.0-0000077-b1d3a629
          name: madkub-refresher
          resources: {}
          volumeMounts:
          - mountPath: /certs
            name: certs
          - mountPath: /tokens
            name: tokens
          - mountPath: /maddog-certs/
            name: maddog-certs
        - command:
          - java
          - -jar
          - /promotion-svc.jar
          - --spring.profiles.active=prd-samtwo
          - --spring.config.location=/etc/firefly/config/
          env:
          - name: MY_NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: MY_POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: MY_POD_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.podIP
          - name: CONFIG_VERSION
            value: "3"
          - name: DARKLAUNCH
            value: "true"
          - name: INSTANCE_TYPE
            value: manifests
          - name: RABBIT_MQ_QUEUE_NAME
            value: manifests.promotion
          image: ops0-artifactrepo2-0-prd.data.sfdc.net/dva/firefly-promotion:176
          imagePullPolicy: Always
          name: firefly-promotion
          ports:
          - containerPort: 8081
            name: admin-port
            protocol: TCP
          volumeMounts:
          - mountPath: /certs
            name: certs
          - mountPath: /root/.ssh/
            name: git-ssh-keys
          - mountPath: /etc/firefly/config
            name: app-config-volume
        initContainers:
        - args:
          - /sam/madkub-client
          - --madkub-endpoint
          - https://10.254.208.254:32007
          - --maddog-endpoint
          - https://all.pkicontroller.pki.blank.prd.prod.non-estates.sfdcsd.net:8443
          - --maddog-server-ca
          - /maddog-certs/ca/security-ca.pem
          - --madkub-server-ca
          - /maddog-certs/ca/cacerts.pem
          - --cert-folders
          - certs:/certs/
          - --token-folder
          - /tokens/
          - --requested-cert-type
          - client
          - --ca-folder
          - /maddog-certs/ca
          env:
          - name: MADKUB_NODENAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: MADKUB_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: MADKUB_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: ops0-artifactrepo2-0-prd.data.sfdc.net/docker-release-candidate/tnrp/sam/madkub:1.0.0-0000077-b1d3a629
          imagePullPolicy: IfNotPresent
          name: madkub-init
          volumeMounts:
          - mountPath: /certs
            name: certs
          - mountPath: /maddog-certs/
            name: maddog-certs
          - mountPath: /tokens
            name: tokens
        nodeSelector:
          pool: prd-sam_tnrp_merger
        terminationGracePeriodSeconds: 10
        volumes:
        - name: app-config-volume
          projected:
            sources:
            - configMap:
                items:
                - key: application.yml
                  path: application.yml
                name: firefly-promotion-manifests-configmap
        - emptyDir: {}
          name: docker-graph-storage
        - emptyDir: {}
          name: docker-build-dir
        - emptyDir:
            medium: Memory
          name: tokens
        - emptyDir:
            medium: Memory
          name: certs
        - emptyDir:
            medium: Memory
          name: git-ssh-keys
        - hostPath:
            path: /etc/pki_service
          name: maddog-certs
kind: List
