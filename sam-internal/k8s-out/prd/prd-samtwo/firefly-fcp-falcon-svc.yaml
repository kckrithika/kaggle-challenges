apiVersion: v1
items:
- apiVersion: v1
  data:
    application.yml: |-
      {
          "appconfig": {
              "artifactory": {
                  "artifact-manifest-time-property-key": "snd_artifact_promotion_time",
                  "artifactory-content-repo-gcp": "content_repo_gcp",
                  "artifactory-content-repo-password": "${artifactoryContentRepoPassword#FromSecretService}",
                  "artifactory-content-repo-password-prod": "${artifactoryContentRepoPasswordProd#FromSecretService}",
                  "artifactory-content-repo-prod": "content_repo_prod",
                  "artifactory-content-repo-rc": "content_repo_rc",
                  "artifactory-content-repo-user-name": "svc_tnrp_ci",
                  "artifactory-content-repo-user-name-prod": "svc_tnrp_cd",
                  "artifactory-dev-api-endpoint": "https://${appconfig.artifactory.artifactory-dev-host}/artifactory/",
                  "artifactory-dev-endpoint": "https://${appconfig.artifactory.artifactory-dev-host}/",
                  "artifactory-dev-host": "ops0-artifactrepo1-0-prd.data.sfdc.net",
                  "artifactory-p2p-api-endpoint": "https://${appconfig.artifactory.artifactory-p2p-host}/artifactory/",
                  "artifactory-p2p-endpoint": "https://${appconfig.artifactory.artifactory-p2p-host}/",
                  "artifactory-p2p-host": "ops0-artifactrepo2-0-prd.data.sfdc.net",
                  "artifactory-password": "${artifactoryPassword#FromSecretService}",
                  "artifactory-remote-content-repo": "content_repo",
                  "artifactory-user-name": "svc_tnrp_artifactory",
                  "backoff-time": "1000ms",
                  "connection-timeout": "20000ms",
                  "max-retry": 3,
                  "socket-timeout": "30000ms"
              },
              "back-off-period": "2000ms",
              "context-prefix": "",
              "deliver-to-1p": "false",
              "deliver-to-gcp": "true",
              "docker": {
                  "connect-timeout": "480000ms",
                  "docker-cert-path": "/etc/docker/certs.d",
                  "force-create-container": true,
                  "read-timeout": "480000ms",
                  "remote-docker-host": "http://localhost:2375"
              },
              "gcs": {
                  "enabled": true,
                  "service-account-key": "${gcsUploaderKey#FromSecretService}"
              },
              "gcs-bucket": "fcparchive",
              "gus": {
                  "enable_gus_case_check": false,
                  "enforce_gus_case_check": false,
                  "password": "${gusUserPassword#FromSecretService}",
                  "use_proxy": true,
                  "username": "${gusUserName#FromSecretService}"
              },
              "image-promotion-yaml": "image-promotion.yaml",
              "instance-type": "${INSTANCE_TYPE}",
              "max-attempts": 4,
              "max-latency": "600000ms",
              "multi-repo-supported": true,
              "repo-config": {
                  "manifest_driven_promotions": {
                      "type": "artifacts"
                  },
                  "manifests": {
                      "type": "content_and_artifacts"
                  }
              },
              "root-dir": "/tmp",
              "s3": {
                  "enabled": true,
                  "s3-access-key-id": "${s3AccessKeyId#FromSecretService}",
                  "s3-grid-configs": [
                      {
                          "access-key-id": "${s3AccessKeyId#FromSecretService}",
                          "bucket-configs-by-type": {
                              "fcp": [
                                  {
                                      "bucket-name": "fcparchive"
                                  }
                              ],
                              "helm": [
                                  {
                                      "bucket-name": "sfcd-helm"
                                  }
                              ],
                              "terraform": [
                                  {
                                      "bucket-name": "sfcd-terraform"
                                  }
                              ]
                          },
                          "environment-type": "ffdev",
                          "region": "us-east-2",
                          "secret-access-key": "${s3SecretAccessKey#FromSecretService}"
                      },
                      {
                          "access-key-id": "${ESVC1_service_firefly_key#FromSecretService}",
                          "bucket-configs-by-type": {
                              "fcp": [
                                  {
                                      "bucket-name": "esvc-us-east-2-sfcd-fcp-archive"
                                  }
                              ],
                              "helm": [
                                  {
                                      "bucket-name": "esvc-us-east-2-sfcd-helm-archive"
                                  }
                              ],
                              "terraform": [
                                  {
                                      "bucket-name": "esvc-us-east-2-sfcd-terraform"
                                  }
                              ]
                          },
                          "environment-type": "prod",
                          "region": "us-east-2",
                          "role-arn": "${prodRoleArn#FromSecretService}",
                          "secret-access-key": "${ESVC1_service_firefly_secret#FromSecretService}"
                      }
                  ],
                  "s3-secret-access-key": "${s3SecretAccessKey#FromSecretService}"
              },
              "s3-bucket": "fcparchive",
              "security": {
                  "secret-service-url": "secretservice.dmz.salesforce.com"
              },
              "service-mode": "${SERVICE_MODE}"
          },
          "firefly": {
              "monitoring": {
                  "enable-funnel-publisher": true,
                  "enable-metrics-logging": false,
                  "funnel": {
                      "avro-schema-fingerprint": "AVG7NnlcHNdk4t_zn2JBnQ",
                      "backoff-time": 1,
                      "base-path": "funnel",
                      "endpoint": "ajna0-funnel1-0-prd.data.sfdc.net",
                      "funnel-api-version": "v1",
                      "http-port": 80,
                      "https-port": 443,
                      "max-publish-tries": 3,
                      "publish-api": "publishBatch",
                      "ssl-enabled": false
                  },
                  "metric-fields": {
                      "common-tags": {
                          "k8.namespace": "${MY_POD_NAMESPACE}",
                          "k8.node.name": "${MY_NODE_NAME}",
                          "repo": "${INSTANCE_TYPE}"
                      },
                      "datacenter": "prd",
                      "pod": "firefly-package",
                      "service": "firefly",
                      "subservice": "${MY_APP_NAME}",
                      "superpod": "prd-samtwo"
                  },
                  "report-frequency": 1,
                  "system-exception-threshold": 5
              }
          },
          "logging": {
              "level": {
                  "com.salesforce": "INFO",
                  "com.salesforce.firefly": "DEBUG",
                  "com.salesforce.firefly.metrics": "INFO",
                  "org": "INFO"
              },
              "pattern": {
                  "console": "%d{yyyy-MM-dd HH:mm:ss} - %C:%L[%thread] %-5level - e=%X{eventType} sha=%X{sha} repo=%X{repo} pr=%X{pr} c=%X{committer} - details=[%msg]  %n"
              }
          },
          "management": {
              "endpoint": {
                  "health": {
                      "enabled": true,
                      "show-details": "always"
                  },
                  "metrics": {
                      "enabled": true
                  }
              },
              "endpoints": {
                  "enabled-by-default": "false",
                  "web": {
                      "exposure": {
                          "include": "health, metrics"
                      }
                  }
              },
              "server": {
                  "port": 8081
              }
          },
          "rabbitmq": {
              "exchange-name": "firefly.delivery",
              "latestfile-q": "${LATEST_FILE_QUEUE}",
              "package-q": "${PACKAGE_QUEUE}",
              "promotion-q": "${PROMOTION_QUEUE}",
              "service-mode": "${SERVICE_MODE}"
          },
          "scm": {
              "ghe": {
                  "api-url": "https://git.soma.salesforce.com/api/v3/",
                  "clone-timeout": "60s",
                  "connect-timeout": "60s",
                  "dark-launch": "${DARKLAUNCH}",
                  "http-logging-interceptor-level": "NONE",
                  "keep-alive-duration": "60000ms",
                  "max-attempts": 3,
                  "max-idle-connections": 10,
                  "oauth-token": "${gitRWPassword#FromSecretService}",
                  "read-timeout": "60s",
                  "url": "https://git.soma.salesforce.com",
                  "user": "svc-tnrp-git-rw",
                  "write-timeout": "60s"
              }
          },
          "server": {
              "port": -1
          },
          "spring": {
              "rabbitmq": {
                  "connection-timeout": "10000ms",
                  "host": "firefly-rabbitmq.firefly.prd-samtwo.prd.slb.sfdc.net",
                  "listener": {
                      "simple": {
                          "retry": {
                              "enabled": true,
                              "initial-interval": "1000ms",
                              "max-attempts": 3,
                              "max-interval": "10000ms",
                              "multiplier": 2,
                              "stateless": true
                          }
                      }
                  },
                  "password": "${rabbitMqAdmin#FromSecretService}",
                  "port": "5672",
                  "publisher-confirms": true,
                  "publisher-returns": true,
                  "template": {
                      "mandatory": true,
                      "reply-timeout": "60000ms",
                      "retry": {
                          "enabled": true,
                          "initial-interval": "1000ms",
                          "max-attempts": 10,
                          "max-interval": "10000ms",
                          "multiplier": 2
                      }
                  },
                  "username": "rabbitmq-admin"
              }
          }
      }
  kind: ConfigMap
  metadata:
    labels:
      sam.data.sfdc.net/owner: tnrp
    name: firefly-package-fcp-falcon-configmap
    namespace: firefly
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      slb.sfdc.net/cnames: |-
        [
          {
            "cname": "firefly-package-fcp-falcon-prd-samtwo.slb.sfdc.net"
          }
        ]
      slb.sfdc.net/name: firefly-package-fcp-falcon
      slb.sfdc.net/portconfigurations: |-
        [
          {
            "lbtype": "http",
            "port": 8081,
            "reencrypt": false,
            "sticky": 0,
            "targetPort": 8081,
            "tls": true
          }
        ]
    labels:
      app: firefly-package-fcp-falcon
      sam.data.sfdc.net/owner: tnrp
    name: firefly-package-fcp-falcon-service
    namespace: firefly
  spec:
    ports:
    - name: admin-port
      port: 8081
      protocol: TCP
      targetPort: 8081
    selector:
      name: firefly-package-fcp-falcon
    type: NodePort
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    labels:
      name: firefly-package-fcp-falcon
      sam.data.sfdc.net/owner: tnrp
    name: firefly-package-fcp-falcon-deployment
    namespace: firefly
  spec:
    replicas: 3
    selector:
      matchLabels:
        name: firefly-package-fcp-falcon
        sam.data.sfdc.net/owner: tnrp
    strategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        annotations:
          madkub.sam.sfdc.net/allcerts: |-
            {
                "certreqs": [
                    {
                        "cert-type": "client",
                        "kingdom": "prd",
                        "name": "certs",
                        "role": "firefly"
                    }
                ]
            }
        labels:
          name: firefly-package-fcp-falcon
          sam.data.sfdc.net/owner: tnrp
        name: firefly-package-fcp-falcon-deployment
        namespace: firefly
      spec:
        containers:
        - args:
          - /sam/madkub-client
          - --madkub-endpoint
          - https://10.254.208.254:32007
          - --maddog-endpoint
          - https://all.pkicontroller.pki.blank.prd.prod.non-estates.sfdcsd.net:8443
          - --maddog-server-ca
          - /maddog-certs/ca/security-ca.pem
          - --madkub-server-ca
          - /maddog-certs/ca/cacerts.pem
          - --cert-folders
          - certs:/certs/
          - --token-folder
          - /tokens/
          - --requested-cert-type
          - client
          - --refresher
          - --run-init-for-refresher-mode
          - --ca-folder
          - /maddog-certs/ca
          env:
          - name: MADKUB_NODENAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: MADKUB_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: MADKUB_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          image: ops0-artifactrepo2-0-prd.data.sfdc.net/docker-release-candidate/tnrp/sam/madkub:1.0.0-0000082-3d5c21b4
          name: madkub-refresher
          resources: {}
          volumeMounts:
          - mountPath: /certs
            name: certs
          - mountPath: /tokens
            name: tokens
          - mountPath: /maddog-certs/
            name: maddog-certs
        - command:
          - java
          - -jar
          - /package-svc.jar
          - --spring.profiles.active=prd-samtwo
          - --spring.config.location=/etc/firefly/config/
          env:
          - name: MY_NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: MY_POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: MY_POD_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.podIP
          - name: MY_POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: MY_APP_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.labels['name']
          - name: SERVICE_MODE
            value: multi
          - name: CONFIG_VERSION
            value: "25"
          - name: DARKLAUNCH
            value: "false"
          - name: INSTANCE_TYPE
            value: firefly-fcp-falcon
          - name: PACKAGE_QUEUE
            value: firefly-fcp-falcon.package
          - name: LATEST_FILE_QUEUE
            value: firefly-fcp-falcon.latestfile
          image: ops0-artifactrepo2-0-prd.data.sfdc.net/dva/firefly-package:473
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 10
            httpGet:
              path: /actuator
              port: admin-port
            initialDelaySeconds: 30
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 30
          name: firefly-package-fcp-falcon
          ports:
          - containerPort: 8081
            name: admin-port
            protocol: TCP
          volumeMounts:
          - mountPath: /certs
            name: certs
          - mountPath: /root/.ssh/
            name: git-ssh-keys
          - mountPath: /etc/firefly/config
            name: app-config-volume
          - mountPath: /tmp
            name: docker-build-dir
        - image: ops0-artifactrepo2-0-prd.data.sfdc.net/dva/firefly-dind:238
          name: dind-daemon
          securityContext:
            privileged: true
          volumeMounts:
          - mountPath: /tmp
            name: docker-build-dir
          - mountPath: /root/.ssh/
            name: git-ssh-keys
          - mountPath: /firefly
            name: firefly-root-dir
        initContainers:
        - args:
          - /sam/madkub-client
          - --madkub-endpoint
          - https://10.254.208.254:32007
          - --maddog-endpoint
          - https://all.pkicontroller.pki.blank.prd.prod.non-estates.sfdcsd.net:8443
          - --maddog-server-ca
          - /maddog-certs/ca/security-ca.pem
          - --madkub-server-ca
          - /maddog-certs/ca/cacerts.pem
          - --cert-folders
          - certs:/certs/
          - --token-folder
          - /tokens/
          - --requested-cert-type
          - client
          - --ca-folder
          - /maddog-certs/ca
          env:
          - name: MADKUB_NODENAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: MADKUB_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: MADKUB_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: ops0-artifactrepo2-0-prd.data.sfdc.net/docker-release-candidate/tnrp/sam/madkub:1.0.0-0000082-3d5c21b4
          imagePullPolicy: IfNotPresent
          name: madkub-init
          volumeMounts:
          - mountPath: /certs
            name: certs
          - mountPath: /maddog-certs/
            name: maddog-certs
          - mountPath: /tokens
            name: tokens
        nodeSelector:
          pool: prd-sam_tnrp_merger
        terminationGracePeriodSeconds: 10
        volumes:
        - name: app-config-volume
          projected:
            sources:
            - configMap:
                items:
                - key: application.yml
                  path: application.yml
                name: firefly-package-fcp-falcon-configmap
        - emptyDir: {}
          name: docker-build-dir
        - emptyDir: {}
          name: firefly-root-dir
        - emptyDir:
            medium: Memory
          name: tokens
        - emptyDir:
            medium: Memory
          name: certs
        - emptyDir:
            medium: Memory
          name: git-ssh-keys
        - hostPath:
            path: /etc/pki_service
          name: maddog-certs
- apiVersion: v1
  data:
    application.yml: |-
      {
          "appconfig": {
              "artifactory": {
                  "artifact-manifest-time-property-key": "snd_artifact_promotion_time",
                  "artifactory-content-repo-gcp": "content_repo_gcp",
                  "artifactory-content-repo-password": "${artifactoryContentRepoPassword#FromSecretService}",
                  "artifactory-content-repo-password-prod": "${artifactoryContentRepoPasswordProd#FromSecretService}",
                  "artifactory-content-repo-prod": "content_repo_prod",
                  "artifactory-content-repo-rc": "content_repo_rc",
                  "artifactory-content-repo-user-name": "svc_tnrp_ci",
                  "artifactory-content-repo-user-name-prod": "svc_tnrp_cd",
                  "artifactory-dev-api-endpoint": "https://${appconfig.artifactory.artifactory-dev-host}/artifactory/",
                  "artifactory-dev-endpoint": "https://${appconfig.artifactory.artifactory-dev-host}/",
                  "artifactory-dev-host": "ops0-artifactrepo1-0-prd.data.sfdc.net",
                  "artifactory-p2p-api-endpoint": "https://${appconfig.artifactory.artifactory-p2p-host}/artifactory/",
                  "artifactory-p2p-endpoint": "https://${appconfig.artifactory.artifactory-p2p-host}/",
                  "artifactory-p2p-host": "ops0-artifactrepo2-0-prd.data.sfdc.net",
                  "artifactory-password": "${artifactoryPassword#FromSecretService}",
                  "artifactory-remote-content-repo": "content_repo",
                  "artifactory-user-name": "svc_tnrp_artifactory",
                  "backoff-time": "1000ms",
                  "connection-timeout": "20000ms",
                  "max-retry": 3,
                  "socket-timeout": "30000ms"
              },
              "back-off-period": "2000ms",
              "context-prefix": "",
              "deliver-to-1p": "false",
              "deliver-to-gcp": "true",
              "docker": {
                  "connect-timeout": "480000ms",
                  "docker-cert-path": "/etc/docker/certs.d",
                  "force-create-container": true,
                  "read-timeout": "480000ms",
                  "remote-docker-host": "http://localhost:2375"
              },
              "gcs": {
                  "enabled": true,
                  "service-account-key": "${gcsUploaderKey#FromSecretService}"
              },
              "gcs-bucket": "fcparchive",
              "gus": {
                  "enable_gus_case_check": false,
                  "enforce_gus_case_check": false,
                  "password": "${gusUserPassword#FromSecretService}",
                  "use_proxy": true,
                  "username": "${gusUserName#FromSecretService}"
              },
              "image-promotion-yaml": "image-promotion.yaml",
              "instance-type": "${INSTANCE_TYPE}",
              "max-attempts": 4,
              "max-latency": "600000ms",
              "multi-repo-supported": true,
              "repo-config": {
                  "manifest_driven_promotions": {
                      "type": "artifacts"
                  },
                  "manifests": {
                      "type": "content_and_artifacts"
                  }
              },
              "root-dir": "/tmp",
              "s3": {
                  "enabled": true,
                  "s3-access-key-id": "${s3AccessKeyId#FromSecretService}",
                  "s3-grid-configs": [
                      {
                          "access-key-id": "${s3AccessKeyId#FromSecretService}",
                          "bucket-configs-by-type": {
                              "fcp": [
                                  {
                                      "bucket-name": "fcparchive"
                                  }
                              ],
                              "helm": [
                                  {
                                      "bucket-name": "sfcd-helm"
                                  }
                              ],
                              "terraform": [
                                  {
                                      "bucket-name": "sfcd-terraform"
                                  }
                              ]
                          },
                          "environment-type": "ffdev",
                          "region": "us-east-2",
                          "secret-access-key": "${s3SecretAccessKey#FromSecretService}"
                      },
                      {
                          "access-key-id": "${ESVC1_service_firefly_key#FromSecretService}",
                          "bucket-configs-by-type": {
                              "fcp": [
                                  {
                                      "bucket-name": "esvc-us-east-2-sfcd-fcp-archive"
                                  }
                              ],
                              "helm": [
                                  {
                                      "bucket-name": "esvc-us-east-2-sfcd-helm-archive"
                                  }
                              ],
                              "terraform": [
                                  {
                                      "bucket-name": "esvc-us-east-2-sfcd-terraform"
                                  }
                              ]
                          },
                          "environment-type": "prod",
                          "region": "us-east-2",
                          "role-arn": "${prodRoleArn#FromSecretService}",
                          "secret-access-key": "${ESVC1_service_firefly_secret#FromSecretService}"
                      }
                  ],
                  "s3-secret-access-key": "${s3SecretAccessKey#FromSecretService}"
              },
              "s3-bucket": "fcparchive",
              "security": {
                  "secret-service-url": "secretservice.dmz.salesforce.com"
              },
              "service-mode": "${SERVICE_MODE}"
          },
          "firefly": {
              "monitoring": {
                  "enable-funnel-publisher": true,
                  "enable-metrics-logging": false,
                  "funnel": {
                      "avro-schema-fingerprint": "AVG7NnlcHNdk4t_zn2JBnQ",
                      "backoff-time": 1,
                      "base-path": "funnel",
                      "endpoint": "ajna0-funnel1-0-prd.data.sfdc.net",
                      "funnel-api-version": "v1",
                      "http-port": 80,
                      "https-port": 443,
                      "max-publish-tries": 3,
                      "publish-api": "publishBatch",
                      "ssl-enabled": false
                  },
                  "metric-fields": {
                      "common-tags": {
                          "k8.namespace": "${MY_POD_NAMESPACE}",
                          "k8.node.name": "${MY_NODE_NAME}",
                          "repo": "${INSTANCE_TYPE}"
                      },
                      "datacenter": "prd",
                      "pod": "firefly-package",
                      "service": "firefly",
                      "subservice": "${MY_APP_NAME}",
                      "superpod": "prd-samtwo"
                  },
                  "report-frequency": 1,
                  "system-exception-threshold": 5
              }
          },
          "logging": {
              "level": {
                  "com.salesforce": "INFO",
                  "com.salesforce.firefly": "DEBUG",
                  "com.salesforce.firefly.metrics": "INFO",
                  "org": "INFO"
              },
              "pattern": {
                  "console": "%d{yyyy-MM-dd HH:mm:ss} - %C:%L[%thread] %-5level - e=%X{eventType} sha=%X{sha} repo=%X{repo} pr=%X{pr} c=%X{committer} - details=[%msg]  %n"
              }
          },
          "management": {
              "endpoint": {
                  "health": {
                      "enabled": true,
                      "show-details": "always"
                  },
                  "metrics": {
                      "enabled": true
                  }
              },
              "endpoints": {
                  "enabled-by-default": "false",
                  "web": {
                      "exposure": {
                          "include": "health, metrics"
                      }
                  }
              },
              "server": {
                  "port": 8081
              }
          },
          "rabbitmq": {
              "exchange-name": "firefly.delivery",
              "latestfile-q": "${LATEST_FILE_QUEUE}",
              "package-q": "${PACKAGE_QUEUE}",
              "promotion-q": "${PROMOTION_QUEUE}",
              "service-mode": "${SERVICE_MODE}"
          },
          "scm": {
              "ghe": {
                  "api-url": "https://git.soma.salesforce.com/api/v3/",
                  "clone-timeout": "60s",
                  "connect-timeout": "60s",
                  "dark-launch": "${DARKLAUNCH}",
                  "http-logging-interceptor-level": "NONE",
                  "keep-alive-duration": "60000ms",
                  "max-attempts": 3,
                  "max-idle-connections": 10,
                  "oauth-token": "${gitRWPassword#FromSecretService}",
                  "read-timeout": "60s",
                  "url": "https://git.soma.salesforce.com",
                  "user": "svc-tnrp-git-rw",
                  "write-timeout": "60s"
              }
          },
          "server": {
              "port": -1
          },
          "spring": {
              "rabbitmq": {
                  "connection-timeout": "10000ms",
                  "host": "firefly-rabbitmq.firefly.prd-samtwo.prd.slb.sfdc.net",
                  "listener": {
                      "simple": {
                          "retry": {
                              "enabled": true,
                              "initial-interval": "1000ms",
                              "max-attempts": 3,
                              "max-interval": "10000ms",
                              "multiplier": 2,
                              "stateless": true
                          }
                      }
                  },
                  "password": "${rabbitMqAdmin#FromSecretService}",
                  "port": "5672",
                  "publisher-confirms": true,
                  "publisher-returns": true,
                  "template": {
                      "mandatory": true,
                      "reply-timeout": "60000ms",
                      "retry": {
                          "enabled": true,
                          "initial-interval": "1000ms",
                          "max-attempts": 10,
                          "max-interval": "10000ms",
                          "multiplier": 2
                      }
                  },
                  "username": "rabbitmq-admin"
              }
          }
      }
  kind: ConfigMap
  metadata:
    labels:
      sam.data.sfdc.net/owner: tnrp
    name: firefly-package-singleton-fcp-falcon-configmap
    namespace: firefly
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      slb.sfdc.net/cnames: |-
        [
          {
            "cname": "firefly-package-singleton-fcp-falcon-prd-samtwo.slb.sfdc.net"
          }
        ]
      slb.sfdc.net/name: firefly-package-singleton-fcp-falcon
      slb.sfdc.net/portconfigurations: |-
        [
          {
            "lbtype": "http",
            "port": 8081,
            "reencrypt": false,
            "sticky": 0,
            "targetPort": 8081,
            "tls": true
          }
        ]
    labels:
      app: firefly-package-singleton-fcp-falcon
      sam.data.sfdc.net/owner: tnrp
    name: firefly-package-singleton-fcp-falcon-service
    namespace: firefly
  spec:
    ports:
    - name: admin-port
      port: 8081
      protocol: TCP
      targetPort: 8081
    selector:
      name: firefly-package-singleton-fcp-falcon
    type: NodePort
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    labels:
      name: firefly-package-singleton-fcp-falcon
      sam.data.sfdc.net/owner: tnrp
    name: firefly-package-singleton-fcp-falcon-deployment
    namespace: firefly
  spec:
    replicas: 1
    selector:
      matchLabels:
        name: firefly-package-singleton-fcp-falcon
        sam.data.sfdc.net/owner: tnrp
    strategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        annotations:
          madkub.sam.sfdc.net/allcerts: |-
            {
                "certreqs": [
                    {
                        "cert-type": "client",
                        "kingdom": "prd",
                        "name": "certs",
                        "role": "firefly"
                    }
                ]
            }
        labels:
          name: firefly-package-singleton-fcp-falcon
          sam.data.sfdc.net/owner: tnrp
        name: firefly-package-singleton-fcp-falcon-deployment
        namespace: firefly
      spec:
        containers:
        - args:
          - /sam/madkub-client
          - --madkub-endpoint
          - https://10.254.208.254:32007
          - --maddog-endpoint
          - https://all.pkicontroller.pki.blank.prd.prod.non-estates.sfdcsd.net:8443
          - --maddog-server-ca
          - /maddog-certs/ca/security-ca.pem
          - --madkub-server-ca
          - /maddog-certs/ca/cacerts.pem
          - --cert-folders
          - certs:/certs/
          - --token-folder
          - /tokens/
          - --requested-cert-type
          - client
          - --refresher
          - --run-init-for-refresher-mode
          - --ca-folder
          - /maddog-certs/ca
          env:
          - name: MADKUB_NODENAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: MADKUB_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: MADKUB_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          image: ops0-artifactrepo2-0-prd.data.sfdc.net/docker-release-candidate/tnrp/sam/madkub:1.0.0-0000082-3d5c21b4
          name: madkub-refresher
          resources: {}
          volumeMounts:
          - mountPath: /certs
            name: certs
          - mountPath: /tokens
            name: tokens
          - mountPath: /maddog-certs/
            name: maddog-certs
        - command:
          - java
          - -jar
          - /package-svc.jar
          - --spring.profiles.active=prd-samtwo
          - --spring.config.location=/etc/firefly/config/
          env:
          - name: MY_NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: MY_POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: MY_POD_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.podIP
          - name: MY_POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: MY_APP_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.labels['name']
          - name: SERVICE_MODE
            value: singleton
          - name: CONFIG_VERSION
            value: "22"
          - name: DARKLAUNCH
            value: "false"
          - name: INSTANCE_TYPE
            value: firefly-fcp-falcon
          - name: PACKAGE_QUEUE
            value: firefly-fcp-falcon.package
          - name: LATEST_FILE_QUEUE
            value: firefly-fcp-falcon.latestfile
          image: ops0-artifactrepo2-0-prd.data.sfdc.net/dva/firefly-package:473
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 10
            httpGet:
              path: /actuator
              port: admin-port
            initialDelaySeconds: 30
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 30
          name: firefly-package-singleton-fcp-falcon
          ports:
          - containerPort: 8081
            name: admin-port
            protocol: TCP
          volumeMounts:
          - mountPath: /certs
            name: certs
          - mountPath: /root/.ssh/
            name: git-ssh-keys
          - mountPath: /etc/firefly/config
            name: app-config-volume
        initContainers:
        - args:
          - /sam/madkub-client
          - --madkub-endpoint
          - https://10.254.208.254:32007
          - --maddog-endpoint
          - https://all.pkicontroller.pki.blank.prd.prod.non-estates.sfdcsd.net:8443
          - --maddog-server-ca
          - /maddog-certs/ca/security-ca.pem
          - --madkub-server-ca
          - /maddog-certs/ca/cacerts.pem
          - --cert-folders
          - certs:/certs/
          - --token-folder
          - /tokens/
          - --requested-cert-type
          - client
          - --ca-folder
          - /maddog-certs/ca
          env:
          - name: MADKUB_NODENAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: MADKUB_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: MADKUB_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: ops0-artifactrepo2-0-prd.data.sfdc.net/docker-release-candidate/tnrp/sam/madkub:1.0.0-0000082-3d5c21b4
          imagePullPolicy: IfNotPresent
          name: madkub-init
          volumeMounts:
          - mountPath: /certs
            name: certs
          - mountPath: /maddog-certs/
            name: maddog-certs
          - mountPath: /tokens
            name: tokens
        nodeSelector:
          pool: prd-sam_tnrp_merger
        terminationGracePeriodSeconds: 10
        volumes:
        - name: app-config-volume
          projected:
            sources:
            - configMap:
                items:
                - key: application.yml
                  path: application.yml
                name: firefly-package-singleton-fcp-falcon-configmap
        - emptyDir: {}
          name: docker-build-dir
        - emptyDir: {}
          name: firefly-root-dir
        - emptyDir:
            medium: Memory
          name: tokens
        - emptyDir:
            medium: Memory
          name: certs
        - emptyDir:
            medium: Memory
          name: git-ssh-keys
        - hostPath:
            path: /etc/pki_service
          name: maddog-certs
- apiVersion: v1
  data:
    application.yml: |-
      {
          "appconfig": {
              "artifactory": {
                  "artifact-manifest-time-property-key": "snd_artifact_promotion_time",
                  "artifactory-content-repo-gcp": "content_repo_gcp",
                  "artifactory-content-repo-password": "${artifactoryContentRepoPassword#FromSecretService}",
                  "artifactory-content-repo-password-prod": "${artifactoryContentRepoPasswordProd#FromSecretService}",
                  "artifactory-content-repo-prod": "content_repo_prod",
                  "artifactory-content-repo-rc": "content_repo_rc",
                  "artifactory-content-repo-user-name": "svc_tnrp_ci",
                  "artifactory-content-repo-user-name-prod": "svc_tnrp_cd",
                  "artifactory-dev-api-endpoint": "https://${appconfig.artifactory.artifactory-dev-host}/artifactory/",
                  "artifactory-dev-endpoint": "https://${appconfig.artifactory.artifactory-dev-host}/",
                  "artifactory-dev-host": "ops0-artifactrepo1-0-prd.data.sfdc.net",
                  "artifactory-p2p-api-endpoint": "https://${appconfig.artifactory.artifactory-p2p-host}/artifactory/",
                  "artifactory-p2p-endpoint": "https://${appconfig.artifactory.artifactory-p2p-host}/",
                  "artifactory-p2p-host": "ops0-artifactrepo2-0-prd.data.sfdc.net",
                  "artifactory-password": "${artifactoryPassword#FromSecretService}",
                  "artifactory-remote-content-repo": "content_repo",
                  "artifactory-user-name": "svc_tnrp_artifactory",
                  "backoff-time": "1000ms",
                  "connection-timeout": "20000ms",
                  "max-retry": 3,
                  "socket-timeout": "30000ms"
              },
              "back-off-period": "2000ms",
              "context-prefix": "",
              "docker": {
                  "connect-timeout": "480000ms",
                  "docker-cert-path": "/etc/docker/certs.d",
                  "force-create-container": true,
                  "read-timeout": "480000ms",
                  "remote-docker-host": "http://localhost:2375"
              },
              "evaluation-config": {
                  "pipeline-manifest-json": "/tnrp/pipeline_manifest.json"
              },
              "gus": {
                  "enable_gus_case_check": false,
                  "enforce_gus_case_check": false,
                  "password": "${gusUserPassword#FromSecretService}",
                  "use_proxy": true,
                  "username": "${gusUserName#FromSecretService}"
              },
              "instance-type": "${INSTANCE_TYPE}",
              "multi-repo-supported": true,
              "self-auth-allowed": false,
              "workspace-config": {
                  "root-dir": "/firefly"
              }
          },
          "firefly": {
              "monitoring": {
                  "enable-funnel-publisher": true,
                  "enable-metrics-logging": false,
                  "funnel": {
                      "avro-schema-fingerprint": "AVG7NnlcHNdk4t_zn2JBnQ",
                      "backoff-time": 1,
                      "base-path": "funnel",
                      "endpoint": "ajna0-funnel1-0-prd.data.sfdc.net",
                      "funnel-api-version": "v1",
                      "http-port": 80,
                      "https-port": 443,
                      "max-publish-tries": 3,
                      "publish-api": "publishBatch",
                      "ssl-enabled": false
                  },
                  "metric-fields": {
                      "common-tags": {
                          "k8.namespace": "${MY_POD_NAMESPACE}",
                          "k8.node.name": "${MY_NODE_NAME}",
                          "repo": "${INSTANCE_TYPE}"
                      },
                      "datacenter": "prd",
                      "pod": "firefly-pullrequest",
                      "service": "firefly",
                      "subservice": "${MY_APP_NAME}",
                      "superpod": "prd-samtwo"
                  },
                  "report-frequency": 1,
                  "system-exception-threshold": 5
              }
          },
          "logging": {
              "level": {
                  "com.salesforce": "INFO",
                  "com.salesforce.firefly": "DEBUG",
                  "com.salesforce.firefly.metrics": "INFO",
                  "org": "INFO"
              },
              "pattern": {
                  "console": "%d{yyyy-MM-dd HH:mm:ss} - %C:%L[%thread] %-5level - e=%X{eventType} sha=%X{sha} repo=%X{repo} pr=%X{pr} c=%X{committer} - details=[%msg]  %n"
              }
          },
          "management": {
              "endpoint": {
                  "health": {
                      "enabled": true,
                      "show-details": "always"
                  },
                  "metrics": {
                      "enabled": true
                  }
              },
              "endpoints": {
                  "enabled-by-default": "false",
                  "web": {
                      "exposure": {
                          "include": "health, metrics"
                      }
                  }
              },
              "server": {
                  "port": 8081
              }
          },
          "rabbitmq": {
              "exchange-name": "firefly.delivery",
              "queue-name": "${RABBIT_MQ_QUEUE_NAME}"
          },
          "scm": {
              "ghe": {
                  "api-url": "https://git.soma.salesforce.com/api/v3/",
                  "clone-timeout": "60s",
                  "connect-timeout": "60s",
                  "dark-launch": "${DARKLAUNCH}",
                  "http-logging-interceptor-level": "NONE",
                  "keep-alive-duration": "60000ms",
                  "max-attempts": 3,
                  "max-idle-connections": 10,
                  "oauth-token": "${gitRWPassword#FromSecretService}",
                  "read-timeout": "60s",
                  "url": "https://git.soma.salesforce.com",
                  "user": "svc-tnrp-git-rw",
                  "write-timeout": "60s"
              }
          },
          "server": {
              "port": -1
          },
          "spring": {
              "rabbitmq": {
                  "connection-timeout": "10000ms",
                  "host": "firefly-rabbitmq.firefly.prd-samtwo.prd.slb.sfdc.net",
                  "listener": {
                      "simple": {
                          "retry": {
                              "enabled": true,
                              "initial-interval": "1000ms",
                              "max-attempts": 3,
                              "max-interval": "10000ms",
                              "multiplier": 2,
                              "stateless": true
                          }
                      }
                  },
                  "password": "${rabbitMqAdmin#FromSecretService}",
                  "port": "5672",
                  "publisher-confirms": true,
                  "publisher-returns": true,
                  "template": {
                      "mandatory": true,
                      "reply-timeout": "60000ms",
                      "retry": {
                          "enabled": true,
                          "initial-interval": "1000ms",
                          "max-attempts": 10,
                          "max-interval": "10000ms",
                          "multiplier": 2
                      }
                  },
                  "username": "rabbitmq-admin"
              }
          }
      }
  kind: ConfigMap
  metadata:
    labels:
      sam.data.sfdc.net/owner: tnrp
    name: firefly-pullrequest-fcp-falcon-configmap
    namespace: firefly
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      slb.sfdc.net/cnames: |-
        [
          {
            "cname": "firefly-pullrequest-fcp-falcon-prd-samtwo.slb.sfdc.net"
          }
        ]
      slb.sfdc.net/name: firefly-pullrequest-fcp-falcon
      slb.sfdc.net/portconfigurations: |-
        [
          {
            "lbtype": "http",
            "port": 8081,
            "reencrypt": false,
            "sticky": 0,
            "targetPort": 8081,
            "tls": true
          }
        ]
    labels:
      app: firefly-pullrequest-fcp-falcon
      sam.data.sfdc.net/owner: tnrp
    name: firefly-pullrequest-fcp-falcon-service
    namespace: firefly
  spec:
    ports:
    - name: admin-port
      port: 8081
      protocol: TCP
      targetPort: 8081
    selector:
      name: firefly-pullrequest-fcp-falcon
    type: NodePort
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    labels:
      name: firefly-pullrequest-fcp-falcon
      sam.data.sfdc.net/owner: tnrp
    name: firefly-pullrequest-fcp-falcon-deployment
    namespace: firefly
  spec:
    replicas: 2
    selector:
      matchLabels:
        name: firefly-pullrequest-fcp-falcon
        sam.data.sfdc.net/owner: tnrp
    strategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        annotations:
          madkub.sam.sfdc.net/allcerts: |-
            {
                "certreqs": [
                    {
                        "cert-type": "client",
                        "kingdom": "prd",
                        "name": "certs",
                        "role": "firefly"
                    }
                ]
            }
        labels:
          name: firefly-pullrequest-fcp-falcon
          sam.data.sfdc.net/owner: tnrp
        name: firefly-pullrequest-fcp-falcon-deployment
        namespace: firefly
      spec:
        containers:
        - args:
          - /sam/madkub-client
          - --madkub-endpoint
          - https://10.254.208.254:32007
          - --maddog-endpoint
          - https://all.pkicontroller.pki.blank.prd.prod.non-estates.sfdcsd.net:8443
          - --maddog-server-ca
          - /maddog-certs/ca/security-ca.pem
          - --madkub-server-ca
          - /maddog-certs/ca/cacerts.pem
          - --cert-folders
          - certs:/certs/
          - --token-folder
          - /tokens/
          - --requested-cert-type
          - client
          - --refresher
          - --run-init-for-refresher-mode
          - --ca-folder
          - /maddog-certs/ca
          env:
          - name: MADKUB_NODENAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: MADKUB_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: MADKUB_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          image: ops0-artifactrepo2-0-prd.data.sfdc.net/docker-release-candidate/tnrp/sam/madkub:1.0.0-0000082-3d5c21b4
          name: madkub-refresher
          resources: {}
          volumeMounts:
          - mountPath: /certs
            name: certs
          - mountPath: /tokens
            name: tokens
          - mountPath: /maddog-certs/
            name: maddog-certs
        - command:
          - java
          - -jar
          - /pullrequest-svc.jar
          - --spring.profiles.active=prd-samtwo
          - --spring.config.location=/etc/firefly/config/
          env:
          - name: MY_NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: MY_POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: MY_POD_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.podIP
          - name: MY_POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: MY_APP_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.labels['name']
          - name: CONFIG_VERSION
            value: "20"
          - name: DARKLAUNCH
            value: "false"
          - name: INSTANCE_TYPE
            value: firefly-fcp-falcon
          - name: RABBIT_MQ_QUEUE_NAME
            value: firefly-fcp-falcon.pr
          image: ops0-artifactrepo2-0-prd.data.sfdc.net/dva/firefly-pullrequest:473
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 10
            httpGet:
              path: /actuator
              port: admin-port
            initialDelaySeconds: 30
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 30
          name: firefly-pullrequest-fcp-falcon
          ports:
          - containerPort: 8081
            name: admin-port
            protocol: TCP
          volumeMounts:
          - mountPath: /certs
            name: certs
          - mountPath: /root/.ssh/
            name: git-ssh-keys
          - mountPath: /etc/firefly/config
            name: app-config-volume
          - mountPath: /tmp
            name: docker-build-dir
          - mountPath: /firefly
            name: firefly-root-dir
        - image: ops0-artifactrepo2-0-prd.data.sfdc.net/dva/firefly-dind:238
          name: dind-daemon
          securityContext:
            privileged: true
          volumeMounts:
          - mountPath: /tmp
            name: docker-build-dir
          - mountPath: /root/.ssh/
            name: git-ssh-keys
          - mountPath: /firefly
            name: firefly-root-dir
        initContainers:
        - args:
          - /sam/madkub-client
          - --madkub-endpoint
          - https://10.254.208.254:32007
          - --maddog-endpoint
          - https://all.pkicontroller.pki.blank.prd.prod.non-estates.sfdcsd.net:8443
          - --maddog-server-ca
          - /maddog-certs/ca/security-ca.pem
          - --madkub-server-ca
          - /maddog-certs/ca/cacerts.pem
          - --cert-folders
          - certs:/certs/
          - --token-folder
          - /tokens/
          - --requested-cert-type
          - client
          - --ca-folder
          - /maddog-certs/ca
          env:
          - name: MADKUB_NODENAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: MADKUB_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: MADKUB_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: ops0-artifactrepo2-0-prd.data.sfdc.net/docker-release-candidate/tnrp/sam/madkub:1.0.0-0000082-3d5c21b4
          imagePullPolicy: IfNotPresent
          name: madkub-init
          volumeMounts:
          - mountPath: /certs
            name: certs
          - mountPath: /maddog-certs/
            name: maddog-certs
          - mountPath: /tokens
            name: tokens
        nodeSelector:
          pool: prd-sam_tnrp_merger
        terminationGracePeriodSeconds: 10
        volumes:
        - name: app-config-volume
          projected:
            sources:
            - configMap:
                items:
                - key: application.yml
                  path: application.yml
                name: firefly-pullrequest-fcp-falcon-configmap
        - emptyDir: {}
          name: docker-build-dir
        - emptyDir: {}
          name: firefly-root-dir
        - emptyDir:
            medium: Memory
          name: tokens
        - emptyDir:
            medium: Memory
          name: certs
        - emptyDir:
            medium: Memory
          name: git-ssh-keys
        - hostPath:
            path: /etc/pki_service
          name: maddog-certs
kind: List
