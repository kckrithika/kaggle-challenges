apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  labels:
    name: rabbitmq
    sam.data.sfdc.net/owner: tnrp
  name: rabbitmq
  namespace: firefly
spec:
  replicas: 3
  selector:
    matchLabels:
      app: rabbitmq
  serviceName: rabbitmq-set
  template:
    metadata:
      annotations:
        madkub.sam.sfdc.net/allcerts: '{"certreqs":[{"name": "certs","san":["firefly"],"cert-type":"client",
          "kingdom":"prd", "role": "firefly"}]}'
      labels:
        app: rabbitmq
        name: rabbitmq
    spec:
      containers:
      - env:
        - name: RABBITMQ_DEFAULT_USER
          value: sfdc-rabbitmq
        - name: MY_POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: MY_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: MY_POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: KINGDOM
          value: PRD
        - name: ESTATE
          value: prd-samtwo
        - name: SFDC_METRICS_SERVICE_HOST
          value: ajna0-funnel1-0-prd.data.sfdc.net
        - name: SFDC_METRICS_SERVICE_PORT
          value: "80"
        - name: SUPERPOD
          value: NONE
        - name: RABBITMQ_USE_LONGNAME
          value: "true"
        - name: RABBITMQ_NODENAME
          value: rabbit@$(MY_POD_NAME).rabbitmq-set.$(MY_POD_NAMESPACE).svc.prd-samtwo.prd.sam.sfdc.net.
        - name: K8S_SERVICE_NAME
          value: rabbitmq-set
        - name: RABBITMQ_CONFIG_VERSION
          value: "1.4"
        image: ops0-artifactrepo2-0-prd.data.sfdc.net/dva/firefly-rabbitmq:13
        imagePullPolicy: Always
        lifecycle:
          postStart:
            exec:
              command:
              - /bin/sh
              - -c
              - rabbitmqctl wait /var/lib/rabbitmq/mnesia/rabbit\@$(hostname -f).pid;
                until rabbitmqctl node_health_check; do sleep 1; done; rabbitmqctl
                add_user $RABBITMQ_DEFAULT_USER $(pyczar get_secret_by_subscriber
                --vault-name=${ESTATE} --secret-name=rabbitMqDefaultPass --server-url=https://secretservice.dmz.salesforce.com:8271
                --cert-file=/certs/client/certificates/client.pem --key-file=/certs/client/keys/client-key.pem);
                rabbitmqctl set_user_tags $RABBITMQ_DEFAULT_USER administrator; rabbitmqctl
                set_permissions -p / $RABBITMQ_DEFAULT_USER ".*" ".*" ".*";
        livenessProbe:
          exec:
            command:
            - rabbitmqctl
            - node_health_check
          initialDelaySeconds: 30
          timeoutSeconds: 10
        name: rabbitmq
        ports:
        - containerPort: 15672
          name: http
          protocol: TCP
        - containerPort: 15671
          name: https
          protocol: TCP
        - containerPort: 5672
          name: amqp
          protocol: TCP
        - containerPort: 5671
          name: amqp-tls
          protocol: TCP
        readinessProbe:
          exec:
            command:
            - rabbitmqctl
            - node_health_check
          initialDelaySeconds: 10
          timeoutSeconds: 10
        volumeMounts:
        - mountPath: /var/lib/rabbitmq
          name: data-volume
        - mountPath: /etc/rabbitmq
          name: config-volume
        - mountPath: /certs
          name: certs
      - args:
        - /sam/madkub-client
        - --madkub-endpoint
        - https://10.254.208.254:32007
        - --maddog-endpoint
        - https://all.pkicontroller.pki.blank.prd.prod.non-estates.sfdcsd.net:8443
        - --maddog-server-ca
        - /maddog-certs/ca/security-ca.pem
        - --madkub-server-ca
        - /maddog-certs/ca/cacerts.pem
        - --cert-folders
        - certs:/certs/
        - --token-folder
        - /tokens/
        - --requested-cert-type
        - client
        - --refresher
        - --run-init-for-refresher-mode
        - --ca-folder
        - /maddog-certs/ca
        env:
        - name: MADKUB_NODENAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: MADKUB_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: MADKUB_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: ops0-artifactrepo2-0-prd.data.sfdc.net/docker-release-candidate/tnrp/sam/madkub:1.0.0-0000074-4c95976a
        name: madkub-refresher
        resources: {}
        volumeMounts:
        - mountPath: /certs
          name: certs
        - mountPath: /tokens
          name: tokens
        - mountPath: /maddog-certs/
          name: maddog-certs
      initContainers:
      - args:
        - /sam/madkub-client
        - --madkub-endpoint
        - https://10.254.208.254:32007
        - --maddog-endpoint
        - https://all.pkicontroller.pki.blank.prd.prod.non-estates.sfdcsd.net:8443
        - --maddog-server-ca
        - /maddog-certs/ca/security-ca.pem
        - --madkub-server-ca
        - /maddog-certs/ca/cacerts.pem
        - --cert-folders
        - certs:/certs/
        - --token-folder
        - /tokens/
        - --requested-cert-type
        - client
        - --ca-folder
        - /maddog-certs/ca
        env:
        - name: MADKUB_NODENAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: MADKUB_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: MADKUB_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        image: ops0-artifactrepo2-0-prd.data.sfdc.net/docker-release-candidate/tnrp/sam/madkub:1.0.0-0000074-4c95976a
        imagePullPolicy: IfNotPresent
        name: madkub-init
        volumeMounts:
        - mountPath: /certs
          name: certs
        - mountPath: /maddog-certs/
          name: maddog-certs
        - mountPath: /tokens
          name: tokens
      - args:
        - chmod -R 775 /vols/maddog-certs && chown -R 7447:7447 /vols/maddog-certs
        command:
        - /bin/sh
        - -c
        image: ops0-artifactrepo2-0-prd.data.sfdc.net/docker-release-candidate/tnrp/sam/hypersam:sam-c07d4afb-673
        imagePullPolicy: Always
        name: permissionsetterinitcontainer
        securityContext:
          runAsNonRoot: false
          runAsUser: 0
        volumeMounts:
        - mountPath: /vols/maddog-certs
          name: maddog-certs
      nodeSelector:
        pool: prd-sam_tnrp_signer
      securityContext:
        fsGroup: 7447
        runAsNonRoot: true
        runAsUser: 7447
      terminationGracePeriodSeconds: 10
      volumes:
      - name: data-volume
        persistentVolumeClaim:
          claimName: firefly-rabbitmq-pv-claim
      - name: config-volume
        projected:
          sources:
          - configMap:
              items:
              - key: rabbitmq.conf
                path: rabbitmq.conf
              - key: rabbitmq-env.conf
                path: rabbitmq-env.conf
              - key: enabled_plugins
                path: enabled_plugins
              - key: definitions.json
                path: definitions.json
              name: rabbitmq-configmap
      - emptyDir:
          medium: Memory
        name: certs
      - emptyDir:
          medium: Memory
        name: tokens
      - hostPath:
          path: /etc/pki_service
        name: maddog-certs
