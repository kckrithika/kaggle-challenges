apiVersion: v1
items:
- apiVersion: v1
  data:
    application.yml: |-
      {
          "logging": {
              "level": {
                  "com.salesforce": "INFO",
                  "org": "INFO"
              },
              "pattern": {
                  "console": "%d{yyyy-MM-dd HH:mm:ss} - %C:%L[%thread gua=%X{userAgent} ghd=%X{gitHubDelivery}] %-5level - e=%X{eventType} sha=%X{sha} repo=%X{repo} pr=%X{pr} c=%X{committer} - details=[%msg]  %n"
              }
          },
          "management": {
              "endpoint": {
                  "env": {
                      "enabled": false
                  },
                  "health": {
                      "enabled": true,
                      "show-details": "always"
                  },
                  "info": {
                      "enabled": true
                  },
                  "metrics": {
                      "enabled": true
                  }
              },
              "endpoints": {
                  "enabled-by-default": "false",
                  "web": {
                      "exposure": {
                          "include": "health, metrics, info"
                      }
                  }
              },
              "server": {
                  "port": 8081
              }
          },
          "monitoring": {
              "enable-funnel-publisher": true,
              "enable-metrics-logging": false,
              "funnel": {
                  "avro-schema-fingerprint": "AVG7NnlcHNdk4t_zn2JBnQ",
                  "backoff-time": 1,
                  "base-path": "funnel",
                  "endpoint": "ajna0-funnel1-0-prd.data.sfdc.net",
                  "funnel-api-version": "v1",
                  "http-port": 80,
                  "https-port": 443,
                  "max-publish-tries": 3,
                  "publish-api": "publishBatch",
                  "ssl-enabled": false
              },
              "metric-fields": {
                  "common-tags": {
                      "k8.namespace": "${MY_POD_NAMESPACE}",
                      "k8.node.name": "${MY_NODE_NAME}"
                  },
                  "datacenter": "prd",
                  "pod": "sfcdapi-firebom-webhook",
                  "service": "sfcdapi-firebom-webhook",
                  "subservice": "${MY_APP_NAME}",
                  "superpod": "prd-samtwo"
              },
              "report-frequency": 1,
              "system-exception-threshold": 5
          },
          "pipeline": {
              "templates": {
                  "composition": {
                      "add-new-service-master-stages": false,
                      "cleanup-interval": 0,
                      "default-read-id": "test",
                      "dev-env-type": {
                          "default-foundation-targets": [
                              "fdev1-uswest2"
                          ],
                          "default-targets": [
                              "dev1-uswest2"
                          ],
                          "name": "dev"
                      },
                      "env-type-hierarchies": {
                          "default": {
                              "canary": {
                                  "add-promotion-stage": true,
                                  "add-setup-change-case-stage": true,
                                  "depends-on": [
                                      "test"
                                  ],
                                  "skip-promotion-wait": false
                              },
                              "dev": {
                                  "add-promotion-stage": false
                              },
                              "prod": {
                                  "add-close-change-case-stage": true,
                                  "add-promotion-stage": true,
                                  "depends-on": [
                                      "canary"
                                  ],
                                  "skip-promotion-wait": false
                              },
                              "test": {
                                  "add-promotion-stage": true,
                                  "depends-on": [
                                      "dev"
                                  ],
                                  "skip-promotion-wait": true
                              }
                          }
                      },
                      "populate-full-master-service-pipeline": true,
                      "service-white-list": [
                          "sfcdekstest1",
                          "sfcdec2test",
                          "bastion",
                          "strauz",
                          "strauzstage",
                          "kaaskeymaker",
                          "slavekdc",
                          "keywatcher",
                          "dns",
                          "funnel",
                          "funnellogs",
                          "magister",
                          "authsync",
                          "authval",
                          "praapp",
                          "pradsm",
                          "praui",
                          "pravm",
                          "preevaluated",
                          "quantumk",
                          "radius",
                          "secds",
                          "seciamsvc",
                          "publicproxy",
                          "cdpactvsvc",
                          "cdpadminsvc",
                          "cdpdata",
                          "cdpgdpr",
                          "mathapi",
                          "math",
                          "cdpmetadata",
                          "cdpscheduler",
                          "cdpsegment",
                          "cdpinjector",
                          "auth",
                          "prazk",
                          "fitcon",
                          "fitops",
                          "respublisher",
                          "fitval",
                          "controller",
                          "vault",
                          "topology",
                          "cwexporter",
                          "edge",
                          "ajnaendpoint",
                          "ajnakafka",
                          "ccecom"
                      ],
                      "soft-launch": true,
                      "working-directory": "/tmp/sfcdapifirebom"
                  }
              }
          },
          "scm": {
              "ghe": {
                  "api-url": "https://git.soma.salesforce.com/api/v3/",
                  "clone-timeout": "60s",
                  "connect-timeout": "60s",
                  "enable-submodules": true,
                  "http-logging-interceptor-level": "NONE",
                  "keep-alive-duration": "60000ms",
                  "max-attempts": 3,
                  "max-idle-connections": 10,
                  "oauth-token": "${ghe_rw_token#FromSecretService}",
                  "read-timeout": "60s",
                  "url": "https://git.soma.salesforce.com",
                  "user": "tok-cdapigitrw",
                  "write-timeout": "60s"
              }
          },
          "server": {
              "port": 8080
          },
          "sfcdapi": {
              "firebom": {
                  "pipeline": {
                      "template": {
                          "enable-webhook-secret": true,
                          "fire-bom-black-list": "lib/fire/.*/boms/mock.*json",
                          "fire-bom-white-list": "lib/fire/.*/boms/hydrated.*json"
                      }
                  }
              },
              "ghe": {
                  "commit-signing": false,
                  "context-prefix": "",
                  "webhook-secret-token-validation": true
              }
          },
          "templates": {
              "repo": {
                  "composed-templates": {
                      "location": "lib/templates",
                      "master-deployment-pipeline-templates": {
                          "cell-aggregate": {
                              "config-json": "cell_aggregate/cell_aggregate_deployment_config.json",
                              "pipeline-template": "cell_aggregate/cell_aggregate_01-01.j2",
                              "pipeline-template-dev": "cell_aggregate/cell_aggregate_01-01.j2",
                              "stages-json": "cell_aggregate/cell_aggregate_stages.json",
                              "vars-json": "cell_aggregate/cell_aggregate_deployment_vars.json"
                          },
                          "env-type-aggregate": {
                              "config-json": "env_type_aggregate/env_type_aggregate_deployment_config.json",
                              "pipeline-template": "env_type_aggregate/env_type_aggregate_01-01.j2",
                              "pipeline-template-dev": "env_type_aggregate/dev_env_type_aggregate_01-01.j2",
                              "stages-json": "env_type_aggregate/env_type_aggregate_deployment_stages.json",
                              "vars-json": "env_type_aggregate/env_type_aggregate_deployment_vars.json"
                          },
                          "fd-aggregate": {
                              "config-json": "fd_aggregate/fd_aggregate_deployment_config.json",
                              "pipeline-template": "fd_aggregate/fd_aggregate_01-01.j2",
                              "pipeline-template-dev": "fd_aggregate/fd_aggregate_01-01.j2",
                              "stages-json": "fd_aggregate/fd_aggregate_stages.json",
                              "vars-json": "fd_aggregate/fd_aggregate_deployment_vars.json"
                          },
                          "fi-aggregate": {
                              "config-json": "fi_aggregate/fi_aggregate_deployment_config.json",
                              "pipeline-template": "fi_aggregate/fi_aggregate_01-01.j2",
                              "pipeline-template-dev": "fi_aggregate/fi_aggregate_01-01.j2",
                              "stages-json": "fi_aggregate/fi_aggregate_stages.json",
                              "vars-json": "fi_aggregate/fi_aggregate_deployment_vars.json"
                          },
                          "promote-release": {
                              "config-json": "promotion/promotion_config.json",
                              "pipeline-template": "promotion/promotion_01-00.j2",
                              "pipeline-template-dev": "promotion/promotion_01-00.j2",
                              "stages-json": "promotion/promotion_stages.json",
                              "vars-json": "promotion/promotion_vars.json"
                          },
                          "service-master": {
                              "config-json": "service_master/service_master_deployment_config.json",
                              "pipeline-template": "service_master/service_master_01-01.j2",
                              "pipeline-template-dev": "service_master/service_master_01-01.j2",
                              "stages-json": "service_master/service_master_deployment_stages.json",
                              "vars-json": "service_master/service_master_deployment_vars.json"
                          }
                      },
                      "master-pipelines-dir": "pipelines/masterpipeline"
                  },
                  "enable-approve-pr": true,
                  "enable-pr-creation": true,
                  "enable-push-to-origin": true,
                  "enable-self-approve-pr": true,
                  "repo-name": "spinnaker",
                  "repo-org": "sfcd",
                  "workspace-refresh-interval": "30s"
              }
          }
      }
  kind: ConfigMap
  metadata:
    labels:
      sam.data.sfdc.net/owner: sfcd
    name: sfcdapi-firebom-webhook-configmap
    namespace: sfcd
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      slb.sfdc.net/cnames: |-
        [
          {
            "cname": "sfcdapi-firebom-webhook-prd-samtwo.slb.sfdc.net"
          }
        ]
      slb.sfdc.net/name: sfcdapi-firebom-webhook
      slb.sfdc.net/portconfigurations: |-
        [
          {
            "lbtype": "http",
            "port": 8081,
            "reencrypt": false,
            "sticky": 0,
            "targetPort": 8081,
            "tls": true
          },
          {
            "lbtype": "http",
            "port": 443,
            "reencrypt": false,
            "sticky": 0,
            "targetPort": 8080,
            "tls": true
          }
        ]
    labels:
      app: sfcdapi-firebom-webhook
      sam.data.sfdc.net/owner: sfcd
    name: sfcdapi-firebom-webhook-service
    namespace: sfcd
  spec:
    ports:
    - name: sfcdapifb-https
      port: 443
      protocol: TCP
      targetPort: 8080
    - name: admin-port
      port: 8081
      protocol: TCP
      targetPort: 8081
    selector:
      name: sfcdapi-firebom-webhook
    type: NodePort
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    labels:
      name: sfcdapi-firebom-webhook
      sam.data.sfdc.net/owner: sfcd
    name: sfcdapi-firebom-webhook-deployment
    namespace: sfcd
  spec:
    replicas: 1
    selector:
      matchLabels:
        name: sfcdapi-firebom-webhook
        sam.data.sfdc.net/owner: sfcd
    strategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        annotations:
          madkub.sam.sfdc.net/allcerts: |-
            {
                "certreqs": [
                    {
                        "cert-type": "client",
                        "kingdom": "prd",
                        "name": "certs",
                        "role": "sfcd.sfcd-api"
                    }
                ]
            }
        labels:
          name: sfcdapi-firebom-webhook
          sam.data.sfdc.net/owner: sfcd
        name: sfcdapi-firebom-webhook-deployment
        namespace: sfcd
      spec:
        containers:
        - args:
          - /sam/madkub-client
          - --madkub-endpoint
          - https://10.254.208.254:32007
          - --maddog-endpoint
          - https://all.pkicontroller.pki.blank.prd.prod.non-estates.sfdcsd.net:8443
          - --maddog-server-ca
          - /maddog-certs/ca/security-ca.pem
          - --madkub-server-ca
          - /maddog-certs/ca/cacerts.pem
          - --cert-folders
          - certs:/certs/
          - --token-folder
          - /tokens/
          - --requested-cert-type
          - client
          - --refresher
          - --run-init-for-refresher-mode
          - --ca-folder
          - /maddog-certs/ca
          env:
          - name: MADKUB_NODENAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: MADKUB_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: MADKUB_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          image: ops0-artifactrepo2-0-prd.data.sfdc.net/docker-release-candidate/tnrp/sam/madkub:1.0.0-0000082-3d5c21b4
          name: madkub-refresher
          resources: {}
          volumeMounts:
          - mountPath: /certs
            name: certs
          - mountPath: /tokens
            name: tokens
          - mountPath: /maddog-certs/
            name: maddog-certs
        - command:
          - java
          - -jar
          - /sfcdapi-firebom-svc.jar
          - --spring.profiles.active=sfcd-api
          - --spring.config.location=/etc/sfcdapi-firebom-webhook/config/
          env:
          - name: MY_NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: MY_POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: MY_POD_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.podIP
          - name: MY_POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: MY_APP_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.labels['name']
          - name: CONFIG_VERSION
            value: "36"
          image: ops0-artifactrepo2-0-prd.data.sfdc.net/dva/sfcdapi-firebom:123
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 10
            httpGet:
              path: /actuator
              port: admin-port
            initialDelaySeconds: 30
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 30
          name: sfcdapi-firebom-webhook
          ports:
          - containerPort: 8081
            name: admin-port
            protocol: TCP
          - containerPort: 8080
            name: sfcdapifb-http
            protocol: TCP
          volumeMounts:
          - mountPath: /certs
            name: certs
          - mountPath: /etc/sfcdapi-firebom-webhook/config
            name: app-config-volume
        initContainers:
        - args:
          - /sam/madkub-client
          - --madkub-endpoint
          - https://10.254.208.254:32007
          - --maddog-endpoint
          - https://all.pkicontroller.pki.blank.prd.prod.non-estates.sfdcsd.net:8443
          - --maddog-server-ca
          - /maddog-certs/ca/security-ca.pem
          - --madkub-server-ca
          - /maddog-certs/ca/cacerts.pem
          - --cert-folders
          - certs:/certs/
          - --token-folder
          - /tokens/
          - --requested-cert-type
          - client
          - --ca-folder
          - /maddog-certs/ca
          env:
          - name: MADKUB_NODENAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: MADKUB_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: MADKUB_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: ops0-artifactrepo2-0-prd.data.sfdc.net/docker-release-candidate/tnrp/sam/madkub:1.0.0-0000082-3d5c21b4
          imagePullPolicy: IfNotPresent
          name: madkub-init
          volumeMounts:
          - mountPath: /certs
            name: certs
          - mountPath: /maddog-certs/
            name: maddog-certs
          - mountPath: /tokens
            name: tokens
        - args:
          - chmod -R 775 /vols/maddog-certs && chown -R 7447:7447 /vols/maddog-certs
          command:
          - /bin/sh
          - -c
          image: ops0-artifactrepo2-0-prd.data.sfdc.net/docker-release-candidate/tnrp/sam/hypersam:sam-c07d4afb-673
          imagePullPolicy: Always
          name: permissionsetterinitcontainer
          securityContext:
            runAsNonRoot: false
            runAsUser: 0
          volumeMounts:
          - mountPath: /vols/maddog-certs
            name: maddog-certs
        nodeSelector:
          pool: prd-sam_tnrp_promoter
        terminationGracePeriodSeconds: 10
        volumes:
        - name: app-config-volume
          projected:
            sources:
            - configMap:
                items:
                - key: application.yml
                  path: application.yml
                name: sfcdapi-firebom-webhook-configmap
        - emptyDir: {}
          name: sfcdapi-root-dir
        - emptyDir:
            medium: Memory
          name: tokens
        - emptyDir:
            medium: Memory
          name: certs
        - hostPath:
            path: /etc/pki_service
          name: maddog-certs
kind: List
