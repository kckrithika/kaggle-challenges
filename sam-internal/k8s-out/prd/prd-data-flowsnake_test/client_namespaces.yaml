apiVersion: v1
items:
- apiVersion: v1
  kind: Namespace
  metadata:
    annotations:
      sfdc.net/flowsnake.owner_name: Carl - Testing
      sfdc.net/pki-namespace: flowsnake_test
    labels:
      madkub-injector: enabled
      service-mesh-injector: enabled
      spark-operator-webhook: enabled
    name: carl-spark-test
- apiVersion: v1
  kind: Namespace
  metadata:
    annotations:
      sfdc.net/flowsnake.owner_name: Kevin - Testing
      sfdc.net/pki-namespace: flowsnake_test
    labels:
      madkub-injector: enabled
      service-mesh-injector: enabled
      spark-operator-webhook: enabled
    name: kh-spark-test
- apiVersion: v1
  kind: Namespace
  metadata:
    annotations:
      sfdc.net/flowsnake.owner_name: Ramya - Testing
      sfdc.net/pki-namespace: flowsnake_test
    labels:
      madkub-injector: enabled
      service-mesh-injector: enabled
      spark-operator-webhook: enabled
    name: ramya-spark-test
- apiVersion: v1
  kind: Namespace
  metadata:
    annotations:
      sfdc.net/flowsnake.owner_name: Vaishnavi - Testing
      sfdc.net/pki-namespace: flowsnake_test
    labels:
      madkub-injector: enabled
      service-mesh-injector: enabled
      spark-operator-webhook: enabled
    name: vaishnavi-spark-test
- apiVersion: v1
  kind: Namespace
  metadata:
    annotations:
      sfdc.net/flowsnake.owner_name: Flowsnake
      sfdc.net/pki-namespace: flowsnake_test
    labels:
      madkub-injector: enabled
      service-mesh-injector: enabled
      spark-operator-webhook: enabled
    name: flowsnake-test
- apiVersion: v1
  kind: Namespace
  metadata:
    annotations:
      sfdc.net/flowsnake.owner_name: Flowsnake
      sfdc.net/pki-namespace: flowsnake_test
    labels:
      madkub-injector: enabled
      service-mesh-injector: enabled
      spark-operator-webhook: enabled
    name: flowsnake-watchdog
- apiVersion: v1
  data:
    prometheus.json: '{"global": {"scrape_interval": "60s"}, "remote_write": [{"queue_config":
      {"capacity": 100000}, "url": "http://localhost:8000"}], "scrape_configs": [
      ]}'
  kind: ConfigMap
  metadata:
    labels:
      name: prometheus-server-conf-vaishnavi-spark-test
    name: prometheus-server-conf-vaishnavi-spark-test
    namespace: vaishnavi-spark-test
- apiVersion: v1
  automountServiceAccountToken: true
  kind: ServiceAccount
  metadata:
    name: prometheus-scraper-vaishnavi-spark-test-ServiceAccount
    namespace: vaishnavi-spark-test
- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    annotations:
      manifestctl.sam.data.sfdc.net/swagger: disable
    name: prometheus-scraper-binding
    namespace: vaishnavi-spark-test
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: Role
    name: prometheus-scraper-role
  subjects:
  - kind: ServiceAccount
    name: prometheus-scraper
    namespace: vaishnavi-spark-test
- apiVersion: rbac.authorization.k8s.io/v1
  kind: Role
  metadata:
    annotations:
      manifestctl.sam.data.sfdc.net/swagger: disable
    name: prometheus-scraper-role
  rules:
  - apiGroups:
    - ""
    resources:
    - pods
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - apiextensions.k8s.io
    resources:
    - customresourcedefinitions
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - sparkoperator.k8s.io
    resources:
    - sparkapplications
    - scheduledsparkapplications
    verbs:
    - get
    - list
    - watch
  - nonResourceURLs:
    - /metrics
    - /metrics/cadvisor
    verbs:
    - get
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    labels:
      service: prometheus-scraper-vaishnavi-spark-test
    name: prometheus-scraper-vaishnavi-spark-test
    namespace: vaishnavi-spark-test
  spec:
    minReadySeconds: 15
    replicas: 2
    selector:
      matchLabels:
        service: prometheus-scraper
    template:
      metadata:
        labels:
          apptype: monitoring
          flowsnakeOwner: Vaishnavi - Testing
          flowsnakeRole: PrometheusScraper
          name: prometheus-scraper
          service: prometheus-scraper
      spec:
        containers:
        - args:
          - --config.file=/etc/config/prometheus.json
          - --storage.tsdb.path=/prometheus-storage
          - --web.external-url=http://localhost/
          - --web.enable-lifecycle
          image: ops0-artifactrepo2-0-prd.data.sfdc.net/dva/prome_for_k8s:36
          livenessProbe:
            httpGet:
              path: /metrics
              port: 9090
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
          name: prometheus
          ports:
          - containerPort: 9090
          volumeMounts:
          - mountPath: /prometheus-storage
            name: prometheus-storage-volume
          - mountPath: /etc/config
            name: prometheus-server-conf
          - mountPath: /etc/pki_service
            name: certs-volume
        - args:
          - --serviceName=vaishnavi-spark-test
          - --subserviceName=NONE
          - --tagDefault=superpod:NONE
          - --tagDefault=datacenter:prd
          - --tagDefault=estate:prd-data-flowsnake_test
          - --batchSize=512
          - --funnelUrl=http://ajna0-funnel1-0-prd.data.sfdc.net:80
          image: ops0-artifactrepo2-0-prd.data.sfdc.net/dva/funnel_writer:36
          livenessProbe:
            httpGet:
              path: /
              port: 8000
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
          name: funnel-writer
          ports:
          - containerPort: 8000
          volumeMounts:
          - mountPath: /prometheus-storage
            name: prometheus-storage-volume
        restartPolicy: Always
        serviceAccountName: prometheus-scraper-vaishnavi-spark-test-ServiceAccount
        volumes:
        - configMap:
            name: prometheus-server-conf-vaishnavi-spark-test
          name: prometheus-server-conf-vaishnavi-spark-test
        - emptyDir:
            medium: Memory
          name: prometheus-storage-volume
kind: List
metadata: {}
