apiVersion: v1
items:
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      manifestctl.sam.data.sfdc.net/swagger: disable
    name: kube-state-metrics
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: kube-state-metrics
  subjects:
  - kind: ServiceAccount
    name: kube-state-metrics
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      manifestctl.sam.data.sfdc.net/swagger: disable
    name: kube-state-metrics
  rules:
  - apiGroups:
    - ""
    resources:
    - configmaps
    - secrets
    - nodes
    - pods
    - services
    - resourcequotas
    - replicationcontrollers
    - limitranges
    - persistentvolumeclaims
    - persistentvolumes
    - namespaces
    - endpoints
    verbs:
    - list
    - watch
  - apiGroups:
    - extensions
    resources:
    - daemonsets
    - deployments
    - replicasets
    - ingresses
    verbs:
    - list
    - watch
  - apiGroups:
    - apps
    resources:
    - daemonsets
    - deployments
    - replicasets
    - statefulsets
    verbs:
    - list
    - watch
  - apiGroups:
    - batch
    resources:
    - cronjobs
    - jobs
    verbs:
    - list
    - watch
  - apiGroups:
    - autoscaling
    resources:
    - horizontalpodautoscalers
    verbs:
    - list
    - watch
  - apiGroups:
    - policy
    resources:
    - poddisruptionbudgets
    verbs:
    - list
    - watch
  - apiGroups:
    - certificates.k8s.io
    resources:
    - certificatesigningrequests
    verbs:
    - list
    - watch
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      manifestctl.sam.data.sfdc.net/swagger: disable
    name: kube-state-metrics
    namespace: kube-system
  spec:
    replicas: 1
    selector:
      matchLabels:
        k8s-app: kube-state-metrics
    template:
      metadata:
        labels:
          k8s-app: kube-state-metrics
      spec:
        containers:
        - image: quay.io/coreos/kube-state-metrics:v1.5.0
          name: kube-state-metrics
          ports:
          - containerPort: 8080
            name: http-metrics
          - containerPort: 8081
            name: telemetry
          readinessProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 5
            timeoutSeconds: 5
        - command:
          - /pod_nanny
          - --container=kube-state-metrics
          - --cpu=100m
          - --extra-cpu=1m
          - --memory=100Mi
          - --extra-memory=2Mi
          - --threshold=5
          - --deployment=kube-state-metrics
          env:
          - name: MY_POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: MY_POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          image: k8s.gcr.io/addon-resizer:1.8.3
          name: addon-resizer
          resources:
            limits:
              cpu: 150m
              memory: 50Mi
            requests:
              cpu: 150m
              memory: 50Mi
        serviceAccountName: kube-state-metrics
- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    annotations:
      manifestctl.sam.data.sfdc.net/swagger: disable
    name: kube-state-metrics
    namespace: kube-system
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: Role
    name: kube-state-metrics-resizer
  subjects:
  - kind: ServiceAccount
    name: kube-state-metrics
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: Role
  metadata:
    annotations:
      manifestctl.sam.data.sfdc.net/swagger: disable
    name: kube-state-metrics-resizer
    namespace: kube-system
  rules:
  - apiGroups:
    - ""
    resources:
    - pods
    verbs:
    - get
  - apiGroups:
    - apps
    resourceNames:
    - kube-state-metrics
    resources:
    - deployments
    verbs:
    - get
    - update
  - apiGroups:
    - extensions
    resourceNames:
    - kube-state-metrics
    resources:
    - deployments
    verbs:
    - get
    - update
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    name: kube-state-metrics
    namespace: kube-system
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      prometheus.io/scrape: "true"
    labels:
      k8s-app: kube-state-metrics
    name: kube-state-metrics
    namespace: kube-system
  spec:
    ports:
    - name: http-metrics
      port: 8080
      protocol: TCP
      targetPort: http-metrics
    - name: telemetry
      port: 8081
      protocol: TCP
      targetPort: telemetry
    selector:
      k8s-app: kube-state-metrics
kind: List
metadata: {}
