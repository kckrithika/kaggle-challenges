apiVersion: v1
items:
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      manifestctl.sam.data.sfdc.net/swagger: disable
    name: kube-state-metrics-clusterrolebinding
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: kube-state-metrics-clusterrole
  subjects:
  - kind: ServiceAccount
    name: kube-state-metrics-serviceaccount
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      manifestctl.sam.data.sfdc.net/swagger: disable
    name: kube-state-metrics-clusterrole
  rules:
  - apiGroups:
    - ""
    resources:
    - configmaps
    - secrets
    - nodes
    - pods
    - services
    - resourcequotas
    - replicationcontrollers
    - limitranges
    - persistentvolumeclaims
    - persistentvolumes
    - namespaces
    - endpoints
    verbs:
    - list
    - watch
  - apiGroups:
    - extensions
    resources:
    - daemonsets
    - deployments
    - replicasets
    - ingresses
    verbs:
    - list
    - watch
  - apiGroups:
    - apps
    resources:
    - daemonsets
    - deployments
    - replicasets
    - statefulsets
    verbs:
    - list
    - watch
  - apiGroups:
    - batch
    resources:
    - cronjobs
    - jobs
    verbs:
    - list
    - watch
  - apiGroups:
    - autoscaling
    resources:
    - horizontalpodautoscalers
    verbs:
    - list
    - watch
  - apiGroups:
    - policy
    resources:
    - poddisruptionbudgets
    verbs:
    - list
    - watch
  - apiGroups:
    - certificates.k8s.io
    resources:
    - certificatesigningrequests
    verbs:
    - list
    - watch
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      manifestctl.sam.data.sfdc.net/swagger: disable
    name: kube-state-metrics
    namespace: kube-system
  spec:
    replicas: 1
    selector:
      matchLabels:
        k8s-app: kube-state-metrics
    template:
      metadata:
        labels:
          k8s-app: kube-state-metrics
          name: kube-state-metrics
      spec:
        containers:
        - image: ops0-artifactrepo2-0-prd.data.sfdc.net/dva/kube-state-metrics-sfdc-0.0.1:3
          name: kube-state-metrics
          ports:
          - containerPort: 8080
            name: http-metrics
          - containerPort: 8081
            name: telemetry
          readinessProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 5
            timeoutSeconds: 5
          resources:
            limits:
              memory: 2000Mi
            requests:
              cpu: "0.5"
              memory: 2000Mi
        serviceAccountName: kube-state-metrics-serviceaccount
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    name: kube-state-metrics-serviceaccount
    namespace: kube-system
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      prometheus.io/scrape: "true"
    labels:
      k8s-app: kube-state-metrics
    name: kube-state-metrics-service
    namespace: kube-system
  spec:
    ports:
    - name: http-metrics
      port: 8080
      protocol: TCP
      targetPort: http-metrics
    - name: telemetry
      port: 8081
      protocol: TCP
      targetPort: telemetry
    selector:
      k8s-app: kube-state-metrics
kind: List
metadata: {}
