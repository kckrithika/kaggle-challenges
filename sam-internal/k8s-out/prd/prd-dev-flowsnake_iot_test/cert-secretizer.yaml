apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: cert-secretizer
  namespace: flowsnake
spec:
  minReadySeconds: 45
  replicas: 1
  template:
    metadata:
      annotations:
        madkub.sam.sfdc.net/allcerts: '{"certreqs": [{"cert-type": "server", "kingdom":
          "prd", "name": "ingresscerts", "role": "flowsnake", "san": ["dev0shared0-flowsnakeiottest1-0-prd.data.sfdc.net"]}]}'
      labels:
        name: cert-secretizer
    spec:
      containers:
      - image: dva-registry.internal.salesforce.com/dva/flowsnake-cert-secretizer:544
        name: cert-secretizer
        volumeMounts:
        - mountPath: /certToSecretConfigs
          name: certs-to-secrets
        - mountPath: /certs
          name: datacerts
      - args:
        - /sam/madkub-client
        - --madkub-endpoint
        - https://10.254.208.254:32007
        - --maddog-endpoint
        - https://all.pkicontroller.pki.blank.prd.prod.non-estates.sfdcsd.net:8443
        - --maddog-server-ca
        - /maddog-certs/ca/security-ca.pem
        - --madkub-server-ca
        - /maddog-certs/ca/cacerts.pem
        - --token-folder
        - /tokens
        - --funnel-endpoint
        - http://ajna0-funnel1-0-prd.data.sfdc.net:80
        - --kingdom
        - prd
        - --superpod
        - None
        - --estate
        - prd-dev-flowsnake_iot_test
        - --refresher
        - --run-init-for-refresher-mode
        - --cert-folders
        - ingresscerts:/certs
        env:
        - name: MADKUB_NODENAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: MADKUB_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: MADKUB_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        image: ops0-artifactrepo2-0-prd.data.sfdc.net/docker-release-candidate/tnrp/sam/madkub:1.0.0-0000062-dca2d8d1
        name: sam-madkub-integration-refresher
        resources: {}
        volumeMounts:
        - mountPath: /certs
          name: datacerts
        - mountPath: /tokens
          name: tokens
        - mountPath: /maddog-certs
          name: pki
      initContainers:
      - args:
        - /sam/madkub-client
        - --madkub-endpoint
        - https://10.254.208.254:32007
        - --maddog-endpoint
        - https://all.pkicontroller.pki.blank.prd.prod.non-estates.sfdcsd.net:8443
        - --maddog-server-ca
        - /maddog-certs/ca/security-ca.pem
        - --madkub-server-ca
        - /maddog-certs/ca/cacerts.pem
        - --token-folder
        - /tokens
        - --funnel-endpoint
        - http://ajna0-funnel1-0-prd.data.sfdc.net:80
        - --kingdom
        - prd
        - --superpod
        - None
        - --estate
        - prd-dev-flowsnake_iot_test
        - --cert-folders
        - ingresscerts:/certs
        env:
        - name: MADKUB_NODENAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: MADKUB_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: MADKUB_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        image: ops0-artifactrepo2-0-prd.data.sfdc.net/docker-release-candidate/tnrp/sam/madkub:1.0.0-0000062-dca2d8d1
        name: sam-madkub-integration-init
        resources: {}
        volumeMounts:
        - mountPath: /certs
          name: datacerts
        - mountPath: /tokens
          name: tokens
        - mountPath: /maddog-certs
          name: pki
      restartPolicy: Always
      volumes:
      - configMap:
          name: certs-to-secrets
        name: certs-to-secrets
      - hostPath:
          path: /etc/kubernetes/kubeconfig
        name: kubeconfig
      - hostPath:
          path: /data/certs
        name: kubeconfig-certs
      - hostPath:
          path: /etc/pki_service
        name: pki
      - emptyDir:
          medium: Memory
        name: datacerts
      - emptyDir:
          medium: Memory
        name: tokens
