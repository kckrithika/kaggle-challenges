#!/bin/bash
#exit on error
set -e

# Determine the path of tnrp/versions relative to the directory
# from which the tnrp/evaluate_pr script was called.
getSMBPackageName() {
    SCRIPT_DIR="${BASH_SOURCE%/*}"
    if [[ ! -d  "${SCRIPT_DIR}" ]]; then
      echo "${SCRIPT_DIR} is missing or not a directory."
      exit 1
    fi

    VERSIONS_SCRIPT="${SCRIPT_DIR}/versions"
    if [[ ! -f "${VERSIONS_SCRIPT}" ]]; then
      echo "${VERSIONS_SCRIPT} is missing or not a file."
      exit 1
    fi

    source "${VERSIONS_SCRIPT}"
    if [[ -z "${SMBPACKAGE}" ]]; then
      echo "SMBPACKAGE variable must be non-empty."
      exit 1
    fi
}

REPO_OWNER=sam

if [ -z "$FIREFLY" ]; then
   SAMBINDIR=/opt/sam
else
   echo "*** EXECUTING IN $FIREFLY ENVIRONMENT"
   SAMBINDIR=/sam
   # This is required for SAM to run json consistency tests for sam-internal files
   getSMBPackageName
   yum install -y make gcc gcc-c++ "${SMBPACKAGE}"
   echo "Verifying package installed: ${SMBPACKAGE}"
   if ! yum list installed "${SMBPACKAGE}"; then
     echo "Expected package not installed: ${SMBPACKAGE}"
     exit 1
   fi
fi


#exitIfMergeCommitFound checks if there are any
#merge commits introduced by the current branch
#which are not present in the origin/master.
#If it finds any merge commits, it calls exit.
exitIfMergeCommitFound() {
    GIT_CURRENT_BRANCH=$(git name-rev --name-only HEAD)
    tnrpBotName='tnrp-ro@salesforce.com'
    #Find count of all the merge commits that are
    #present in the current branch but not in origin/master.
    #Merge commits by tnrp bot are ignored.
    key="commit"
    mergeCommits=$(git log origin/master..$GIT_CURRENT_BRANCH --merges --pretty=format:"$key %H %P %an" |grep -v $tnrpBotName | grep -c $key) || true
    #Find count of all non merge commits that are
    #present in the current branch but not in origin/master.
    #Commits by tnrp bot are ignored.
    nonMergeCommits=$(git log origin/master..$GIT_CURRENT_BRANCH --no-merges --pretty=format:"$key %H %P %an" |grep -v $tnrpBotName | grep -c $key) || true
    echo "PR has ${mergeCommits} merge commits and ${nonMergeCommits} normal commits"
    if [ "$mergeCommits" -ne "0" ]
    then
        echo "Merge commits are not allowed in PRs"
        echo "For help removing them see http://stackoverflow.com/questions/21115596/remove-a-merge-commit-keeping-current-changes"
        exit 1
    fi
}

exitIfMergeCommitFound

# If running in Firefly, we need to remove everything from /tmp in order to make sure
# any stale generated files don't interfere with the current run.
# This is only needed for Firefly since execution environments are recycled accross runs
if [ -z "$FIREFLY" ]; then
    rm -rf /tmp/manifests || true
else
    rm -rf /tmp/* || true
fi

cd /tmp
git clone git@git.soma.salesforce.com:sam/${TNRP_PRODUCT}.git manifests

cd -

$SAMBINDIR/aclrepo -validateDir $PWD

# This is a temporary work-around while we wait for secret support in Firefly ~2/15.
# This is a pgp encrypted read-only git token.  We use the md5 of the firefly ssh key to decrypt this at runtime.
echo "jA0EBwMCePMTZtkaEHXW0mMBsHBfGssM0kNt8edebupSSPdtUSCrZaXv3u+qxw5lQ67p0SQmMYXxzG+chWx25dVVrzHQCAjcHhWO4d0cQLcmRUIhftd4/LZ+w0rq/BFAmK4MjzJm3om0BZFfrMQZqyUS/8w=" | base64 -d > token.txt.gpg
gpg --yes --batch --passphrase=$(md5sum /root/.ssh/id_rsa | cut -f1 -d" ") ./token.txt.gpg &> /dev/nul

# For ops0-artifactrepo1-0-gcp and gcr.io in unvalidated-image-prefixes, it is a temp work-around to bypass image existence check during image promotion so that we can unblock customer PCN deployment
# The reason we need two image prefixes here is that we have dual-run of both SMB and MANIFESTCTL:
#  1)for SMB, though gcr images are valid long-form images, it is seen as short-form and get added prefix due to hard coded SMB function;
#  2)for MANIFESTCTL, it is reserved in its original form
$SAMBINDIR/evaluate-pr \
--ghe-token-file ./token.txt \
--self-authorize-dirs=xrd,prd,mvp,aws-us-east-2\
-authorizer $STAGE_GO_TRIGGER_USER \
-orig-dir /tmp/manifests \
-dir-with-changes $PWD \
-pr="$STAGE_PULL_REQUEST_ID" \
-smb $SAMBINDIR/sam-manifest-builder \
-repo-name="$TNRP_PRODUCT" \
-unvalidated-image-prefixes "minikube,ops0-artifactrepo1-0-mvp,gcr.io,ops0-artifactrepo2-0-xrd.slb.sfdc.net" \
-full-schema \
-image-exists-tries=2 \
-image-exists-try-sleep-duration=10s \
-validate-self-check-enabled=true \
-self-authorize-check-regex="^(?:[^/]*/)sam-internal/k8s-out/([^/]*)/([^/]*)/,^(?:[^/]*/)apps/team/(?:[^/]*)/vips/" \
--moratoriumEnabled=true \
--maxNumberOfAdmins 2 \
--moratoriumBegin="2019-05-01T08:00:00Z" \
--moratoriumEnd="2019-06-01T08:00:00Z" \
--imageRulePath="sam-internal/k8s-in/sam/configs/image-rules.json" \
--MoratoriumAccessDisabledMessage="Emergency moratorium is in effect.  See https://gus.lightning.force.com/lightning/r/0D5B000000sMOn6KAG/view  During the moratorium prod PRs require approval by an admin, and admins are required to ensure that changes properly follow the moratorium guidelines. For more information see http://sfdc.co/sam-admins." \
--timeout=10m \
--disableDedupFlag=false \

# Validate vips.yaml files for SLB, this does not copy any files to output
/opt/slb/slb-manifest-builder -root $PWD -output $PWD -validate --vcioptions.strict -v=1
