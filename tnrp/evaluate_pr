#!/bin/bash -e

#Exit on first error
set -e

# Check if json files conforms to jsonnets
ensureLatestJsons() {
pushd ./sam-internal/k8s-in
./build.sh > /dev/null
popd
if [[ `git status --porcelain` ]]; then
  echo "build.sh output does not match applied changes"
  git status
  exit 1
fi
}

#exitIfMergeCommitFound checks if there are any
#merge commits introduced by the current branch
#which are not present in the origin/master.
#If it finds any merge commits, it calls exit.
exitIfMergeCommitFound() {
  GIT_CURRENT_BRANCH=$(git name-rev --name-only HEAD)
  tnrpBotName='tnrp-ro@salesforce.com'
  #Find count of all the merge commits that are
  #present in the current branch but not in origin/master.
  #Merge commits by tnrp bot are ignored.
  key="commit"
  mergeCommits=$(git log origin/master..$GIT_CURRENT_BRANCH --merges --pretty=format:"$key %H %P %an" |grep -v $tnrpBotName | grep -c $key) || true
  #Find count of all non merge commits that are
  #present in the current branch but not in origin/master.
  #Commits by tnrp bot are ignored.
  nonMergeCommits=$(git log origin/master..$GIT_CURRENT_BRANCH --no-merges --pretty=format:"$key %H %P %an" |grep -v $tnrpBotName | grep -c $key) || true
  echo "PR has ${mergeCommits} merge commits and ${nonMergeCommits} normal commits"
  if [ "$mergeCommits" -ne "0" ]
  then
    echo "Merge commits are not allowed in PRs"
    echo "For help removing them see http://stackoverflow.com/questions/21115596/remove-a-merge-commit-keeping-current-changes"
    exit 1
  fi
}

echo -e "\nEvaluating PR\n"

ensureLatestJsons

exitIfMergeCommitFound

/opt/sam/aclrepo --pr=$STAGE_PULL_REQUEST_ID --userId=$STAGE_GO_TRIGGER_USER

/opt/sam/sam-manifest-builder --root='./' --swaggerspecdir='/opt/sam/swagger-spec' -validateonly -validationExceptionsFile=./sam-internal/validation-whitelist.yaml
