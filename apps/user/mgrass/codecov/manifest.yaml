apiVersion: v1

system:
  notifications:
    email:
    - mgrass@salesforce.com

  functions:
  - name: postgres
    count: 1
    type: stateful-set
    containers:
    - name: postgres
      image: ops0-artifactrepo1-0-prd.data.sfdc.net/docker-sam/mgrass/postgres:9.3

      env:
      # Set PGDATA to a subdir, since postgres doesn't like being at a mountpoint.
      # See https://github.com/docker-library/docs/pull/277/files
      - name: PGDATA
        value: /var/lib/postgresql/data/pgdata

      volumeMounts:
      - name: datavol
        mountPath: /var/lib/postgresql/data

      ports:
      - containerPort: 5432

      resources:
        requests:
          memory: "1Gi"
          cpu: "1"
        limits:
          memory: "4Gi"
          cpu: "2"

      livenessProbe:
        tcpSocket:
          port: 5432
        failureThreshold: 3
        initialDelaySeconds: 5
        periodSeconds: 10

    lbname: postgres-headless-lb

    # Give containers a bit of time to shut down, as they might be syncing
    # state into the PV on shutdown
    terminationGracePeriodSeconds: 30

    volumeClaimTemplates:
    - name: datavol
      storageClassName: standard
      storageSizeRequest: 100Gi

  - name: redis
    count: 1
    type: stateful-set
    containers:
    - name: redis
      image: ops0-artifactrepo1-0-prd.data.sfdc.net/docker-sam/mgrass/redis:3.0.7-alpine

      volumeMounts:
      - name: datavol
        mountPath: /data

      ports:
      - containerPort: 6379

      resources:
        requests:
          memory: "1Gi"
          cpu: "1"
        limits:
          memory: "16Gi"
          cpu: "2"

      livenessProbe:
        tcpSocket:
          port: 6379
        failureThreshold: 3
        initialDelaySeconds: 5
        periodSeconds: 10

    lbname: redis-headless-lb

    # Give containers a bit of time to shut down, as they might be syncing
    # state into the PV on shutdown
    terminationGracePeriodSeconds: 30

    volumeClaimTemplates:
    - name: datavol
      storageClassName: standard
      storageSizeRequest: 100Gi

  - name: monitor
    count: 1
    type: stateful-set
    containers:
    - name: monitor
      image: ops0-artifactrepo1-0-prd.data.sfdc.net/docker-sam/mgrass/codecov/enterprise:v4.3.9-1

      volumeMounts:
      - name: codecov-config
        mountPath: /config
        readOnly: true

      ports:
      - containerPort: 5000

      resources:
        requests:
          memory: "1Gi"
          cpu: "1"
        limits:
          memory: "2Gi"
          cpu: "2"

      livenessProbe:
        tcpSocket:
          port: 5000
        failureThreshold: 3
        initialDelaySeconds: 5
        periodSeconds: 10

    lbname: monitor-nodeport-lb

    # Give containers a bit of time to shut down, as they might be syncing
    # state into the PV on shutdown
    terminationGracePeriodSeconds: 30

    volumeClaimTemplates:
    - name: datavol
      storageClassName: standard
      storageSizeRequest: 100Gi

  - name: core
    count: 1
    type: stateful-set
    containers:
    # worker container
    - name: worker
      image: ops0-artifactrepo1-0-prd.data.sfdc.net/docker-sam/mgrass/codecov/enterprise:v4.3.9-1
      args:
      - /bin/run
      - worker
      volumeMounts:
      - name: codecov-config
        mountPath: /config
        readOnly: true
      - name: datavol
        mountPath: /archive
    # web container
    - name: web
      image: ops0-artifactrepo1-0-prd.data.sfdc.net/docker-sam/mgrass/codecov/enterprise:v4.3.9-1
      args:
      - /bin/run
      - web
      volumeMounts:
      - name: codecov-config
        mountPath: /config
        subPath: codecov.yml
        readOnly: true
      - name: datavol
        mountPath: /archive
      ports:
      - containerPort: 5000
    # nginx container
    - name: nginx
      image: ops0-artifactrepo1-0-prd.data.sfdc.net/docker-sam/mgrass/nginx:stable-alpine
      volumeMounts:
      - name: codecov-config
        mountPath: /etc/nginx/nginx.conf
        subPath: nginx.conf
        readOnly: true
      - name: datavol
        mountPath: /archive
      - name: certs
        mountPath: /certs
      ports:
        - containerPort: 80
        - containerPort: 443

      resources:
        requests:
          memory: "1Gi"
          cpu: "1"
        limits:
          memory: "2Gi"
          cpu: "2"

      livenessProbe:
        tcpSocket:
          port: 5000
        failureThreshold: 3
        initialDelaySeconds: 5
        periodSeconds: 10

    lbname: codecov

    # Give containers a bit of time to shut down, as they might be syncing
    # state into the PV on shutdown
    terminationGracePeriodSeconds: 30

    volumeClaimTemplates:
    - name: datavol
      storageClassName: standard
      storageSizeRequest: 100Gi

    volumes:
    - name: certs
      maddogCert:
        type: server
        lbnames:
        - codecov
    - name: codecov-config
      k4aSecret:
        secretName: codecov

  loadbalancers:
  - lbname: postgres-headless-lb
    function: postgres
    slbEnabled: false
    ports:
      - port: 5432
        targetport: 5432
  - lbname: redis-headless-lb
    function: redis
    slbEnabled: false
    ports:
      - port: 6379
        targetport: 6379
  - lbname: monitor-lb
    function: monitor
    slbEnabled: true
    ports:
      - port: 5000
        targetport: 5000
        lbtype: tcp
  - lbname: codecov
    function: core
    slbEnabled: true
    nodeExposed: false
    ports:
      - port: 80
        targetport: 80
        lbtype: dsr
      - port: 443
        targetport: 443
        lbtype: dsr
