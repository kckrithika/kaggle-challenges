apiVersion: v1
system:
  functions:
  - name: redis-bootstrap
    count: 1
    labels:
      sentinel: "true"
    containers:
    - name: sentinel
      image: shared0-samcontrol1-1-prd.eng.sfdc.net:5000/gutsin-redis:3.2.7d
      env:
      - name: SENTINEL
        value: "true"
      - name: BOOTSTRAP
        value: "true"
      ports:
        - containerPort: 26379
      livenessProbe:
        exec:
          command:
          - bash
          - /etc/healthprobe.sh
        initialDelaySeconds: 5
        periodSeconds: 5
    - name: redis
      image: shared0-samcontrol1-1-prd.eng.sfdc.net:5000/gutsin-redis:3.2.7d
      env:
      - name: MASTER
        value: "true"
      ports:
      - containerPort: 6379
      livenessProbe:
        exec:
          command:
          - bash
          - /etc/healthprobe.sh
        initialDelaySeconds: 5
        periodSeconds: 5
      volumeMounts:
      - mountPath: /redis-master-data
        name: data
      workingDir: /redis-master-data
    volumes:
    - emptyDir: {}
      name: data
    strategy:
      type: RollingUpdate
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 1

  - name: redis-rc
    count: 2
    containers:
    - name: redis
      image: shared0-samcontrol1-1-prd.eng.sfdc.net:5000/gutsin-redis:3.2.7d
      ports:
      - containerPort: 6379
      livenessProbe:
        exec:
          command:
          - bash
          - /etc/healthprobe.sh
        initialDelaySeconds: 5
        periodSeconds: 5
      volumeMounts:
      - mountPath: /redis-master-data
        name: data
      workingDir: /redis-master-data
    volumes:
    - emptyDir: {}
      name: data
    strategy:
      type: RollingUpdate
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 1

  - name: redis-sentinel
    count: 2
    labels:
      sentinel: "true"
    containers:
    - name: sentinel
      image: shared0-samcontrol1-1-prd.eng.sfdc.net:5000/gutsin-redis:3.2.7d
      env:
      - name: SENTINEL
        value: "true"
      ports:
      - containerPort: 26379
      livenessProbe:
        exec:
          command:
          - bash
          - /etc/healthprobe.sh
        initialDelaySeconds: 5
        periodSeconds: 5
    strategy:
      type: RollingUpdate
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 1

  - name: report-collectorha-sentinel-test
    count: 3
    containers:
    - name: report-collectorha-sentinel-test
      image: shared0-samcontrol1-1-prd.eng.sfdc.net:5000/gutsin-rc:1
      livenessProbe:
        httpGet:
          path: /v1/reports
          port: 8081
      ports:
      - name: provider
        containerPort: 8080
      - name: consumer
        containerPort: 8081
      - name: provider-https
        containerPort: 8443
      - name: consumer-https
        containerPort: 8444
      resources:
        limits: { cpu: "10", memory: "20Gi" }
        requests: { cpu: "10", memory: "20Gi" }
      volumeMounts:
      - mountPath: /var/log/report-collector
        name: logvol
      env:
      - name: ReportCollector_datastore
        value: "redisSentinel"
      - name: ReportCollector_redisSentinel_masterName
        value: "mymaster"
      - name: ReportCollector_redisSentinel_sentinels
        value: "[{\"host\":\"10.254.218.212\",\"port\":26379}]"
      - name: ReportCollector_app_https_enabled
        value: true
      - name: ReportCollector_ajna_publishEnabled
        value: true
      command: ["/bin/sh", "-c"]
      args: ["
      export ReportCollector_ajna_funnelHost=${SFDC_METRICS_SERVICE_HOST} ;
      export ReportCollector_ajna_funnelPort=${SFDC_METRICS_SERVICE_PORT} ;
      export ReportCollector_ajna_datacenter=${KINGDOM} ;
      export ReportCollector_ajna_device=${FUNCTION_INSTANCE_NAME} ;
      ${JAVA_HOME}/bin/java
        -Dlogback.configurationFile=${APP_DIR}/logback-docker.xml
        -Dvertx.disableFileCPResolving=true
        -Dvertx.logger-delegate-factory-class-name=io.vertx.core.logging.SLF4JLogDelegateFactory
        -Dvertx.metrics.options.enabled=true
        -Dvertx.metrics.options.registryName=vertx-registry
        -Dvertx.disableDnsResolver=true
        -Dlog_dir=${LOG_DIR}
        -Dinstance=${FUNCTION_INSTANCE_NAME}
        -jar ${JAR_PATH}
      "]
    volumes:
    - name: logvol
      hostPath:
        path: /var/log/report-collector

  loadbalancers:
  - lbname: sentinel-lb
    selector:
      sentinel: "true"
    ports:
      - port: 26379
        targetport: 26379
  - lbname: reportcollectorhalb
    function: report-collectorha-sentinel-test
    nodeExposed: true
    ports:
      # LB was supposed to allow SSL on the backend, but its not currently
      # supported, so we will use non SSL but on these node ports (18443, 18444)
      # since its the one exposed in estates for sam_minionreportcollector
    - port: 18443
      targetport: 8080
    - port: 18444
      targetport: 8081
