## ##
## This VIP definition creates a VIP named ssh-to-predict-snahm-xrd.slb.sfdc.net
## This VIP listens on port 22 and forwards packets to port 22 on one of the specified backends. 
## Traffic is only sent to backend servers if they satisfy the specified health probe.
## This contrived example allows for a user to ssh to a randomly selected member of a backend pool.

# lbname specifies the unqualified name of the VIP. In PRD-SAM, for example,
# the name would be [lbname]-[user]-prd.slb.sfdc.net, where 'user' represents
# your user namespace under sam/manifests/app/user/
- lbname: ssh-to-predict
# servers specifies the pool members for the VIP
  servers:
   - 10.233.254.60
   - 10.233.254.54
   - 10.233.254.53
  # port specifies the port upon which the VIP listens.
  # targetport specifies the port on the backend pool member that actually receives the traffic.
  # Packets sent to lbname:port will be sent to server:targetport
  # lbtype specifies the style of load balancing. For L7 functionality (default
  # for an HTTP VIP), specify a value of 'http'. For L4 passthrough, specify tcp.
  ports:
   - port: 22
     targetport: 22
     lbtype: tcp
     # Note the healthport and healthpath. Each of these backends has an HTTP endpoint listening on healthport
     # and returns 200 OK on the specified healthpath if the backend is eligible to receive traffic.
     healthport: 80
     healthpath: /hello
     healthprotocol: http

## ##
## This VIP definition creates an HTTP VIP named predict-snahm-xrd.slb.sfdc.net
## This VIP listens on port 80 and forwards packets to port 80 on one of the specified backends. 
## Traffic is only sent to backend servers if they satisfy the specified health probe.
## This contrived example produces a health-checked HTTP VIP that demonstrates different listening and forwarding
## ports.

# lbname specifies the unqualified name of the VIP. In XRD, for example,
# the name would be [lbname]-[user]-xrd.slb.sfdc.net, where 'user' represents
# your user namespace under sam/manifests/app/user/
- lbname: predict
# servers specifies the pool members for the VIP
  servers:
   - 10.233.254.60
   - 10.233.254.54
   - 10.233.254.53
  # port specifies the port upon which the VIP listens.
  # targetport specifies the port on the backend pool member that actually receives the traffic.
  # Packets sent to lbname:port will be sent to server:targetport
  # lbtype specifies the style of load balancing. For L7 functionality (default
  # for an HTTP VIP), specify a value of 'http'. For L4 passthrough, specify 'tcp'.
  ports:
   - port: 80
     targetport: 80
     lbtype: http
     # Note the healthport and healthpath. Each of these backends has an HTTP endpoint listening on healthport
     # and returns 200 OK on the specified healthpath if the backend is eligible to receive traffic.
     # healthprotocol can be either http or https.
     healthport: 80
     healthpath: /hello
     healthprotocol: http
     # sticky specifies that session stickiness will be enforced via a cookie. The integer value
     # indicates the duration in seconds of the cookie.
     #sticky: 300
     # tls indicates if the connection between the client and the VIP should be encrypted.
     tls: false
     # reencrypt indicates if the connection between the load balancer and the backend should be 
     # encrypted. For end-to-end encryption, both tls and reencrypt should be set to true.
     #reencrypt: false
     # vipmaxrps indicates the total requests per second that the VIP will serve.
     vipmaxrps: 100
     # clientmaxrps specifies the total requests per second that a given client IP may issue.
     clientmaxrps: 2
     # responserate, in MB per second, limits the rate of response transmission to a client.
     responserate: 100
