apiVersion: v1

system:
  notifications:
    email:
      - vijay.kota@salesforce.com
  functions:
    - name: cs55-app
      count: 1
      identity:
        serviceName: app
        pod: cs55
      containers:
        - name: app
          image: ops0-artifactrepo1-0-prd.data.sfdc.net/docker-sam/vijay-kota/myenvoy:10Jul19
          command: ["/usr/bin/python"]
          args: ["/home/sfdc-sherpa/myscripts/myapp.py"]
          ports:
            - containerPort: 2052
              name: amqp0-port
            - containerPort: 2055
              name: amqp1-port
            - containerPort: 5442
              name: http1-tls-out
            - containerPort: 12345
              name: client-port
          env:
            - name: CLIENT_PORT
              value: 12345
          resources:
            limits: { cpu: "8", memory: "16Gi" }
            requests: { cpu: "8", memory: "16Gi" }
          livenessProbe:
            exec:
              command: ["/bin/true"]
            initialDelaySeconds: 10
            timeoutSeconds: 10
            periodSeconds: 60
          readinessProbe:
            exec:
              command: ["/bin/true"]
            initialDelaySeconds: 10
            timeoutSeconds: 10
          volumeMounts:
            - mountPath: /var/log/qpid
              name: logvol

        - name: sherpa
          # https://sconelibci.dop.sfdc.net/job/servicelibs/job/sherpa-envoy/job/master/73
          image: sfci/servicelibs/sherpa-envoy:1.0.7
          # See https://git.soma.salesforce.com/servicelibs/sherpa#ports
          ports:
          - containerPort: 15373
            name: sherpa-adm
          resources:
            limits: { cpu: "1", memory: "1Gi" }
            requests: { cpu: "1", memory: "1Gi" }
          env:
            - name: SFDC_ENVIRONMENT
              value: mesh
            - name: ENVOY_DEBUG_OPTIONS
              value: --log-level trace --log-path /home/sfdc-sherpa/envoy.log
          livenessProbe:
            exec:
              command:
              - "./bin/is-alive"
            initialDelaySeconds: 120
            periodSeconds: 5
          readinessProbe:
            exec:
              command:
              - "./bin/is-ready"
            initialDelaySeconds: 110
            periodSeconds: 5
          # Mount volumes with certificates. The paths here match the defaults assumed by sherpa
          volumeMounts:
          - name: sherpaclientcert
            mountPath: /client-certs
          - name: sherpaservercert
            mountPath: /server-certs
          - name: sherpa-log-volume
            mountPath: /log

      volumes:
        - name: logvol
          hostpath:
            path: /var/log/qpid
        - name: sherpaclientcert
          maddogCert:
            type: client
        - name: sherpaservercert
          maddogCert:
            type: server
        - name: sherpa-log-volume
          hostPath:
            path: /home/sfdc-sherpa/logs
        - name: beacon-log-volume
          hostPath:
            path: /home/sfdc-beacon/logs

    - name: cs55-qpid
      type: stateful-set
      count: 2
      identity:
        serviceName: qpid
        pod: cs55
      containers:
        - name: qpid
          image: ops0-artifactrepo1-0-prd.data.sfdc.net/docker-sam/vijay-kota/myenvoy:10Jul19
          command: ["/bin/sh"]
          args: ["-c", "if [[ $FUNCTION_INSTANCE_NAME = *-0 ]]; then export AMQP_PORT=$AMQP0 ; else export AMQP_PORT=$AMQP1 ; fi; nohup /usr/bin/python /home/sfdc-sherpa/myscripts/myqpid.py &; export AMQP_PORT=$HTTPX; /usr/bin/python /home/sfdc-sherpa/myscripts/myqpid.py"]
          ports:
            - containerPort: 2051
            - containerPort: 2054
            - containerPort: 7022
            # name: http-port
            # containerPort: 7022
          env:
            - name: AMQP0
              value: 2051
            - name: AMQP1
              value: 2054
            - name: HTTPX
              value: 7022
            # name: QPID_JAVA_HEAPSZ
            # value: 8g
          resources:
            limits: { cpu: "8", memory: "16Gi" }
            requests: { cpu: "8", memory: "16Gi" }
          livenessProbe:
            exec:
              command: ["/bin/true"]
            initialDelaySeconds: 10
            timeoutSeconds: 10
            periodSeconds: 60
          readinessProbe:
            exec:
              command: ["/bin/true"]
            initialDelaySeconds: 10
            timeoutSeconds: 10
          volumeMounts:
            - mountPath: /var/log/qpid
              name: logvol

        - name: beacon
          image: ops0-artifactrepo1-0-prd.data.sfdc.net/docker-sam/servicemesh/beacon:1.0.0
          #ommand: ["/bin/sleep"]
          #rgs: ["701000"]
          command: ["/bin/sh"]
          args: ["-c", "if [[ $FUNCTION_INSTANCE_NAME = *-0 ]]; then export c1=qpid-0; export c2=qpid-2; export p=$SHERPA0 ; else export c1=qpid-1; export c2=qpid-3; export p=$SHERPA1 ; fi; /usr/bin/java -jar /home/scone/service.jar -endpoint samapp/user-vijay-kota/${c1}:POD:${p} -endpoint samapp/user-vijay-kota/${c2}:POD:$HTTPX"]
            # -endpoint
            # samapp/$(FUNCTION_NAMESPACE)/$(FUNCTION)-http:DATACENTER_ALLENV:7014
          env:
            - name: SFDC_ENVIRONMENT
              value: mesh
            - name: SHERPA0
              value: 2050
            - name: SHERPA1
              value: 2053
            - name: HTTPX
              value: 7442
          livenessProbe:
            initialDelaySeconds: 5
            exec:
              command:
                # "/home/scone/is-alive.sh"
                - "/bin/true"
          resources:
            limits: { cpu: "1", memory: "1Gi" }
            requests: { cpu: "1", memory: "1Gi" }
          volumeMounts:
            - mountPath: /home/scone/logs
              name: beacon-log-volume

        - name: sherpa
          # https://sconelibci.dop.sfdc.net/job/servicelibs/job/sherpa-envoy/job/master/73
          image: sfci/servicelibs/sherpa-envoy:1.0.7
          # See https://git.soma.salesforce.com/servicelibs/sherpa#ports
          ports:
          - containerPort: 15373
            name: sherpa-adm
          - containerPort: 2050
          - containerPort: 2053
          # containerPort: 7014
          # name: http1-in
          - containerPort: 7442
            name: http1-tls-in
          resources:
            limits: { cpu: "1", memory: "1Gi" }
            requests: { cpu: "1", memory: "1Gi" }
          env:
            - name: SFDC_ENVIRONMENT
              value: mesh
            - name: ENVOY_DEBUG_OPTIONS
              value: --log-level trace --log-path /home/sfdc-sherpa/envoy.log
          livenessProbe:
            exec:
              command:
              - "./bin/is-alive"
            initialDelaySeconds: 120
            periodSeconds: 5
          readinessProbe:
            exec:
              command:
              - "./bin/is-ready"
            initialDelaySeconds: 110
            periodSeconds: 5
          # Mount volumes with certificates. The paths here match the defaults assumed by sherpa
          volumeMounts:
          - name: sherpaclientcert
            mountPath: /client-certs
          - name: sherpaservercert
            mountPath: /server-certs
          - name: sherpa-log-volume
            mountPath: /log

      lbname: cs55-qpid-stateful-lb

      volumes:
        - name: logvol
          hostpath:
            path: /var/log/qpid
        - name: sherpaclientcert
          maddogCert:
            type: client
        - name: sherpaservercert
          maddogCert:
            type: server
        - name: sherpa-log-volume
          hostPath:
            path: /home/sfdc-sherpa/logs
        - name: beacon-log-volume
          hostPath:
            path: /home/sfdc-beacon/logs

  loadbalancers:
  - lbname: cs55-app-lb
    function: cs55-app
    slbenabled: true
    ports:
      - port: 2052
        targetport: 2052
      - port: 2055
        targetport: 2055
      - port: 5442
        targetport: 5442
      - port: 12345
        targetport: 12345
      - port: 15373
        targetport: 15373
  - lbname: cs55-qpid-lb
    function: cs55-qpid
    slbenabled: true
    ports:
      - port: 2050
        targetport: 2050
      - port: 2051
        targetport: 2051
      - port: 2053
        targetport: 2053
      - port: 2054
        targetport: 2054
      - port: 7022
        targetport: 7022
