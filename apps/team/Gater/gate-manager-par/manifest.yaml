apiVersion: v1

system:
  functions:
  - name: gate-manager-par
    count: 5
    hostnetwork: true
    containers:
    - name: gater-par
      # container image/version to run.
      # this is published separately to ops0-artifactrepo1-0-phx.data.sfdc.net
      image: tnrp/gater/gater:1.1.0-0000025-13374560
      args:
        - start
        - --logging.dir=/log
        - --java.io.tmpdir=/tmp
        - --server.port=9090
        - --settings.path=prod.-.par.-.gater
        - --superpod.name=-
        - --settings.superPod=-
        - --spring.datasource.url=jdbc:h2:file:/fastdata/gater/gaterdb;ACCESS_MODE_DATA=rws;CACHE_SIZE=20971520;CACHE_TYPE=SOFT_LRU;
        - --logging.perms.enforce=false
        - --tnrp.use-vip=false
      # associate the /log directory to a logical volume. logging.app.dir is set to this in the startup script args above,
      # and this volume mount is mapped to a host directory below in the volumes section.
      volumeMounts:
      - mountPath: /log
        name: logvol
      - mountPath: /fastdata/gater
        name: dbvol
      # expose gater outside the container. Note that the host is already exposing port 8080, so we need to
      # change this to a different port for instances running in SAM. Note server.port above reflects this.
      # The ports listed here are exposed at the host network level. This is controlled by the hostnetwork setting above.
      ports:
      - containerPort: 9522
      - containerPort: 9523 
      - containerPort: 9090
      - containerPort: 15372

    # maps the logval volumnMount to a directory on the host machine. Logs in this directory will be available
    # for a shart time after a docker image is shut down. The SAM splunk forwarders will handle the logs being
    # written to this directory.
    # TBD: SAM is still implementing the splunk forwarding functionality. This location may change.
    volumes:
    - name: logvol
      hostPath:
        path: /home/sfdc-gater/logs
    - name: dbvol
      hostPath:
        path: /home/sfdc-gater/db
    strategy:
      type: RollingUpdate
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1