apiVersion: v1

system:
  notifications:
    email:
      - cre@salesforce.com
  functions:
  - name: cre-sp-ccp-dev
    count: 1
    labels:
      app: cre-sp-ccp-dev
    annotations:
      "routing.mesh.sfdc.net/enabled": "true"
    containers:
    - name: cre-sp-ccp-dev
      image: ops0-artifactrepo1-0-prd.data.sfdc.net/docker-sam/cre-fusion/services/control-plane/stream-processor:1.9.0.0.eb_offset_demo.4b091e4.7
      env:
        - name: PUBLISHING_TOPIC
          value: sfdc.prod.cre__prd.ajna_local__cre_outbound_CCP_Shared_Dev
        - name: PUBLISHING_GROUP_ID
          value: cre_outbound_group_id_ccp_dev
        - name: PUBLISHING_KAFKA_SERVER
          value: ajna0-broker1-0-prd.data.sfdc.net:9093
        - name: BUFFER_IN_TOPIC
          value: sfdc.prod.cre__prd.ajna_local__cre_inbound_CCP_Shared_Dev
        - name: METRICS_KAFKA_TOPIC
          value: sfdc.prod.cre__prd.ajna_local__cre_metrics_CCP_Shared_Dev
        - name: METRICS_KAFKA_SERVER
          value: ajna0-broker1-0-prd.data.sfdc.net:9093
        - name: METRICS_KAFKA_GROUP_ID
          value: cre-sp-ccp-dev
        - name: SFDC_ENVIRONMENT
          value: ccp-dev
        - name: METRICS_KAFKA_ENABLED
          value: true
        - name: MADDOG_CLIENT_KEYSTORE
          value: maddog/maddog-client-keystore.json
        - name: MADDOG_CLIENT_TRUSTSTORE
          value: maddog/maddog-client-truststore.json
        - name: METRICS_FUNNEL_URI
          value: http://ajna0-funnel1-0-prd.data.sfdc.net
        - name: CONTROLPLANE_ENDPOINT
          value: http://cre-control-plane-ccp-dev.retail-cre.localhost.mesh.force.com:5442
        - name: CONTROLPLANE_REST_TESTING_ENABLED
          value: true
        - name: CONTROLPLANE_REST_ENDPOINT
          value: http://cre-control-plane-ccp-dev.retail-cre.localhost.mesh.force.com:5442
        - name: DUMMY_RESTART_VAR
          value: helloworld1
        - name: ENABLE_BATCH_ORPHAN_CHECKS
          value: true
        - name: JVM_ARGS
          value: "-verbose:gc -XX:+PrintGCDateStamps -XX:+PrintHeapAtGC
                  -XX:+PrintPromotionFailure -XX:+PrintTenuringDistribution -XX:+PrintGCDetails
                  -XX:+PrintGCDateStamps -XX:+PrintGCApplicationStoppedTime
                  -XX:+PrintGCApplicationConcurrentTime -XX:+PrintGCCause -XX:+DisableExplicitGC
                  -Xloggc:/opt/cre/cre-sp-ccp-dev/verbosegc_$(FUNCTION_INSTANCE_NAME).log
                  -XX:+UseGCLogFileRotation -XX:NumberOfGCLogFiles=5 -XX:GCLogFileSize=20M
                  -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/opt/cre/cre-sp-ccp-dev
                  -Dcom.sun.management.jmxremote.port=8898
                  -Dcom.sun.management.jmxremote.rmi.port=8898
                  -Dcom.sun.management.jmxremote.ssl=false
                  -Dcom.sun.management.jmxremote.authenticate=false
                  -Dlogging.level.com.salesforce=INFO
                  -Xmx4G -Xms4G -XX:ParallelGCThreads=8"
      ports:
      - containerPort: 8080
      - containerPort: 7022
      - containerPort: 15372
      resources:
        limits: { cpu: "2", memory: "6Gi" }
        requests: { cpu: "2", memory: "5Gi" }
      livenessProbe:
        exec:
            command:
            - ls
        initialDelaySeconds: 30
      volumeMounts:
      - mountPath: /client-certs
        name: client-certs
      - mountPath: /server-certs
        name: server-certs
      - mountPath: /opt/cre/cre-sp-ccp-dev
        name: logvol
    - name: sherpa-cre-stream-processing
      # Each commit to master for https://git.soma.salesforce.com/servicelibs/sherpa-envoy/commits/master has an image created.
      # Use the full git SHA as the docker image tag.
      image: sfci/servicelibs/sherpa-envoy:213d5137f0015e81c59afe6f93f6ab775dc4798b
      volumeMounts:
      - mountPath: /log
        name: sherpa-log-volume
      - mountPath: /client-certs
        name: client-certs
      - mountPath: /server-certs
        name: server-certs
      env:
        - name: SFDC_ENVIRONMENT
          value: stmfa
      resources:
        limits: { cpu: "1", memory: "1Gi" }
        requests: { cpu: "1", memory: "1Gi" }
      ports:
      - containerPort: 7442
        name: sh-in-http1-tls
      - containerPort: 15373 # Sherpa admin port. This can be handy when debugging issues.
        name: sherpa-in-admin
      livenessProbe:
        exec:
          command:
          - "/home/sfdc-sherpa/bin/is-alive"
        initialDelaySeconds: 120
        periodSeconds: 5
      readinessProbe:
        exec:
          command:
          - "/home/sfdc-sherpa/bin/is-ready"
        initialDelaySeconds: 110
        periodSeconds: 5
    - name: beacon
      image: sfci/servicelibs/beacon:f6445b2b299f232eda1e0be9739b8242153478ea
      args:
      - -endpoint
      - retail-cre/cre-sp-ccp-dev:DATACENTER_ALLENV:7442
      resources:
        limits: { cpu: "1", memory: "1Gi" }
        requests: { cpu: "1", memory: "1Gi" }
      livenessProbe:
        initialDelaySeconds: 5
        exec:
          command:
          - "/home/scone/is-alive.sh"
    volumes:
    - name: logvol
      hostPath:
        path: /home/sfdc-cre/logs/cre-sp-ccp-dev
    - name: client-certs
      maddogCert:
        type: client
    - name: server-certs
      maddogCert:
        type: server
        lbnames:
          - cre-sp-ccp-dev-lb
    - name: sherpa-log-volume
      hostPath:
        path: /home/sfdc-sherpa/logs
  loadbalancers:
  - lbname: cre-sp-ccp-dev-lb
    function: cre-sp-ccp-dev
    nodeExposed: true
    slbenabled: true
    ports:
      - port: 8093
        targetport: 7022
  - lbname: cre-sp-ccp-dev
    function: cre-sp-ccp-dev
    ports:
      - lbtype: dsr
        port: 7442
        targetport: 7442
        name: https-cre
