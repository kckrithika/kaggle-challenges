# Manifest Syntax: https://sfdc.co/sam-manifest-format
apiVersion: v1
 
system:
  notifications:
    email:
    - coreserviceprotection@salesforce.com
  functions:
  # service name
  - name: spaas
    
    # number of instances ("kpods") to deploy and run
    # recommended min: 3 for availability
    count: 3
    
    # Docker image(s) that make up one instance of the service
    containers:
    - name: spaas
      #Prod image cannot be used directly in sam sandbox?
      image: sfci/service-protection/sps:0.0.4.22
      #image: ops0-artifactrepo2-0-prd.data.sfdc.net/docker-sfci-dev/sfci/service-protection/sps:0.0.2.22
      # set container environment variables
      env:
      - name: SFDC_ENVIRONMENT
        value: sconex
        
      # standard ports https://salesforce.quip.com/uHeqAb3s9qsR
      ports:
      - name: management-port
        containerPort: 15400
      - name: grpc-port 
        containerPort: 7020

     # In your startup script, set logging.dir to this location
      # /log is mapped outside the container to the host's filesystem
      volumeMounts:
      - name: logvol 
        mountPath: /log
      - name: spaasclientcert
        mountPath: /clientcerts
      - name: spaasservercert
        mountPath: /servercerts
      # SAM will bounce the container if this returns an HTTP response code other than 200-399
      #replace with standard scone health monitoring
      livenessProbe:
        # SAM will wait this long after starting the container before first checking
        initialDelaySeconds: 30
        httpGet:
          path: /manage/health
          port: 15400
      readinessProbe:
        httpGet:
          path: /manage/health
          port: 15400
        initialDelaySeconds: 60

    - name: sherpa
      image: sfci/servicelibs/sherpa-envoy:1.0.1
      ports:
      - name: sherpa-in
        containerPort: 7012
      - name: sherpa-in-tls
        containerPort: 7443
      - name: sherpa-adm
        containerPort: 15373
      env:
      - name: SFDC_ENVIRONMENT
        value: sconex
      resources:
        limits: { cpu: "1", memory: "1Gi" }
        requests: { cpu: "1", memory: "1Gi" }
      volumeMounts:
      - mountPath: /client-certs
        name: spaasclientcert
      - mountPath: /server-certs
        name: spaasservercert
      livenessProbe:
        exec:
          command:
          - ./bin/is-alive
        initialDelaySeconds: 20
        periodSeconds: 5
      readinessProbe:
        exec:
          command:
          - ./bin/is-ready
        initialDelaySeconds: 15
        periodSeconds: 5
      terminationMessagePolicy: FallbackToLogsOnError

    - name: beacon-spaas
      # https://sconelibci.dop.sfdc.net/job/servicelibs/job/beacon/job/master/216/
      image: sfci/servicelibs/beacon:cec13ceb9fc5aed0ce462031a01b2dd5ef73d5ee
      env:
      - name: SFDC_ENVIRONMENT
        value: sconex
      args:
      # Non-namespaced, plaintext
      - -endpoint
      - spaas:DATACENTER_ALLENV:7020
       # Namespaced, TLS
      - -endpoint
      - service-protection/spaas:DATACENTER_ALLENV:7443 
      - -logging.dir
      - /log
      livenessProbe:
        initialDelaySeconds: 5
        exec:
          command:
          - "/home/scone/is-alive.sh"
      volumeMounts:
      - mountPath: /log
        name: logvol
    # Maps volumeMounts from containers to volumes (which map to host filesystem locations)
    # This is used for sending logs to Splunk until SAM/DVA logging pipeline is up
    volumes:
    - name: logvol
      hostPath:
        path: /home/sfdc-spaas/logs
    - name: spaasclientcert
      maddogCert:
        type: client
    - name: spaasservercert
      maddogCert:
        type: server
                 
  loadbalancers:
  - lbname: spaaslb
    function: spaas
    nodeExposed: true
    ports:
      - port: 7022
        targetport: 7020
      - lbtype: http
        port: 15399
        targetport: 15400
    slbEnabled: true