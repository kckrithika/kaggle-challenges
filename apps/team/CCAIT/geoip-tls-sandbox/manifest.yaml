# Fully working manifest that provisions 2 functions:
# Server: geoip-tls:
#     1. geoip-database: used by geoip service
#     2. geoip-backend: gRPC service
#     3. beacon: announcer sidecar for geoip-tls
#     4. sherpa: sidecar proxy for geoip-backend
#
# Client: geoip-tls-demo:
#     1. geoip-frontend: gRPC client (including web ui) for accessing geoip-tls function
#     2. sherpa: sidecar proxy for geoip-frontend
#
# For more info on ports see https://git.soma.salesforce.com/servicelibs/sherpa#ports

apiVersion: v1

system:
  functions:
  - name: geoip-tls
    count: 3
    containers:

    - name: geoip-database
      image: ops0-artifactrepo1-0-prd.data.sfdc.net/docker-sam/ccait/geoip2-database:20170604
      # SAM insists on a liveness probe for containers so we need to keep the data container running via supported -d arg
      args: ["-d"]
      livenessProbe:
        exec:
          command: ["ls", "/database/GeoIP2-City.mmdb"]
        initialDelaySeconds: 10
        periodSeconds: 5
      volumeMounts:
        - name: maxmind-volume
          mountPath: /database

    # gRPC service that is only called directly by sherpa sidecar proxy
    - name: geoip-backend
      # Pushed by this build: https://sconelibci.dop.sfdc.net/job/geoip/job/geoip/job/master/10
      image: ops0-artifactrepo2-0-prd.data.sfdc.net/docker-sfci-dev/sfci/ccait/geoip:8d0126e7fc0ac428347444a3a458dfc68842d24e
      env:
      - name: SCONE_SERVICE_NAME
        value: "geoip-tls"
      - name: JAVA_OPTS
        value: "-Xms512m -Xmx512m"
      - name: SFDC_ENVIRONMENT
        value: "sam"
      - name: COM_MAXMIND_DATABASE_FILE
        value: "/dw/data/GeoIP2-City.mmdb"
      - name: LOGGING_DIR
        value: "/log"
      resources:
        limits: { cpu: "1", memory: "1Gi" }
        requests: { cpu: "1", memory: "1Gi" }
      volumeMounts:
        - name: maxmind-volume
          mountPath: /dw/data
        - name: geoip-log-volume
          mountPath: /log
      ports:
        - containerPort: 7020
          name: grpc
      livenessProbe:
        httpGet:
          path: /manage/health
          port: 15372
        initialDelaySeconds: 130
      readinessProbe:
        httpGet:
          path: /manage/health
          port: 15372
        initialDelaySeconds: 115

    # Super simple app that announces our namespaced service: ccait/geoip-tls on port 7443 which is sherpa's
    # incoming http2+TLS port.
    - name: beacon
      image: ops0-artifactrepo1-0-prd.data.sfdc.net/docker-sam/servicemesh/beacon:1.0.0
      env:
      - name: SFDC_ENVIRONMENT
        value: "sam"
      args:
      - -endpoint
      - ccait/geoip-tls:DATACENTER:7443
      livenessProbe:
        initialDelaySeconds: 5
        exec:
          command:
            - "/home/scone/is-alive.sh"

    - name: sherpa
      image: sfci/servicelibs/sherpa:2.0.23
      args: ["--zipkin-rate", "0.0"]
      env:
      - name: SFDC_ENVIRONMENT
        value: "sam"
      resources:
        limits: { cpu: "1", memory: "1Gi" }
        requests: { cpu: "1", memory: "1Gi" }
      volumeMounts:
        - name: sherpa-log-volume
          mountPath: /log
        - name: geoip-tls-client-cert
          mountPath: /client-certs
        - name: geoip-tls-server-cert
          mountPath: /server-certs
      ports:
      - containerPort: 7443
        name: sherpa-h2-tls
      - containerPort: 15373
        name: sherpa-admin
      livenessProbe:
        exec:
          command:
          - "./bin/is-alive"
        initialDelaySeconds: 120
        periodSeconds: 5
      readinessProbe:
        exec:
          command:
          - "./bin/is-ready"
        initialDelaySeconds: 110
        periodSeconds: 5


    volumes:
    - name: maxmind-volume
      emptyDir: {}
    - name: geoip-log-volume
      hostPath:
        path: /home/sfdc-geoip/logs
    - name: sherpa-log-volume
      hostPath:
        path: /home/sfdc-sherpa/logs
    - name: geoip-tls-client-cert
      maddogCert:
        type: client
    - name: geoip-tls-server-cert
      maddogCert:
        type: server

  - name: geoip-tls-demo
    count: 1
    containers:

    - name: geoip-frontend
      image: ops0-artifactrepo1-0-prd.data.sfdc.net/docker-sam/ccait/geoip2-demo:1.0.6-snapshot
      env:
        - name: JAVA_OPTS
          value: "-Xms512m -Xmx512m"
        - name: SFDC_ENVIRONMENT
          value: "sam"
        - name: GRPC_ROUTING_GEOIP_HOST
          value: geoip-tls.ccait.localhost.mesh.force.com
        - name: GRPC_ROUTING_GEOIP_PORT
          value: 5443
      resources:
        limits: { cpu: "1", memory: "1Gi" }
        requests: { cpu: "1", memory: "1Gi" }
      ports:
        - containerPort: 8080
      livenessProbe:
        httpGet:
          path: /manage/health
          port: 15372
        initialDelaySeconds: 130
      readinessProbe:
        httpGet:
          path: /manage/health
          port: 15372
        initialDelaySeconds: 115

    - name: sherpa
      image: sfci/servicelibs/sherpa:2.0.23
      args: ["--zipkin-rate", "0.0"]
      env:
      - name: SFDC_ENVIRONMENT
        value: "sam"
      resources:
        limits: { cpu: "1", memory: "1Gi" }
        requests: { cpu: "1", memory: "1Gi" }
      volumeMounts:
        - name: sherpa-log-volume
          mountPath: /log
        - name: geoip-tls-demo-client-cert
          mountPath: /client-certs
        - name: geoip-tls-demo-server-cert
          mountPath: /server-certs
      ports:
      - containerPort: 15373
        name: sherpa-admin
      livenessProbe:
        exec:
          command:
          - "./bin/is-alive"
        initialDelaySeconds: 120
        periodSeconds: 5
      readinessProbe:
        exec:
          command:
          - "./bin/is-ready"
        initialDelaySeconds: 110

    volumes:
    - name: sherpa-log-volume
      hostPath:
        path: /home/sfdc-sherpa/logs
    - name: geoip-tls-demo-client-cert
      maddogCert:
        type: client
    - name: geoip-tls-demo-server-cert
      maddogCert:
        type: server

  loadbalancers:
  - lbname: geoip-tls-frontend-lb
    function: geoip-tls-demo
    slbEnabled: true
    nodeExposed: true
    ports:
      - port: 45081
        targetport: 8080
