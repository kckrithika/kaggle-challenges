apiVersion: v1

system:
  notifications:
    email:
      - aiacob@salesforce.com
  functions:
  - name: expreport-cache-builder
    count: 1
    volumes:
      - name: pki-server-cert
        maddogCert:
          type: server
      - name: redisauthvol
        secret:
          secretName: csc-redis-auth-0
      - name: logvol
        hostPath:
          path: /var/log/report-cache-builder
    containers:
    - name: expreport-cache-builder
      image: ops0-artifactrepo1-0-prd.data.sfdc.net/docker-sam/aiacob/andreis-cache-builder:20180906105011
      ports:
      - name: provider-https
        containerPort: 8443
      - name: consumer
        containerPort: 8081
      - name: consumer-https
        containerPort: 8444
      resources:
        limits: { cpu: "2", memory: "20Gi" }
        requests: { cpu: "2", memory: "20Gi" }
      volumeMounts:
      - mountPath: /var/log/report-cache-builder
        name: logvol
      - mountPath: /serverCert
        name: pki-server-cert
        readOnly: true
      - mountPath: /var/secrets/redis
        name: redisauthvol
        readOnly: true
      env:
      - name: DUMMY_UNUSED_ENV_VAR_FOR_POD_BOUNCE
        value: 8
      - name: ReportCollector_datastore
        value: redisIndex
      - name: ReportCollector_redis_host
        value: $(EXPREDISNOHALB_SERVICE_HOST)
      - name: ReportCollector_redis_port
        value: $(EXPREDISNOHALB_SERVICE_PORT)
      - name: ReportCollector_redis_fullPathToAuthFile
        value: /var/secrets/redis/auth
      - name: ReportCollector_app_http_enabled
        value: true
      - name: ReportCollector_app_https_enabled
        value: true
      - name: ReportCollector_app_https_consumerPort
        value: 8444
      - name: ReportCollector_app_https_clientAuth
        value: REQUEST
      - name: ReportCollector_app_https_dynamicCertificateOptions_caCert
        value: /serverCert/ca.pem
      - name: ReportCollector_app_https_dynamicCertificateOptions_certificateDir
        value: /serverCert/server/
      - name: ReportCollector_app_https_supportCompression
        value: true
      - name: ReportCollector_ajna_publishEnabled
        value: true
      - name: ReportCollector_ajna_retry_maxTries
        value: 10
      - name: ReportCollector_ajna_retry_delayMs
        value: 1000
      - name: ReportCollector_app_verticleCounts_ProviderEndpointVerticle
        value: 1
      - name: ReportCollector_app_verticleCounts_ConsumerEndpointVerticle
        value: 10
      - name: ReportCollector_cacheBuilder_enabled
        value: true
      - name: ReportCollector_cacheBuilder_defaultCacheBuilderParams_minDelay
        value: 300000
      - name: ReportCollector_cacheBuilder_cacheDir
        value: /var/cache/report-collector/consumer-cache/
      - name: ReportCollector_cacheBuilder_cacheBuilders
        value: |
             [
              { "filter": { "type": "watchdog", "providerId": "network-nvt" }, "maxDelay": 20000 },
              { "filter": { "type": "watchdog", "providerId": "grok.server_watchdog" }, "maxDelay": 20000 },
              { "filter": { "type": "watchdog", "providerId": "sandman" }, "maxDelay": 20000 },
              { "filter": { "type": "watchdog", "providerId": "netmgt.sandman" }, "maxDelay": 20000 },
              { "filter": { "type": "observer", "providerId": "netmgt.nhal_client" }, "maxDelay": 20000 },
              { "filter": { "type": "observer", "providerId": "netmgt.sandman" }, "maxDelay": 20000 },
              { "filter": { "type": "observer", "providerId": "sandman" }, "maxDelay": 20000 },
              { "filter": { "providerId": "infrastructure-watchdog" }, "minDelay": 200000, "maxDelay": 300000 },
              { "filter": { "providerId": "slwd" }, "minDelay": 420000, "maxDelay": 840000 },
              { "filter": { "providerId": "vom-system" }, "minDelay": 3600000, "maxDelay": 14400000 },
              { "filter": { "providerId": "vom-tnrp" }, "minDelay": 3600000, "maxDelay": 14400000 },
              { "filter": { "providerId": "racktastic" },"minDelay": 3600000, "maxDelay": 14400000 },
              { "filter": { "providerId": "vom-observations" }, "minDelay": 3600000, "maxDelay": 14400000 },
              { "filter": { "providerId": "service-config-agent" }, "minDelay": 3600000, "maxDelay": 14400000 },
              { "filter": { "providerId": "csc-health.cname-repcollavailwd" }, "minDelay": 3600000, "maxDelay": 14400000 },
              { "filter": { "providerId": "csc-health.exprepcollavailwd" }, "minDelay": 3600000, "maxDelay": 14400000 },
             ]

      livenessProbe:
        httpGet:
          scheme: HTTPS
          path: /healthz
          port: 8443
        initialDelaySeconds: 5
      command: ["/bin/sh", "-c"]
      args: ["
      export ReportCollector_ajna_funnelHost=${SFDC_METRICS_SERVICE_HOST} ;
      export ReportCollector_ajna_funnelPort=${SFDC_METRICS_SERVICE_PORT} ;
      export ReportCollector_ajna_datacenter=${KINGDOM} ;
      export ReportCollector_ajna_device=${ESTATE}.${FUNCTION_NAMESPACE}.${FUNCTION}.${FUNCTION_INSTANCE_NAME} ;

      ${JAVA_HOME}/bin/java
        -Dlogback.configurationFile=${APP_DIR}/logback-docker.xml
        -Dvertx.disableFileCPResolving=true
        -Dvertx.logger-delegate-factory-class-name=io.vertx.core.logging.SLF4JLogDelegateFactory
        -Dvertx.metrics.options.enabled=true
        -Dvertx.metrics.options.registryName=vertx-registry
        -Dvertx.disableDnsResolver=true
        -Dlog_dir=${LOG_DIR}
        -Dinstance=${FUNCTION_INSTANCE_NAME}
        -d64
        -Xmx40g
        -jar ${JAR_PATH}
      "]

  loadbalancers:
  - lbname: expreportcachebuilderlb
    function: expreport-cache-builder
    nodeExposed: true
    ports:
    - port: 28449
      targetport: 8081
    - port: 28450
      targetport: 8444
