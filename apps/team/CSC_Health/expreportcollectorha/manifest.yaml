apiVersion: v1

system:
  notifications:
    email:
      - cschealthcp@salesforce.com
  functions:
  - name: expreport-collectorha
    count: 3
    volumes:
      - name: servercertvol
        secret:
          secretName: csc-rc-certificates
      - name: redisauthvol
        secret:
          secretName: csc-redis-auth-0
      - name: logvol
        hostPath:
          path: /var/log/report-collector
    containers:
    - name: expreport-collectorha
      image: tnrp/csc-health/report-collector:1.9.0-0000161-95d31d29
      ports:
      - name: provider
        containerPort: 8080
      - name: consumer
        containerPort: 8081
      - name: provider-https
        containerPort: 8443
      - name: consumer-https
        containerPort: 8444
      volumeMounts:
      - mountPath: /var/log/report-collector
        name: logvol
      - mountPath: /var/lib/report-collector/certificates/server/
        name: servercertvol
        readOnly: true
      - mountPath: /var/secrets/redis
        name: redisauthvol
        readOnly: true
      env:
      - name: ReportCollector_redis_host
        value: $(EXPREDISNOHALB_SERVICE_HOST)
      - name: ReportCollector_redis_port
        value: $(EXPREDISNOHALB_SERVICE_PORT)
      - name: ReportCollector_redis_fullPathToAuthFile
        value: /var/secrets/redis/auth
      - name: ReportCollector_app_https_enabled
        value: true
      - name: ReportCollector_app_https_providerPort
        value: 8443
      - name: ReportCollector_app_https_consumerPort
        value: 8444
      - name: ReportCollector_app_https_clientAuth
        value: REQUEST
      - name: ReportCollector_app_https_caCertificate
        value: /var/lib/report-collector/certificates/sfdc-internal-ca.crt
      - name: ReportCollector_app_https_certificate
        value: /var/lib/report-collector/certificates/server/rc_server.crt
      - name: ReportCollector_app_https_privateKey
        value: /var/lib/report-collector/certificates/server/rc_server.key
      livenessProbe:
        httpGet:
          path: /healthz
          port: 8080
        initialDelaySeconds: 5
      command: ["/bin/sh", "-c"]
      args: ["
      export ReportCollector_ajna_datacenter=${KINGDOM} ;
      export ReportCollector_ajna_device=${ESTATE}.${FUNCTION_NAMESPACE}.${FUNCTION}.${FUNCTION_INSTANCE_NAME} ;
      ${JAVA_HOME}/bin/java
        -Dlogback.configurationFile=${APP_DIR}/logback-docker.xml
        -Dvertx.disableFileCPResolving=true
        -Dvertx.logger-delegate-factory-class-name=io.vertx.core.logging.SLF4JLogDelegateFactory
        -Dvertx.metrics.options.enabled=true
        -Dvertx.metrics.options.registryName=vertx-registry
        -Dvertx.disableDnsResolver=true
        -Dlog_dir=${LOG_DIR}
        -Dinstance=${FUNCTION_INSTANCE_NAME}
        -jar ${JAR_PATH}
      "]
  - name: csc-health-stale-log-cleaner
    image: tnrp/csc-health/report-collector:1.9.0-0000161-95d31d29
    volumeMounts:
      - mountPath: /var/log/report-collector
        name: logvol
    env:
      - name: CLEANUP_FOLDER
        value: /var/log/report-collector
      - name: CLEANUP_PERIOD_SECONDS
        value: 1800
      - name: CLEANUP_FILE_PATTERN
        value: "*tmp*"
      - name: CLEANUP_FILE_AGE_MINUTES
        value: 30
    livenessProbe:
      exec:
        command:
        - echo
        - always_healthy
      initialDelaySeconds: 5
      periodSeconds: 30
    command: ["/bin/sh", "-c"]
    args: ['
        while sleep ${CLEANUP_PERIOD_SECONDS};
        do
            echo $(date) "Processing" $CLEANUP_FOLDER;
            if [ ! -d "$CLEANUP_FOLDER" ]; then
                echo $CLEANUP_FOLDER " doesn''t exist";
                continue;
            fi;

            find $CLEANUP_FOLDER -name "$CLEANUP_FILE_PATTERN" -mmin +$CLEANUP_FILE_AGE_MINUTES -type f -print -delete;
        done
    ']
  - name: expredisnoha
    count: 1
    volumes:
      - name: redisauthvol
        secret:
          secretName: csc-redis-auth-0
    containers:
    - name: expredis
      image: tnrp/csc-health/redis-auth:3.2
      volumeMounts:
      - mountPath: /var/secrets/redis
        name: redisauthvol
        readOnly: true
      ports:
      - containerPort: 6379
      logs:
      - directory: /var/log/redis
      livenessProbe:
        tcpSocket:
          port: 6379
        initialDelaySeconds: 5

  loadbalancers:
  - lbname: expreportcollectorhalb
    function: expreport-collectorha
    nodeExposed: true
    ports:
      # LB was supposed to allow SSL on the backend, but its not currently
      # supported, so we will use non SSL but on these node ports (18443, 18444)
      # since its the one exposed in estates for sam_minionreportcollector
    - port: 28443
      targetport: 8080
    - port: 28444
      targetport: 8081
  - lbname: expredisnohalb
    function: expredisnoha
    nodeExposed: true
    ports:
      - port: 26379
        targetport: 6379
