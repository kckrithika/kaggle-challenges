apiVersion: v1

system:
  functions:
  - name: observation-service
    count: 1
    containers:
    - name: observation-service-logrotator
      image: tnrp/csc-health/observation-service:observation-service-0000020-530bf5c2
      volumeMounts:
        - mountPath: /home/sfdc-csc-health/observation-service
          name: logvol
      livenessProbe:
        exec:
          command:
          - echo
          - always_healthy
        initialDelaySeconds: 5
        periodSeconds: 30
      command: ["/bin/sh", "-c"]
      args: ['
        printf "compress\n
        /home/sfdc-csc-health/observation-service/observation-service-app.log {\n
          rotate 30\n
          daily\n
          copytruncate\n
          delaycompress\n
        }" > /tmp/observation-service-logrotate.conf;
        status_file=/home/sfdc-csc-health/observation-service/observation-service-logrotate.status;
        cmd="/usr/sbin/logrotate -v -s ${status_file} /tmp/observation-service-logrotate.conf";
        while true;
        do
          printf "\n`date`\n\n";
          $cmd;
          sleep 21600;
        done
      ']
    - name: observation-service
      image: tnrp/csc-health/observation-service:observation-service-0000020-530bf5c2
      ports:
      - containerPort: 8080
      resources:
        limits: { cpu: "10", memory: "5Gi" }
        requests: { cpu: "10", memory: "5Gi" }
      volumeMounts:
        - mountPath: /var/secrets
          name: secretvol
          readOnly: true
        - mountPath: /home/sfdc-csc-health/observation-service
          name: logvol
      env:
      - name: OBS_AJNA_ENABLED
        value: true
      - name: OBS_GROK_CERTPATH
        value: /var/secrets/grok-client.crt.pem
      - name: OBS_GROK_KEYPATH
        value: /var/secrets/grok-client.key
      - name: OBS_HEALTH_PORT
        value: 8080
      - name: OBS_LOG_FILE
        value: /home/sfdc-csc-health/observation-service/observation-service-app.log
      livenessProbe:
        httpGet:
          path: /healthz
          port: 8080
        initialDelaySeconds: 5
      command: ["/bin/sh", "-c"]
      args: ["
        export OBS_AJNA_FUNNELENDPOINT=http://${SFDC_METRICS_SERVICE_HOST}:${SFDC_METRICS_SERVICE_PORT} ;
        export OBS_AJNA_DATACENTER=${KINGDOM} ;
        export OBS_AJNA_DEVICE=${ESTATE}.${FUNCTION_NAMESPACE}.${FUNCTION}.${FUNCTION_INSTANCE_NAME} ;
        export OBS_GROK_ENDPOINT=https://ops0-grok1-0-${KINGDOM}.data.sfdc.net ;
        case ${KINGDOM} in
          prd)
            export OBS_REPORTCOLLECTOR_ENDPOINT=https://ops0-health1-1-${KINGDOM}.eng.sfdc.net:18444
            ;;
          *)
            export OBS_REPORTCOLLECTOR_ENDPOINT=https://ops0-health1-1-${KINGDOM}.ops.sfdc.net:18444
            ;;
        esac ;
        /observationservice
      "]
    volumes:
      - name: secretvol
        secret:
          secretName: csc-health-secret
      - name: logvol
        hostPath:
          path: /home/sfdc-csc-health/observation-service

  loadbalancers:
  - lbname: observationservicelb
    function: observation-service
    ports:
    - port: 80
      targetport: 8080
