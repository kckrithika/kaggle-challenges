apiVersion: v1

system:
  functions:
  - name: ordering-envoy-tls
    count: 1
    labels:
      app: ordering-envoy-tls
      prat-test: true
    annotations:
      "sherpa-injector.service-mesh/inject": "disabled"
      "sherpa-injector.service-mesh/canary": "disabled"
    containers:
    - name: sherpa
      image: ops0-artifactrepo1-0-prd.data.sfdc.net/docker-sam/npshenichnyy/sherpa:dev-20191010-1040
      ports:
      - containerPort: 7443
        name: sherpa-grpc-tls
      - containerPort: 7442
        name: sherpa-http-tls
      - containerPort: 15373
        name: sherpa-adm
      env:
      - name: SFDC_ENVIRONMENT
        value: mesh
      resources:
        limits:
          cpu: "1"
          memory: "1Gi"
      volumeMounts:
      - mountPath: /client-certs
        name: tls-client-cert
      - mountPath: /server-certs
        name: tls-server-cert
      livenessProbe:
        exec:
          command:
          - "./bin/is-alive"
        initialDelaySeconds: 60
        periodSeconds: 5
      readinessProbe:
        exec:
          command:
          - "./bin/is-ready"
        initialDelaySeconds: 50
        periodSeconds: 5

    - name: ordering
      # https://sfcirelease.dop.sfdc.net/job/services/job/sfdc-bazel_projects_services_examples_ordering/job/sfdc-bazel/job/master/5
      image: sfci/services/sfdc-bazel/scone/ordering:685f3d3e5
      args:
      - --tracing.zipkinServer=http://zipkindirecttls.funnel.localhost.mesh.force.com:5442/api/v2/spans
      env:
      - name: SFDC_ENVIRONMENT
        value: mesh
      - name: JAVA_OPTS
        value: "-Dscone.service.name=ordering-service-envoy-tls -Dshipping.dest=shipping-envoy-tls.service-mesh.localhost.mesh.force.com:5443 -Dshipping.interval=5000 -Dmanagement.server.port=15372"
      - name: FAKE_ENV_VAR_INCREMENT_TO_TRIGGER_SAM_DEPLOY
        value: "1"      
      ports:
      - containerPort: 7020
        name: grpc-svc
      - containerPort: 15372
        name: scone-mgmt
      livenessProbe:
        initialDelaySeconds: 120
        httpGet:
          path: /manage/health
          port: 15372

    volumes:
    - name: tls-client-cert
      maddogCert:
        type: client
    - name: tls-server-cert
      maddogCert:
        type: server

  loadbalancers:
  - lbname: ordering-envoy-tls-lb
    nodeExposed: true
    function: ordering-envoy-tls
    ports:
    - lbtype: dsr
      port: 15379
      targetport: 15372
