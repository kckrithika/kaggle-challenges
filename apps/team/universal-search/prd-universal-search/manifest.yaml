apiVersion: v1

system:
  notifications:
    email:
    - universalsearch@salesforce.com
  functions:
  - name: universal-search
    count: 3
    volumes:
    - name: client-cert-vol
      maddogCert:
        type: client
    - name: server-cert-vol
      maddogCert:
        type: server
    - name: usmt-log-vol
      hostpath:
        path: /home/sfdc-usmt/logs
    - name: sherpa-log-vol
      hostpath:
        path: /home/sfdc-sherpa/logs
    - name: secret-vol
      k4aSecret:
        secretName: solrcloudcli-keytab-prd
    containers:
    - name: universal-search
      image: ops0-artifactrepo1-0-prd.data.sfdc.net/docker-sam/universal-search/universal-search:0.7.9
      ports:
      - name: service-port
        containerPort: 7020
      - name: admin-port
        containerPort: 15372
      resources:
        limits: { cpu: "2", memory: "8Gi" }
        requests: { cpu: "2", memory: "8Gi" }
      env:
      - name: SFDC_ENVIRONMENT
        value: "stmfa"
      - name: KRB5_CONF
        value: /home/sfdc-usmt/krb-config/krb5_searchzk_prd.conf
      - name: JAAS_CONF
        value: /home/sfdc-usmt/krb-config/jaas-prd.conf
      volumeMounts:
      - name: client-cert-vol
        mountPath: /certs
      - name: usmt-log-vol
        mountPath: /home/sfdc-usmt/logs
      - name: secret-vol
        mountPath: /secrets/
        readOnly: true
      livenessProbe:
        httpGet:
          path: /manage/health
          port: 15372
        initialDelaySeconds: 120
        timeoutSeconds: 10
        periodSeconds: 120
        failureThreshold: 1
    - name: sherpa
      image: sfci/servicelibs/sherpa:2.0.27
      ports:
      # HTTP port for exposing to SLB for IoT
      - containerPort: 7012
        name: sherpa-in
      - containerPort: 7443
        name: sherpa-tls
      - containerPort: 15373
        name: sherpa-adm
      env:
      - name: SFDC_ENVIRONMENT
        value: "stmfa"
      resources:
        limits: { cpu: "1", memory: "1Gi" }
        requests: { cpu: "1", memory: "1Gi" }
      volumeMounts:
      - name: server-cert-vol
        mountPath: /server-certs
      - name: sherpa-log-vol
        mountPath: /log
      livenessProbe:
        exec:
          command:
          - "./bin/is-alive"
        initialDelaySeconds: 120
        periodSeconds: 5
      readinessProbe:
        exec:
          command:
          - "./bin/is-ready"
        initialDelaySeconds: 110
        periodSeconds: 5
    - name: beacon
      image: sfci/servicelibs/beacon:853c4db9f14805018be6f5e7607ffe65b5648822
      args:
      - -endpoint
      - universal-search/universal-search:DATACENTER_ALLENV:7443
      - -endpoint
      - universal-search-notls/universal-search:DATACENTER_ALLENV:7012
      livenessProbe:
        initialDelaySeconds: 5
        exec:
          command:
          - "/home/scone/is-alive.sh"
  - name: universal-search-synthetics
    count: 1
    volumes:
    - name: synthetics-log-vol
      hostpath:
        path: /home/sfdc-usmt/logs
    - name: client-cert-vol
      maddogCert:
        type: client
    - name: sherpa-log-vol
      hostpath:
        path: /home/sfdc-sherpa/logs
    containers:
    - name: universal-search-synthetics
      image: ops0-artifactrepo1-0-prd.data.sfdc.net/docker-sam/universal-search/universal-search-synthetics:0.0.4
      env:
      - name: SFDC_ENVIRONMENT
        value: "stmfa"
      resources:
        limits: { cpu: "1", memory: "1Gi" }
        requests: { cpu: "1", memory: "1Gi" }
      volumeMounts:
        - name: synthetics-log-vol
          mountPath: /home/sfdc-usmt/logs
      livenessProbe:
        exec:
          command: ["true"]
      readinessProbe:
        exec:
          command:
          - "/home/sfdc-usmt/run.sh"
        initialDelaySeconds: 120
        timeoutSeconds: 30
        periodSeconds: 900
        failureThreshold: 1
    - name: sherpa
      image: sfci/servicelibs/sherpa:2.0.27
      ports:
      - containerPort: 15373
        name: sherpa-adm
      env:
      - name: SFDC_ENVIRONMENT
        value: "stmfa"
      resources:
        limits: { cpu: "1", memory: "1Gi" }
        requests: { cpu: "1", memory: "1Gi" }
      volumeMounts:
      - name: client-cert-vol
        mountPath: /client-certs
      - name: sherpa-log-vol
        mountPath: /log
      livenessProbe:
        exec:
          command:
          - "./bin/is-alive"
        initialDelaySeconds: 120
        periodSeconds: 5
      readinessProbe:
        exec:
          command:
          - "./bin/is-ready"
        initialDelaySeconds: 110
        periodSeconds: 5
  - name: usmt-xlt
    count: 3
    containers:
    - name: usmt-xlt
      image: ops0-artifactrepo1-0-prd.data.sfdc.net/docker-sam/irahim/xlt-agent:20171010
      ports:
      - containerPort: 8500
        name: usmt-xlt-port
      livenessProbe:
        exec:
          command:
          - cat
          - ./bin/agentcontroller.sh
      readinessProbe:
        exec:
          command:
          - cat
          - ./bin/agentcontroller.sh
    - name: sherpa-xlt
      image: sfci/servicelibs/sherpa:2.0.27
      ports:
      # HTTP port for exposing to SLB for IoT
      - containerPort: 7012
        name: sherpa-xlt-in
      - containerPort: 7011
        name: sherpa-xlt-out
      - containerPort: 7443
        name: sherpa-xlt-tls
      - containerPort: 15373
        name: sherpa-xlt-adm
      env:
      - name: SFDC_ENVIRONMENT
        value: "stmfa"
      resources:
        limits: { cpu: "1", memory: "1Gi" }
        requests: { cpu: "1", memory: "1Gi" }
      livenessProbe:
        exec:
          command:
          - "./bin/is-alive"
      readinessProbe:
        exec:
          command:
          - "./bin/is-ready"
  - name: usmt-xlt-master
    count: 1
    volumes:
    - name: test
      hostpath:
        path: /data/test
    - name: test-results
      hostpath:
        path: /data/test-results
    containers:
    - name: master-xlt-controller
      image: ops0-artifactrepo1-0-prd.data.sfdc.net/docker-sam/irahim/master-xlt-controller:irahim-20180820-2da15ca
      # If your service doesn't serve HTTP traffic then you can remove the scone-http 8080 port.
      ports:
      - containerPort: 7020
        name: mxlt-grpc-svc
      - containerPort: 15372
        name: mxlt-scone-mgmt
      env:
      - name: SFDC_ENVIRONMENT
        value: "stmfa"
      resources:
        limits: { cpu: "1", memory: "1Gi" }
        requests: { cpu: "1", memory: "1Gi" }
      livenessProbe:
        initialDelaySeconds: 30
        httpGet:
          path: /manage/health
          port: 15372
      volumeMounts:
      - name: test-results
        mountPath: /data/test-results
      - name: test
        mountPath: /data/test
    - name: universal-search-perf-report-server
      image: ops0-artifactrepo1-0-prd.data.sfdc.net/docker-sam/irahim/universal-search-perf-report-server:irahim-20180820-73716f1
      # If your service doesn't serve HTTP traffic then you can remove the scone-http 8080 port.
      ports:
      - containerPort: 8080
        name: report-http
      env:
      - name: SFDC_ENVIRONMENT
        value: "stmfa"
      resources:
        limits: { cpu: "1", memory: "1Gi" }
        requests: { cpu: "1", memory: "1Gi" }
      livenessProbe:
        initialDelaySeconds: 30
        httpGet:
          path: /
          port: 8080
      volumeMounts:
      - name: test-results
        mountPath: /data/test-results
        readOnly: true
    - name: perf-universal-search-xlt
      image: ops0-artifactrepo1-0-prd.data.sfdc.net/docker-sam/irahim/perf-universal-search-xlt:irahim-20180820-37c4e24
      env:
      - name: SFDC_ENVIRONMENT
        value: "stmfa"
      resources:
        limits: { cpu: "1", memory: "1Gi" }
        requests: { cpu: "1", memory: "1Gi" }
      livenessProbe:
        initialDelaySeconds: 30
        exec:
          command: ["true"]
      volumeMounts:
      - name: test
        mountPath: /data/test
  loadbalancers:
  - function: universal-search
    lbname: universal-search-slb
    ports:
    - port: 7020
      targetport: 7012
    - lbtype: http
      port: 15372
      targetport: 15372
    - lbtype: http
      port: 15373
      targetport: 15373
    slbEnabled: true
